

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Oct 27 12:16:53 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    29  0000                     _ADCON0bits	set	4034
    30  0000                     _ADCON1bits	set	4033
    31  0000                     _ADCON2bits	set	4032
    32  0000                     _ADRESH	set	4036
    33  0000                     _ADRESL	set	4035
    34  0000                     _CCP1CONbits	set	4029
    35  0000                     _CCP2CONbits	set	4026
    36  0000                     _CCPR1L	set	4030
    37  0000                     _CCPR2L	set	4027
    38  0000                     _PIR1bits	set	3998
    39  0000                     _PORTBbits	set	3969
    40  0000                     _PORTCbits	set	3970
    41  0000                     _PORTDbits	set	3971
    42  0000                     _PR2	set	4043
    43  0000                     _RCREG	set	4014
    44  0000                     _RCSTAbits	set	4011
    45  0000                     _SPBRG	set	4015
    46  0000                     _T2CONbits	set	4042
    47  0000                     _TRISAbits	set	3986
    48  0000                     _TRISBbits	set	3987
    49  0000                     _TRISC	set	3988
    50  0000                     _TRISCbits	set	3988
    51  0000                     _TRISDbits	set	3989
    52  0000                     _TXREG	set	4013
    53  0000                     _TXSTAbits	set	4012
    54                           
    55                           	psect	smallconst
    56  001000                     __psmallconst:
    57                           	opt stack 0
    58  001000  00                 	db	0
    59  001001                     STR_3:
    60  001001  4D                 	db	77	;'M'
    61  001002  6F                 	db	111	;'o'
    62  001003  64                 	db	100	;'d'
    63  001004  65                 	db	101	;'e'
    64  001005  20                 	db	32
    65  001006  53                 	db	83	;'S'
    66  001007  55                 	db	85	;'U'
    67  001008  4D                 	db	77	;'M'
    68  001009  4F                 	db	79	;'O'
    69  00100A  20                 	db	32
    70  00100B  61                 	db	97	;'a'
    71  00100C  63                 	db	99	;'c'
    72  00100D  74                 	db	116	;'t'
    73  00100E  69                 	db	105	;'i'
    74  00100F  76                 	db	118	;'v'
    75  001010  65                 	db	101	;'e'
    76  001011  20                 	db	32
    77  001012  21                 	db	33
    78  001013  0A                 	db	10
    79  001014  0D                 	db	13
    80  001015  00                 	db	0
    81  001016                     STR_2:
    82  001016  4D                 	db	77	;'M'
    83  001017  6F                 	db	111	;'o'
    84  001018  64                 	db	100	;'d'
    85  001019  65                 	db	101	;'e'
    86  00101A  20                 	db	32
    87  00101B  63                 	db	99	;'c'
    88  00101C  6F                 	db	111	;'o'
    89  00101D  75                 	db	117	;'u'
    90  00101E  72                 	db	114	;'r'
    91  00101F  73                 	db	115	;'s'
    92  001020  65                 	db	101	;'e'
    93  001021  20                 	db	32
    94  001022  61                 	db	97	;'a'
    95  001023  63                 	db	99	;'c'
    96  001024  74                 	db	116	;'t'
    97  001025  69                 	db	105	;'i'
    98  001026  76                 	db	118	;'v'
    99  001027  65                 	db	101	;'e'
   100  001028  0A                 	db	10
   101  001029  0D                 	db	13
   102  00102A  00                 	db	0
   103  00102B                     STR_1:
   104  00102B  52                 	db	82	;'R'
   105  00102C  6F                 	db	111	;'o'
   106  00102D  62                 	db	98	;'b'
   107  00102E  6F                 	db	111	;'o'
   108  00102F  74                 	db	116	;'t'
   109  001030  20                 	db	32
   110  001031  50                 	db	80	;'P'
   111  001032  52                 	db	82	;'R'
   112  001033  45                 	db	69	;'E'
   113  001034  54                 	db	84	;'T'
   114  001035  20                 	db	32
   115  001036  21                 	db	33
   116  001037  0A                 	db	10
   117  001038  0D                 	db	13
   118  001039  00                 	db	0
   119                           
   120                           ; #config settings
   121  00103A  00                 	db	0	; dummy byte at the end
   122  0000                     
   123                           	psect	cinit
   124  0017E4                     __pcinit:
   125                           	opt stack 0
   126  0017E4                     start_initialization:
   127                           	opt stack 0
   128  0017E4                     __initialization:
   129                           	opt stack 0
   130  0017E4                     end_of_initialization:
   131                           	opt stack 0
   132  0017E4                     __end_of__initialization:
   133                           	opt stack 0
   134  0017E4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   135  0017E6  6EF8               	movwf	tblptru,c
   136  0017E8  0E10               	movlw	high __Lsmallconst
   137  0017EA  6EF7               	movwf	tblptrh,c
   138  0017EC  0100               	movlb	0
   139  0017EE  EF26  F00A         	goto	_main	;jump to C main() function
   140                           tblptru	equ	0xFF8
   141                           tblptrh	equ	0xFF7
   142                           
   143                           	psect	cstackCOMRAM
   144  000001                     __pcstackCOMRAM:
   145                           	opt stack 0
   146  000001                     ??_init_LS:
   147  000001                     ?_read_adc:
   148                           	opt stack 0
   149  000001                     ?_detection_obstacle:
   150                           	opt stack 0
   151  000001                     ?_detection_obstacle_g:
   152                           	opt stack 0
   153  000001                     ?_detection_obstacle_d:
   154                           	opt stack 0
   155  000001                     init_timer2@PR2_value:
   156                           	opt stack 0
   157  000001                     putch@c:
   158                           	opt stack 0
   159  000001                     getch@car:
   160                           	opt stack 0
   161  000001                     vitesse_moteur_gauche@v:
   162                           	opt stack 0
   163  000001                     vitesse_moteur_droit@v:
   164                           	opt stack 0
   165                           
   166                           ; 2 bytes @ 0x0
   167  000001                     	ds	1
   168  000002                     print@text:
   169                           	opt stack 0
   170  000002                     init_LS@i:
   171                           	opt stack 0
   172                           
   173                           ; 2 bytes @ 0x1
   174  000002                     	ds	1
   175  000003                     ??_read_adc:
   176  000003                     ??_vitesse_moteur_gauche:
   177  000003                     ??_vitesse_moteur_droit:
   178  000003                     _detection_obstacle$974:
   179                           	opt stack 0
   180  000003                     _detection_obstacle_g$976:
   181                           	opt stack 0
   182  000003                     _detection_obstacle_d$978:
   183                           	opt stack 0
   184                           
   185                           ; 1 bytes @ 0x2
   186  000003                     	ds	1
   187  000004                     ??_print:
   188                           
   189                           ; 0 bytes @ 0x3
   190  000004                     	ds	1
   191  000005                     ??_init_sumo:
   192  000005                     read_adc@val:
   193                           	opt stack 0
   194                           
   195                           ; 10 bytes @ 0x4
   196  000005                     	ds	1
   197  000006                     print@i:
   198                           	opt stack 0
   199  000006                     init_sumo@i:
   200                           	opt stack 0
   201                           
   202                           ; 2 bytes @ 0x5
   203  000006                     	ds	2
   204  000008                     init_sumo@i_986:
   205                           	opt stack 0
   206                           
   207                           ; 2 bytes @ 0x7
   208  000008                     	ds	2
   209  00000A                     init_sumo@i_987:
   210                           	opt stack 0
   211                           
   212                           ; 2 bytes @ 0x9
   213  00000A                     	ds	2
   214  00000C                     init_sumo@i_988:
   215                           	opt stack 0
   216                           
   217                           ; 2 bytes @ 0xB
   218  00000C                     	ds	3
   219  00000F                     read_adc@i:
   220                           	opt stack 0
   221                           
   222                           ; 2 bytes @ 0xE
   223  00000F                     	ds	2
   224  000011                     ??_mode_sumo:
   225  000011                     mode_course@adcValue:
   226                           	opt stack 0
   227                           
   228                           ; 10 bytes @ 0x10
   229  000011                     	ds	1
   230  000012                     mode_sumo@adcValue:
   231                           	opt stack 0
   232                           
   233                           ; 10 bytes @ 0x11
   234  000012                     	ds	9
   235  00001B                     mode_course@p:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x1A
   239  00001B                     	ds	1
   240  00001C                     mode_sumo@i:
   241                           	opt stack 0
   242                           
   243                           ; 2 bytes @ 0x1B
   244  00001C                     	ds	2
   245  00001E                     mode_sumo@i_993:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x1D
   249  00001E                     	ds	2
   250  000020                     mode_sumo@p:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0x1F
   254  000020                     	ds	2
   255  000022                     main@PR2_value:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0x21
   259  000022                     	ds	2
   260  000024                     main@sumo:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0x23
   264  000024                     	ds	2
   265  000026                     main@course:
   266                           	opt stack 0
   267                           
   268                           ; 2 bytes @ 0x25
   269  000026                     	ds	2
   270  000028                     main@lettre:
   271                           	opt stack 0
   272                           
   273                           ; 1 bytes @ 0x27
   274  000028                     	ds	1
   275                           tblptru	equ	0xFF8
   276                           tblptrh	equ	0xFF7
   277                           
   278 ;;
   279 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   280 ;;
   281 ;; *************** function _main *****************
   282 ;; Defined at:
   283 ;;		line 304 in file "projet_sumo.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;  lettre          1   39[COMRAM] unsigned char 
   288 ;;  course          2   37[COMRAM] int 
   289 ;;  sumo            2   35[COMRAM] int 
   290 ;;  PR2_value       2   33[COMRAM] unsigned int 
   291 ;; Return value:  Size  Location     Type
   292 ;;		None               void
   293 ;; Registers used:
   294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   295 ;; Tracked objects:
   296 ;;		On entry : 0/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   301 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   303 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   304 ;;Total ram usage:        7 bytes
   305 ;; Hardware stack levels required when called:    2
   306 ;; This function calls:
   307 ;;		_getch
   308 ;;		_init_LS
   309 ;;		_init_adc
   310 ;;		_init_moteur
   311 ;;		_init_pwm
   312 ;;		_init_sumo
   313 ;;		_init_timer2
   314 ;;		_init_tor
   315 ;;		_mode_course
   316 ;;		_mode_sumo
   317 ;;		_print
   318 ;;		_vitesse_moteur_droit
   319 ;;		_vitesse_moteur_gauche
   320 ;; This function is called by:
   321 ;;		Startup code after reset
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           	psect	text0
   326  00144C                     __ptext0:
   327                           	opt stack 0
   328  00144C                     _main:
   329                           	opt stack 29
   330                           
   331                           ;projet_sumo.c: 305: TRISC = 0;
   332                           
   333                           ;incstack = 0
   334  00144C  0E00               	movlw	0
   335  00144E  6E94               	movwf	3988,c	;volatile
   336                           
   337                           ;projet_sumo.c: 307: init_LS();
   338  001450  EC5F  F00B         	call	_init_LS	;wreg free
   339                           
   340                           ;projet_sumo.c: 308: init_tor();
   341  001454  EC00  F00C         	call	_init_tor	;wreg free
   342                           
   343                           ;projet_sumo.c: 309: init_adc();
   344  001458  EC8D  F00B         	call	_init_adc	;wreg free
   345                           
   346                           ;projet_sumo.c: 310: init_pwm();
   347  00145C  ECE0  F00B         	call	_init_pwm	;wreg free
   348                           
   349                           ;projet_sumo.c: 311: init_moteur();
   350  001460  ECF9  F00B         	call	_init_moteur	;wreg free
   351                           
   352                           ;projet_sumo.c: 314: unsigned int PR2_value = ((float) 10000000 / (4 * (float) 30000 * (
      +                          float) 1)) - 1;
   353  001464  0E00               	movlw	0
   354  001466  6E23               	movwf	main@PR2_value+1,c
   355  001468  0E52               	movlw	82
   356  00146A  6E22               	movwf	main@PR2_value,c
   357                           
   358                           ;projet_sumo.c: 315: init_timer2(PR2_value);
   359  00146C  5022               	movf	main@PR2_value,w,c
   360  00146E  ECD5  F00B         	call	_init_timer2
   361                           
   362                           ;projet_sumo.c: 317: vitesse_moteur_gauche(0);
   363  001472  0E00               	movlw	0
   364  001474  6E02               	movwf	vitesse_moteur_gauche@v+1,c
   365  001476  0E00               	movlw	0
   366  001478  6E01               	movwf	vitesse_moteur_gauche@v,c
   367  00147A  ECD1  F00A         	call	_vitesse_moteur_gauche	;wreg free
   368                           
   369                           ;projet_sumo.c: 318: vitesse_moteur_droit(0);
   370  00147E  0E00               	movlw	0
   371  001480  6E02               	movwf	vitesse_moteur_droit@v+1,c
   372  001482  0E00               	movlw	0
   373  001484  6E01               	movwf	vitesse_moteur_droit@v,c
   374  001486  EC01  F00B         	call	_vitesse_moteur_droit	;wreg free
   375                           
   376                           ;projet_sumo.c: 320: int sumo = 0;
   377  00148A  0E00               	movlw	0
   378  00148C  6E25               	movwf	main@sumo+1,c
   379  00148E  0E00               	movlw	0
   380  001490  6E24               	movwf	main@sumo,c
   381                           
   382                           ;projet_sumo.c: 321: int course = 0;
   383  001492  0E00               	movlw	0
   384  001494  6E27               	movwf	main@course+1,c
   385  001496  0E00               	movlw	0
   386  001498  6E26               	movwf	main@course,c
   387                           
   388                           ;projet_sumo.c: 323: print("Robot PRET !\n\r");
   389  00149A  0E2B               	movlw	low STR_1
   390  00149C  6E02               	movwf	print@text,c
   391  00149E  0E10               	movlw	high STR_1
   392  0014A0  6E03               	movwf	print@text+1,c
   393  0014A2  EC31  F00B         	call	_print	;wreg free
   394                           
   395                           ;projet_sumo.c: 325: while (!sumo && !course) {
   396  0014A6  D023               	goto	l1359
   397  0014A8                     l1343:
   398                           
   399                           ;projet_sumo.c: 326: char lettre = getch();
   400  0014A8  ECE9  F00B         	call	_getch	;wreg free
   401  0014AC  6E28               	movwf	main@lettre,c
   402                           
   403                           ;projet_sumo.c: 327: if (lettre == 'c') {
   404  0014AE  0E63               	movlw	99
   405  0014B0  1828               	xorwf	main@lettre,w,c
   406  0014B2  A4D8               	btfss	status,2,c
   407  0014B4  D00B               	goto	l1351
   408                           
   409                           ;projet_sumo.c: 328: print("Mode course active\n\r");
   410  0014B6  0E16               	movlw	low STR_2
   411  0014B8  6E02               	movwf	print@text,c
   412  0014BA  0E10               	movlw	high STR_2
   413  0014BC  6E03               	movwf	print@text+1,c
   414  0014BE  EC31  F00B         	call	_print	;wreg free
   415                           
   416                           ;projet_sumo.c: 329: course = 1;
   417  0014C2  0E00               	movlw	0
   418  0014C4  6E27               	movwf	main@course+1,c
   419  0014C6  0E01               	movlw	1
   420  0014C8  6E26               	movwf	main@course,c
   421                           
   422                           ;projet_sumo.c: 330: } else if (lettre == 's') {
   423  0014CA  D011               	goto	l1359
   424  0014CC                     l1351:
   425  0014CC  0E73               	movlw	115
   426  0014CE  1828               	xorwf	main@lettre,w,c
   427  0014D0  A4D8               	btfss	status,2,c
   428  0014D2  D00D               	goto	l1359
   429                           
   430                           ;projet_sumo.c: 331: init_sumo();
   431  0014D4  EC13  F009         	call	_init_sumo	;wreg free
   432                           
   433                           ;projet_sumo.c: 332: print("Mode SUMO active !\n\r");
   434  0014D8  0E01               	movlw	low STR_3
   435  0014DA  6E02               	movwf	print@text,c
   436  0014DC  0E10               	movlw	high STR_3
   437  0014DE  6E03               	movwf	print@text+1,c
   438  0014E0  EC31  F00B         	call	_print	;wreg free
   439                           
   440                           ;projet_sumo.c: 333: sumo = 1;
   441  0014E4  0E00               	movlw	0
   442  0014E6  6E25               	movwf	main@sumo+1,c
   443  0014E8  0E01               	movlw	1
   444  0014EA  6E24               	movwf	main@sumo,c
   445  0014EC  D000               	goto	l1359
   446  0014EE                     l1359:
   447  0014EE  5024               	movf	main@sumo,w,c
   448  0014F0  1025               	iorwf	main@sumo+1,w,c
   449  0014F2  A4D8               	btfss	status,2,c
   450  0014F4  D006               	goto	l1363
   451  0014F6  5026               	movf	main@course,w,c
   452  0014F8  1027               	iorwf	main@course+1,w,c
   453  0014FA  A4D8               	btfss	status,2,c
   454  0014FC  D002               	goto	l1363
   455  0014FE  D7D4               	goto	l1343
   456  001500  D000               	goto	l1363
   457  001502                     l1363:
   458                           
   459                           ;projet_sumo.c: 337: if (sumo)
   460  001502  5024               	movf	main@sumo,w,c
   461  001504  1025               	iorwf	main@sumo+1,w,c
   462  001506  B4D8               	btfsc	status,2,c
   463  001508  D003               	goto	l1367
   464                           
   465                           ;projet_sumo.c: 338: mode_sumo();
   466  00150A  EC1E  F008         	call	_mode_sumo	;wreg free
   467  00150E  D7F9               	goto	l1363
   468  001510                     l1367:
   469                           
   470                           ;projet_sumo.c: 339: else if (course)
   471  001510  5026               	movf	main@course,w,c
   472  001512  1027               	iorwf	main@course+1,w,c
   473  001514  B4D8               	btfsc	status,2,c
   474  001516  D7F5               	goto	l1363
   475                           
   476                           ;projet_sumo.c: 340: mode_course();
   477  001518  ECA0  F009         	call	_mode_course	;wreg free
   478  00151C  D7F2               	goto	l1363
   479  00151E  EF00  F000         	goto	start
   480  001522                     __end_of_main:
   481                           	opt stack 0
   482                           tblptru	equ	0xFF8
   483                           tblptrh	equ	0xFF7
   484                           status	equ	0xFD8
   485                           
   486 ;; *************** function _print *****************
   487 ;; Defined at:
   488 ;;		line 15 in file "projet_sumo.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;  text            2    1[COMRAM] PTR unsigned char 
   491 ;;		 -> STR_3(21), STR_2(21), STR_1(15), 
   492 ;; Auto vars:     Size  Location     Type
   493 ;;  i               2    5[COMRAM] int 
   494 ;; Return value:  Size  Location     Type
   495 ;;		None               void
   496 ;; Registers used:
   497 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   505 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   506 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   507 ;;Total ram usage:        6 bytes
   508 ;; Hardware stack levels used:    1
   509 ;; Hardware stack levels required when called:    1
   510 ;; This function calls:
   511 ;;		_putch
   512 ;; This function is called by:
   513 ;;		_main
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           	psect	text1
   518  001662                     __ptext1:
   519                           	opt stack 0
   520  001662                     _print:
   521                           	opt stack 29
   522                           
   523                           ;projet_sumo.c: 16: int i = 0;
   524                           
   525                           ;incstack = 0
   526  001662  0E00               	movlw	0
   527  001664  6E07               	movwf	print@i+1,c
   528  001666  0E00               	movlw	0
   529  001668  6E06               	movwf	print@i,c
   530                           
   531                           ;projet_sumo.c: 18: while (text[i] != '\0') {
   532  00166A  D019               	goto	l1181
   533  00166C                     l1175:
   534                           
   535                           ;projet_sumo.c: 19: putch(text[i]);
   536  00166C  5006               	movf	print@i,w,c
   537  00166E  2402               	addwf	print@text,w,c
   538  001670  6E04               	movwf	??_print& (0+255),c
   539  001672  5007               	movf	print@i+1,w,c
   540  001674  2003               	addwfc	print@text+1,w,c
   541  001676  6E05               	movwf	(??_print+1)& (0+255),c
   542  001678  C004  FFF6         	movff	??_print,tblptrl
   543  00167C  C005  FFF7         	movff	??_print+1,tblptrh
   544  001680                     	if	0	;tblptru may be non-zero
   545  001680                     	endif
   546  001680                     	if	0	;tblptru may be non-zero
   547  001680                     	endif
   548  001680  0008               	tblrd		*
   549  001682  50F5               	movf	tablat,w,c
   550  001684  ECCA  F00B         	call	_putch
   551                           
   552                           ;projet_sumo.c: 20: i++;
   553  001688  4A06               	infsnz	print@i,f,c
   554  00168A  2A07               	incf	print@i+1,f,c
   555                           
   556                           ;projet_sumo.c: 21: _delay((unsigned long)((50)*(10000000/4000.0)));
   557  00168C  0EA3               	movlw	163
   558  00168E  6E04               	movwf	??_print& (0+255),c
   559  001690  0E55               	movlw	85
   560  001692                     u1087:
   561  001692  2EE8               	decfsz	wreg,f,c
   562  001694  D7FE               	goto	u1087
   563  001696  2E04               	decfsz	??_print& (0+255),f,c
   564  001698  D7FC               	goto	u1087
   565  00169A  F000               	nop	
   566  00169C  D000               	goto	l1181
   567  00169E                     l1181:
   568  00169E  5006               	movf	print@i,w,c
   569  0016A0  2402               	addwf	print@text,w,c
   570  0016A2  6E04               	movwf	??_print& (0+255),c
   571  0016A4  5007               	movf	print@i+1,w,c
   572  0016A6  2003               	addwfc	print@text+1,w,c
   573  0016A8  6E05               	movwf	(??_print+1)& (0+255),c
   574  0016AA  C004  FFF6         	movff	??_print,tblptrl
   575  0016AE  C005  FFF7         	movff	??_print+1,tblptrh
   576  0016B2                     	if	0	;tblptru may be non-zero
   577  0016B2                     	endif
   578  0016B2                     	if	0	;tblptru may be non-zero
   579  0016B2                     	endif
   580  0016B2  0008               	tblrd		*
   581  0016B4  50F5               	movf	tablat,w,c
   582  0016B6  0900               	iorlw	0
   583  0016B8  A4D8               	btfss	status,2,c
   584  0016BA  D7D8               	goto	l1175
   585  0016BC  0012               	return		;funcret
   586  0016BE                     __end_of_print:
   587                           	opt stack 0
   588                           tblptru	equ	0xFF8
   589                           tblptrh	equ	0xFF7
   590                           tblptrl	equ	0xFF6
   591                           tablat	equ	0xFF5
   592                           wreg	equ	0xFE8
   593                           status	equ	0xFD8
   594                           
   595 ;; *************** function _putch *****************
   596 ;; Defined at:
   597 ;;		line 119 in file "projet_sumo.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;  c               1    wreg     unsigned char 
   600 ;; Auto vars:     Size  Location     Type
   601 ;;  c               1    0[COMRAM] unsigned char 
   602 ;; Return value:  Size  Location     Type
   603 ;;		None               void
   604 ;; Registers used:
   605 ;;		wreg
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   614 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;Total ram usage:        1 bytes
   616 ;; Hardware stack levels used:    1
   617 ;; This function calls:
   618 ;;		Nothing
   619 ;; This function is called by:
   620 ;;		_print
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           	psect	text2
   625  001794                     __ptext2:
   626                           	opt stack 0
   627  001794                     _putch:
   628                           	opt stack 29
   629                           
   630                           ;incstack = 0
   631                           ;putch@c stored from wreg
   632  001794  6E01               	movwf	putch@c,c
   633                           
   634                           ;projet_sumo.c: 120: while (PORTBbits.RB4 == 1);
   635  001796  D000               	goto	l83
   636  001798                     l83:
   637  001798  A881               	btfss	3969,4,c	;volatile
   638  00179A  D002               	goto	l86
   639  00179C  D7FD               	goto	l83
   640                           
   641                           ;projet_sumo.c: 121: while (!TXSTAbits.TRMT);
   642  00179E  D000               	goto	l86
   643  0017A0                     l86:
   644  0017A0  A2AC               	btfss	4012,1,c	;volatile
   645  0017A2  D7FE               	goto	l86
   646                           
   647                           ;projet_sumo.c: 122: TXREG = c;
   648  0017A4  C001  FFAD         	movff	putch@c,4013	;volatile
   649  0017A8  0012               	return		;funcret
   650  0017AA                     __end_of_putch:
   651                           	opt stack 0
   652                           tblptru	equ	0xFF8
   653                           tblptrh	equ	0xFF7
   654                           tblptrl	equ	0xFF6
   655                           tablat	equ	0xFF5
   656                           wreg	equ	0xFE8
   657                           status	equ	0xFD8
   658                           
   659 ;; *************** function _mode_sumo *****************
   660 ;; Defined at:
   661 ;;		line 262 in file "projet_sumo.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;  i               2   29[COMRAM] int 
   666 ;;  i               2   27[COMRAM] int 
   667 ;;  adcValue       10   17[COMRAM] int [5]
   668 ;;  p               2   31[COMRAM] PTR int 
   669 ;;		 -> read_adc@val(10), 
   670 ;; Return value:  Size  Location     Type
   671 ;;		None               void
   672 ;; Registers used:
   673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   680 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   681 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   682 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;Total ram usage:       17 bytes
   684 ;; Hardware stack levels used:    1
   685 ;; Hardware stack levels required when called:    1
   686 ;; This function calls:
   687 ;;		_detection_obstacle
   688 ;;		_detection_obstacle_d
   689 ;;		_detection_obstacle_g
   690 ;;		_read_adc
   691 ;;		_vitesse_moteur_droit
   692 ;;		_vitesse_moteur_gauche
   693 ;; This function is called by:
   694 ;;		_main
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           	psect	text3
   699  00103C                     __ptext3:
   700                           	opt stack 0
   701  00103C                     _mode_sumo:
   702                           	opt stack 29
   703                           
   704                           ;projet_sumo.c: 264: int adcValue[5];
   705                           ;projet_sumo.c: 265: int *p = read_adc();
   706                           
   707                           ;incstack = 0
   708  00103C  EC91  F00A         	call	_read_adc	;wreg free
   709  001040  C001  F020         	movff	?_read_adc,mode_sumo@p
   710  001044  C002  F021         	movff	?_read_adc+1,mode_sumo@p+1
   711                           
   712                           ;projet_sumo.c: 266: adcValue[0] = *(p + 0);
   713  001048  C020  FFD9         	movff	mode_sumo@p,fsr2l
   714  00104C  C021  FFDA         	movff	mode_sumo@p+1,fsr2h
   715  001050  CFDE F012          	movff	postinc2,mode_sumo@adcValue
   716  001054  CFDD F013          	movff	postdec2,mode_sumo@adcValue+1
   717                           
   718                           ;projet_sumo.c: 267: adcValue[1] = *(p + 1);
   719  001058  EE20 F002          	lfsr	2,2
   720  00105C  5020               	movf	mode_sumo@p,w,c
   721  00105E  26D9               	addwf	fsr2l,f,c
   722  001060  5021               	movf	mode_sumo@p+1,w,c
   723  001062  22DA               	addwfc	fsr2h,f,c
   724  001064  CFDE F014          	movff	postinc2,mode_sumo@adcValue+2
   725  001068  CFDD F015          	movff	postdec2,mode_sumo@adcValue+3
   726                           
   727                           ;projet_sumo.c: 268: adcValue[2] = *(p + 2);
   728  00106C  EE20 F004          	lfsr	2,4
   729  001070  5020               	movf	mode_sumo@p,w,c
   730  001072  26D9               	addwf	fsr2l,f,c
   731  001074  5021               	movf	mode_sumo@p+1,w,c
   732  001076  22DA               	addwfc	fsr2h,f,c
   733  001078  CFDE F016          	movff	postinc2,mode_sumo@adcValue+4
   734  00107C  CFDD F017          	movff	postdec2,mode_sumo@adcValue+5
   735                           
   736                           ;projet_sumo.c: 269: adcValue[3] = *(p + 3);
   737  001080  EE20 F006          	lfsr	2,6
   738  001084  5020               	movf	mode_sumo@p,w,c
   739  001086  26D9               	addwf	fsr2l,f,c
   740  001088  5021               	movf	mode_sumo@p+1,w,c
   741  00108A  22DA               	addwfc	fsr2h,f,c
   742  00108C  CFDE F018          	movff	postinc2,mode_sumo@adcValue+6
   743  001090  CFDD F019          	movff	postdec2,mode_sumo@adcValue+7
   744                           
   745                           ;projet_sumo.c: 270: adcValue[4] = *(p + 4);
   746  001094  EE20 F008          	lfsr	2,8
   747  001098  5020               	movf	mode_sumo@p,w,c
   748  00109A  26D9               	addwf	fsr2l,f,c
   749  00109C  5021               	movf	mode_sumo@p+1,w,c
   750  00109E  22DA               	addwfc	fsr2h,f,c
   751  0010A0  CFDE F01A          	movff	postinc2,mode_sumo@adcValue+8
   752  0010A4  CFDD F01B          	movff	postdec2,mode_sumo@adcValue+9
   753                           
   754                           ;projet_sumo.c: 274: if (adcValue[0] < 100 || adcValue[1] < 100 || adcValue[2] < 100) {
   755  0010A8  BE13               	btfsc	mode_sumo@adcValue+1,7,c
   756  0010AA  D016               	goto	l1275
   757  0010AC  5013               	movf	mode_sumo@adcValue+1,w,c
   758  0010AE  E104               	bnz	u900
   759  0010B0  0E64               	movlw	100
   760  0010B2  5C12               	subwf	mode_sumo@adcValue,w,c
   761  0010B4  A0D8               	btfss	status,0,c
   762  0010B6  D010               	goto	l1275
   763  0010B8                     u900:
   764  0010B8  BE15               	btfsc	mode_sumo@adcValue+3,7,c
   765  0010BA  D00E               	goto	l1275
   766  0010BC  5015               	movf	mode_sumo@adcValue+3,w,c
   767  0010BE  E104               	bnz	u910
   768  0010C0  0E64               	movlw	100
   769  0010C2  5C14               	subwf	mode_sumo@adcValue+2,w,c
   770  0010C4  A0D8               	btfss	status,0,c
   771  0010C6  D008               	goto	l1275
   772  0010C8                     u910:
   773  0010C8  BE17               	btfsc	mode_sumo@adcValue+5,7,c
   774  0010CA  D006               	goto	l1275
   775  0010CC  5017               	movf	mode_sumo@adcValue+5,w,c
   776  0010CE  E12E               	bnz	l1287
   777  0010D0  0E64               	movlw	100
   778  0010D2  5C16               	subwf	mode_sumo@adcValue+4,w,c
   779  0010D4  B0D8               	btfsc	status,0,c
   780  0010D6  D02A               	goto	l1287
   781  0010D8                     l1275:
   782                           
   783                           ;projet_sumo.c: 275: vitesse_moteur_gauche(-350);
   784  0010D8  0EFE               	movlw	254
   785  0010DA  6E02               	movwf	vitesse_moteur_gauche@v+1,c
   786  0010DC  0EA2               	movlw	162
   787  0010DE  6E01               	movwf	vitesse_moteur_gauche@v,c
   788  0010E0  ECD1  F00A         	call	_vitesse_moteur_gauche	;wreg free
   789                           
   790                           ;projet_sumo.c: 276: vitesse_moteur_droit(350);
   791  0010E4  0E01               	movlw	1
   792  0010E6  6E02               	movwf	vitesse_moteur_droit@v+1,c
   793  0010E8  0E5E               	movlw	94
   794  0010EA  6E01               	movwf	vitesse_moteur_droit@v,c
   795  0010EC  EC01  F00B         	call	_vitesse_moteur_droit	;wreg free
   796                           
   797                           ;projet_sumo.c: 277: for (int i = 0; i < 8; i++)
   798  0010F0  0E00               	movlw	0
   799  0010F2  6E1D               	movwf	mode_sumo@i+1,c
   800  0010F4  0E00               	movlw	0
   801  0010F6  6E1C               	movwf	mode_sumo@i,c
   802  0010F8  BE1D               	btfsc	mode_sumo@i+1,7,c
   803  0010FA  D008               	goto	l1283
   804  0010FC  501D               	movf	mode_sumo@i+1,w,c
   805  0010FE  E105               	bnz	u930
   806  001100  0E08               	movlw	8
   807  001102  5C1C               	subwf	mode_sumo@i,w,c
   808  001104  B0D8               	btfsc	status,0,c
   809  001106  D08E               	goto	l168
   810  001108  D001               	goto	l1283
   811  00110A                     u930:
   812  00110A  D08C               	goto	l168
   813  00110C                     l1283:
   814                           
   815                           ;projet_sumo.c: 278: _delay((unsigned long)((50)*(10000000/4000.0)));
   816  00110C  0EA3               	movlw	163
   817  00110E  6E11               	movwf	??_mode_sumo& (0+255),c
   818  001110  0E55               	movlw	85
   819  001112                     u1097:
   820  001112  2EE8               	decfsz	wreg,f,c
   821  001114  D7FE               	goto	u1097
   822  001116  2E11               	decfsz	??_mode_sumo& (0+255),f,c
   823  001118  D7FC               	goto	u1097
   824  00111A  F000               	nop	
   825  00111C  4A1C               	infsnz	mode_sumo@i,f,c
   826  00111E  2A1D               	incf	mode_sumo@i+1,f,c
   827  001120  BE1D               	btfsc	mode_sumo@i+1,7,c
   828  001122  D7F4               	goto	l1283
   829  001124  501D               	movf	mode_sumo@i+1,w,c
   830  001126  E17E               	bnz	l168
   831  001128  D7EB               	goto	L1
   832                           
   833                           ;projet_sumo.c: 279: }
   834  00112A  D07C               	goto	l168
   835  00112C                     l1287:
   836                           
   837                           ;projet_sumo.c: 281: else if (adcValue[3] < 100 || adcValue[4] < 100) {
   838  00112C  BE19               	btfsc	mode_sumo@adcValue+7,7,c
   839  00112E  D00E               	goto	l1291
   840  001130  5019               	movf	mode_sumo@adcValue+7,w,c
   841  001132  E104               	bnz	u950
   842  001134  0E64               	movlw	100
   843  001136  5C18               	subwf	mode_sumo@adcValue+6,w,c
   844  001138  A0D8               	btfss	status,0,c
   845  00113A  D008               	goto	l1291
   846  00113C                     u950:
   847  00113C  BE1B               	btfsc	mode_sumo@adcValue+9,7,c
   848  00113E  D006               	goto	l1291
   849  001140  501B               	movf	mode_sumo@adcValue+9,w,c
   850  001142  E12A               	bnz	l1303
   851  001144  0E64               	movlw	100
   852  001146  5C1A               	subwf	mode_sumo@adcValue+8,w,c
   853  001148  B0D8               	btfsc	status,0,c
   854  00114A  D026               	goto	l1303
   855  00114C                     l1291:
   856                           
   857                           ;projet_sumo.c: 282: vitesse_moteur_gauche(350);
   858  00114C  0E01               	movlw	1
   859  00114E  6E02               	movwf	vitesse_moteur_gauche@v+1,c
   860  001150  0E5E               	movlw	94
   861  001152  6E01               	movwf	vitesse_moteur_gauche@v,c
   862  001154  ECD1  F00A         	call	_vitesse_moteur_gauche	;wreg free
   863                           
   864                           ;projet_sumo.c: 283: vitesse_moteur_droit(-350);
   865  001158  0EFE               	movlw	254
   866  00115A  6E02               	movwf	vitesse_moteur_droit@v+1,c
   867  00115C  0EA2               	movlw	162
   868  00115E  6E01               	movwf	vitesse_moteur_droit@v,c
   869  001160  EC01  F00B         	call	_vitesse_moteur_droit	;wreg free
   870                           
   871                           ;projet_sumo.c: 284: for (int i = 0; i < 8; i++)
   872  001164  0E00               	movlw	0
   873  001166  6E1F               	movwf	mode_sumo@i_993+1,c
   874  001168  0E00               	movlw	0
   875  00116A  6E1E               	movwf	mode_sumo@i_993,c
   876  00116C                     l1295:
   877  00116C  BE1F               	btfsc	mode_sumo@i_993+1,7,c
   878  00116E  D008               	goto	l1299
   879  001170  501F               	movf	mode_sumo@i_993+1,w,c
   880  001172  E158               	bnz	l168
   881  001174  0E08               	movlw	8
   882  001176  5C1E               	subwf	mode_sumo@i_993,w,c
   883  001178  B0D8               	btfsc	status,0,c
   884  00117A  D054               	goto	l168
   885  00117C  D001               	goto	l1299
   886  00117E  D052               	goto	l168
   887  001180                     l1299:
   888                           
   889                           ;projet_sumo.c: 285: _delay((unsigned long)((50)*(10000000/4000.0)));
   890  001180  0EA3               	movlw	163
   891  001182  6E11               	movwf	??_mode_sumo& (0+255),c
   892  001184  0E55               	movlw	85
   893  001186                     u1107:
   894  001186  2EE8               	decfsz	wreg,f,c
   895  001188  D7FE               	goto	u1107
   896  00118A  2E11               	decfsz	??_mode_sumo& (0+255),f,c
   897  00118C  D7FC               	goto	u1107
   898  00118E  F000               	nop	
   899  001190  4A1E               	infsnz	mode_sumo@i_993,f,c
   900  001192  2A1F               	incf	mode_sumo@i_993+1,f,c
   901  001194  D7EB               	goto	l1295
   902                           
   903                           ;projet_sumo.c: 287: } else {
   904  001196  D046               	goto	l168
   905  001198                     l1303:
   906                           
   907                           ;projet_sumo.c: 288: if (detection_obstacle()) {
   908  001198  ECBD  F00B         	call	_detection_obstacle	;wreg free
   909  00119C  5001               	movf	?_detection_obstacle,w,c
   910  00119E  1002               	iorwf	?_detection_obstacle+1,w,c
   911  0011A0  B4D8               	btfsc	status,2,c
   912  0011A2  D00D               	goto	l1307
   913                           
   914                           ;projet_sumo.c: 289: vitesse_moteur_gauche(1000);
   915  0011A4  0E03               	movlw	3
   916  0011A6  6E02               	movwf	vitesse_moteur_gauche@v+1,c
   917  0011A8  0EE8               	movlw	232
   918  0011AA  6E01               	movwf	vitesse_moteur_gauche@v,c
   919  0011AC  ECD1  F00A         	call	_vitesse_moteur_gauche	;wreg free
   920                           
   921                           ;projet_sumo.c: 290: vitesse_moteur_droit(1000);
   922  0011B0  0E03               	movlw	3
   923  0011B2  6E02               	movwf	vitesse_moteur_droit@v+1,c
   924  0011B4  0EE8               	movlw	232
   925  0011B6  6E01               	movwf	vitesse_moteur_droit@v,c
   926  0011B8  EC01  F00B         	call	_vitesse_moteur_droit	;wreg free
   927                           
   928                           ;projet_sumo.c: 291: } else if (detection_obstacle_g()) {
   929  0011BC  D033               	goto	l168
   930  0011BE                     l1307:
   931  0011BE  ECA3  F00B         	call	_detection_obstacle_g	;wreg free
   932  0011C2  5001               	movf	?_detection_obstacle_g,w,c
   933  0011C4  1002               	iorwf	?_detection_obstacle_g+1,w,c
   934  0011C6  B4D8               	btfsc	status,2,c
   935  0011C8  D00D               	goto	l1311
   936                           
   937                           ;projet_sumo.c: 292: vitesse_moteur_gauche(1000);
   938  0011CA  0E03               	movlw	3
   939  0011CC  6E02               	movwf	vitesse_moteur_gauche@v+1,c
   940  0011CE  0EE8               	movlw	232
   941  0011D0  6E01               	movwf	vitesse_moteur_gauche@v,c
   942  0011D2  ECD1  F00A         	call	_vitesse_moteur_gauche	;wreg free
   943                           
   944                           ;projet_sumo.c: 293: vitesse_moteur_droit(-300);
   945  0011D6  0EFE               	movlw	254
   946  0011D8  6E02               	movwf	vitesse_moteur_droit@v+1,c
   947  0011DA  0ED4               	movlw	212
   948  0011DC  6E01               	movwf	vitesse_moteur_droit@v,c
   949  0011DE  EC01  F00B         	call	_vitesse_moteur_droit	;wreg free
   950                           
   951                           ;projet_sumo.c: 294: } else if (detection_obstacle_d()) {
   952  0011E2  D020               	goto	l168
   953  0011E4                     l1311:
   954  0011E4  ECB0  F00B         	call	_detection_obstacle_d	;wreg free
   955  0011E8  5001               	movf	?_detection_obstacle_d,w,c
   956  0011EA  1002               	iorwf	?_detection_obstacle_d+1,w,c
   957  0011EC  B4D8               	btfsc	status,2,c
   958  0011EE  D00D               	goto	l1315
   959                           
   960                           ;projet_sumo.c: 295: vitesse_moteur_gauche(-300);
   961  0011F0  0EFE               	movlw	254
   962  0011F2  6E02               	movwf	vitesse_moteur_gauche@v+1,c
   963  0011F4  0ED4               	movlw	212
   964  0011F6  6E01               	movwf	vitesse_moteur_gauche@v,c
   965  0011F8  ECD1  F00A         	call	_vitesse_moteur_gauche	;wreg free
   966                           
   967                           ;projet_sumo.c: 296: vitesse_moteur_droit(1000);
   968  0011FC  0E03               	movlw	3
   969  0011FE  6E02               	movwf	vitesse_moteur_droit@v+1,c
   970  001200  0EE8               	movlw	232
   971  001202  6E01               	movwf	vitesse_moteur_droit@v,c
   972  001204  EC01  F00B         	call	_vitesse_moteur_droit	;wreg free
   973                           
   974                           ;projet_sumo.c: 297: } else {
   975  001208  D00D               	goto	l168
   976  00120A                     l1315:
   977                           
   978                           ;projet_sumo.c: 298: vitesse_moteur_gauche(230);
   979  00120A  0E00               	movlw	0
   980  00120C  6E02               	movwf	vitesse_moteur_gauche@v+1,c
   981  00120E  0EE6               	movlw	230
   982  001210  6E01               	movwf	vitesse_moteur_gauche@v,c
   983  001212  ECD1  F00A         	call	_vitesse_moteur_gauche	;wreg free
   984                           
   985                           ;projet_sumo.c: 299: vitesse_moteur_droit(230);
   986  001216  0E00               	movlw	0
   987  001218  6E02               	movwf	vitesse_moteur_droit@v+1,c
   988  00121A  0EE6               	movlw	230
   989  00121C  6E01               	movwf	vitesse_moteur_droit@v,c
   990  00121E  EC01  F00B         	call	_vitesse_moteur_droit	;wreg free
   991  001222  D000               	goto	l168
   992  001224                     l168:
   993  001224  0012               	return		;funcret
   994  001226                     __end_of_mode_sumo:
   995                           	opt stack 0
   996                           tblptru	equ	0xFF8
   997                           tblptrh	equ	0xFF7
   998                           tblptrl	equ	0xFF6
   999                           tablat	equ	0xFF5
  1000                           wreg	equ	0xFE8
  1001                           postinc2	equ	0xFDE
  1002                           postdec2	equ	0xFDD
  1003                           fsr2h	equ	0xFDA
  1004                           fsr2l	equ	0xFD9
  1005                           status	equ	0xFD8
  1006                           
  1007 ;; *************** function _detection_obstacle_g *****************
  1008 ;; Defined at:
  1009 ;;		line 200 in file "projet_sumo.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;		None
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;		None
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  2    0[COMRAM] int 
  1016 ;; Registers used:
  1017 ;;		wreg, status,2
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1026 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;Total ram usage:        3 bytes
  1028 ;; Hardware stack levels used:    1
  1029 ;; This function calls:
  1030 ;;		Nothing
  1031 ;; This function is called by:
  1032 ;;		_mode_sumo
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           	psect	text4
  1037  001746                     __ptext4:
  1038                           	opt stack 0
  1039  001746                     _detection_obstacle_g:
  1040                           	opt stack 29
  1041                           
  1042                           ;projet_sumo.c: 201: return PORTDbits.RD5 == 0 && PORTDbits.RD6 == 1;
  1043                           
  1044                           ;incstack = 0
  1045  001746  0E00               	movlw	0
  1046  001748  6E03               	movwf	_detection_obstacle_g$976,c
  1047  00174A  AA83               	btfss	3971,5,c	;volatile
  1048  00174C  AC83               	btfss	3971,6,c	;volatile
  1049  00174E  D003               	goto	l1157
  1050  001750  0E01               	movlw	1
  1051  001752  6E03               	movwf	_detection_obstacle_g$976,c
  1052  001754  D000               	goto	l1157
  1053  001756                     l1157:
  1054  001756  C003  F001         	movff	_detection_obstacle_g$976,?_detection_obstacle_g
  1055  00175A  6A02               	clrf	?_detection_obstacle_g+1,c
  1056  00175C  D000               	goto	l123
  1057  00175E                     l123:
  1058  00175E  0012               	return		;funcret
  1059  001760                     __end_of_detection_obstacle_g:
  1060                           	opt stack 0
  1061                           tblptru	equ	0xFF8
  1062                           tblptrh	equ	0xFF7
  1063                           tblptrl	equ	0xFF6
  1064                           tablat	equ	0xFF5
  1065                           wreg	equ	0xFE8
  1066                           postinc2	equ	0xFDE
  1067                           postdec2	equ	0xFDD
  1068                           fsr2h	equ	0xFDA
  1069                           fsr2l	equ	0xFD9
  1070                           status	equ	0xFD8
  1071                           
  1072 ;; *************** function _detection_obstacle_d *****************
  1073 ;; Defined at:
  1074 ;;		line 208 in file "projet_sumo.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;		None
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  2    0[COMRAM] int 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1089 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;Total ram usage:        3 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; This function calls:
  1095 ;;		Nothing
  1096 ;; This function is called by:
  1097 ;;		_mode_sumo
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text5
  1102  001760                     __ptext5:
  1103                           	opt stack 0
  1104  001760                     _detection_obstacle_d:
  1105                           	opt stack 29
  1106                           
  1107                           ;projet_sumo.c: 209: return PORTDbits.RD5 == 1 && PORTDbits.RD6 == 0;
  1108                           
  1109                           ;incstack = 0
  1110  001760  0E00               	movlw	0
  1111  001762  6E03               	movwf	_detection_obstacle_d$978,c
  1112  001764  BA83               	btfsc	3971,5,c	;volatile
  1113  001766  BC83               	btfsc	3971,6,c	;volatile
  1114  001768  D003               	goto	l1169
  1115  00176A  0E01               	movlw	1
  1116  00176C  6E03               	movwf	_detection_obstacle_d$978,c
  1117  00176E  D000               	goto	l1169
  1118  001770                     l1169:
  1119  001770  C003  F001         	movff	_detection_obstacle_d$978,?_detection_obstacle_d
  1120  001774  6A02               	clrf	?_detection_obstacle_d+1,c
  1121  001776  D000               	goto	l128
  1122  001778                     l128:
  1123  001778  0012               	return		;funcret
  1124  00177A                     __end_of_detection_obstacle_d:
  1125                           	opt stack 0
  1126                           tblptru	equ	0xFF8
  1127                           tblptrh	equ	0xFF7
  1128                           tblptrl	equ	0xFF6
  1129                           tablat	equ	0xFF5
  1130                           wreg	equ	0xFE8
  1131                           postinc2	equ	0xFDE
  1132                           postdec2	equ	0xFDD
  1133                           fsr2h	equ	0xFDA
  1134                           fsr2l	equ	0xFD9
  1135                           status	equ	0xFD8
  1136                           
  1137 ;; *************** function _detection_obstacle *****************
  1138 ;; Defined at:
  1139 ;;		line 192 in file "projet_sumo.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;		None
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;		None
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  2    0[COMRAM] int 
  1146 ;; Registers used:
  1147 ;;		wreg, status,2
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;Total ram usage:        3 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; This function calls:
  1160 ;;		Nothing
  1161 ;; This function is called by:
  1162 ;;		_mode_sumo
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           	psect	text6
  1167  00177A                     __ptext6:
  1168                           	opt stack 0
  1169  00177A                     _detection_obstacle:
  1170                           	opt stack 29
  1171                           
  1172                           ;projet_sumo.c: 193: return PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0;
  1173                           
  1174                           ;incstack = 0
  1175  00177A  0E00               	movlw	0
  1176  00177C  6E03               	movwf	_detection_obstacle$974,c
  1177  00177E  AA83               	btfss	3971,5,c	;volatile
  1178  001780  BC83               	btfsc	3971,6,c	;volatile
  1179  001782  D003               	goto	l1145
  1180  001784  0E01               	movlw	1
  1181  001786  6E03               	movwf	_detection_obstacle$974,c
  1182  001788  D000               	goto	l1145
  1183  00178A                     l1145:
  1184  00178A  C003  F001         	movff	_detection_obstacle$974,?_detection_obstacle
  1185  00178E  6A02               	clrf	?_detection_obstacle+1,c
  1186  001790  D000               	goto	l118
  1187  001792                     l118:
  1188  001792  0012               	return		;funcret
  1189  001794                     __end_of_detection_obstacle:
  1190                           	opt stack 0
  1191                           tblptru	equ	0xFF8
  1192                           tblptrh	equ	0xFF7
  1193                           tblptrl	equ	0xFF6
  1194                           tablat	equ	0xFF5
  1195                           wreg	equ	0xFE8
  1196                           postinc2	equ	0xFDE
  1197                           postdec2	equ	0xFDD
  1198                           fsr2h	equ	0xFDA
  1199                           fsr2l	equ	0xFD9
  1200                           status	equ	0xFD8
  1201                           
  1202 ;; *************** function _mode_course *****************
  1203 ;; Defined at:
  1204 ;;		line 215 in file "projet_sumo.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  adcValue       10   16[COMRAM] int [5]
  1209 ;;  p               2   26[COMRAM] PTR int 
  1210 ;;		 -> read_adc@val(10), 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;		None               void
  1213 ;; Registers used:
  1214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;Total ram usage:       12 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; Hardware stack levels required when called:    1
  1227 ;; This function calls:
  1228 ;;		_read_adc
  1229 ;;		_vitesse_moteur_droit
  1230 ;;		_vitesse_moteur_gauche
  1231 ;; This function is called by:
  1232 ;;		_main
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           	psect	text7
  1237  001340                     __ptext7:
  1238                           	opt stack 0
  1239  001340                     _mode_course:
  1240                           	opt stack 29
  1241                           
  1242                           ;projet_sumo.c: 217: int adcValue[5];
  1243                           ;projet_sumo.c: 218: int *p = read_adc();
  1244                           
  1245                           ;incstack = 0
  1246  001340  EC91  F00A         	call	_read_adc	;wreg free
  1247  001344  C001  F01B         	movff	?_read_adc,mode_course@p
  1248  001348  C002  F01C         	movff	?_read_adc+1,mode_course@p+1
  1249                           
  1250                           ;projet_sumo.c: 219: adcValue[0] = *(p + 0);
  1251  00134C  C01B  FFD9         	movff	mode_course@p,fsr2l
  1252  001350  C01C  FFDA         	movff	mode_course@p+1,fsr2h
  1253  001354  CFDE F011          	movff	postinc2,mode_course@adcValue
  1254  001358  CFDD F012          	movff	postdec2,mode_course@adcValue+1
  1255                           
  1256                           ;projet_sumo.c: 220: adcValue[1] = *(p + 1);
  1257  00135C  EE20 F002          	lfsr	2,2
  1258  001360  501B               	movf	mode_course@p,w,c
  1259  001362  26D9               	addwf	fsr2l,f,c
  1260  001364  501C               	movf	mode_course@p+1,w,c
  1261  001366  22DA               	addwfc	fsr2h,f,c
  1262  001368  CFDE F013          	movff	postinc2,mode_course@adcValue+2
  1263  00136C  CFDD F014          	movff	postdec2,mode_course@adcValue+3
  1264                           
  1265                           ;projet_sumo.c: 221: adcValue[2] = *(p + 2);
  1266  001370  EE20 F004          	lfsr	2,4
  1267  001374  501B               	movf	mode_course@p,w,c
  1268  001376  26D9               	addwf	fsr2l,f,c
  1269  001378  501C               	movf	mode_course@p+1,w,c
  1270  00137A  22DA               	addwfc	fsr2h,f,c
  1271  00137C  CFDE F015          	movff	postinc2,mode_course@adcValue+4
  1272  001380  CFDD F016          	movff	postdec2,mode_course@adcValue+5
  1273                           
  1274                           ;projet_sumo.c: 222: adcValue[3] = *(p + 3);
  1275  001384  EE20 F006          	lfsr	2,6
  1276  001388  501B               	movf	mode_course@p,w,c
  1277  00138A  26D9               	addwf	fsr2l,f,c
  1278  00138C  501C               	movf	mode_course@p+1,w,c
  1279  00138E  22DA               	addwfc	fsr2h,f,c
  1280  001390  CFDE F017          	movff	postinc2,mode_course@adcValue+6
  1281  001394  CFDD F018          	movff	postdec2,mode_course@adcValue+7
  1282                           
  1283                           ;projet_sumo.c: 223: adcValue[4] = *(p + 4);
  1284  001398  EE20 F008          	lfsr	2,8
  1285  00139C  501B               	movf	mode_course@p,w,c
  1286  00139E  26D9               	addwf	fsr2l,f,c
  1287  0013A0  501C               	movf	mode_course@p+1,w,c
  1288  0013A2  22DA               	addwfc	fsr2h,f,c
  1289  0013A4  CFDE F019          	movff	postinc2,mode_course@adcValue+8
  1290  0013A8  CFDD F01A          	movff	postdec2,mode_course@adcValue+9
  1291                           
  1292                           ;projet_sumo.c: 226: if ((adcValue[2] > 200 )) {
  1293  0013AC  BE16               	btfsc	mode_course@adcValue+5,7,c
  1294  0013AE  D013               	goto	l1199
  1295  0013B0  5016               	movf	mode_course@adcValue+5,w,c
  1296  0013B2  E104               	bnz	u770
  1297  0013B4  0EC9               	movlw	201
  1298  0013B6  5C15               	subwf	mode_course@adcValue+4,w,c
  1299  0013B8  A0D8               	btfss	status,0,c
  1300  0013BA  D00D               	goto	l1199
  1301  0013BC                     u770:
  1302                           
  1303                           ;projet_sumo.c: 227: vitesse_moteur_gauche(400);
  1304  0013BC  0E01               	movlw	1
  1305  0013BE  6E02               	movwf	vitesse_moteur_gauche@v+1,c
  1306  0013C0  0E90               	movlw	144
  1307  0013C2  6E01               	movwf	vitesse_moteur_gauche@v,c
  1308  0013C4  ECD1  F00A         	call	_vitesse_moteur_gauche	;wreg free
  1309                           
  1310                           ;projet_sumo.c: 228: vitesse_moteur_droit(400);
  1311  0013C8  0E01               	movlw	1
  1312  0013CA  6E02               	movwf	vitesse_moteur_droit@v+1,c
  1313  0013CC  0E90               	movlw	144
  1314  0013CE  6E01               	movwf	vitesse_moteur_droit@v,c
  1315  0013D0  EC01  F00B         	call	_vitesse_moteur_droit	;wreg free
  1316                           
  1317                           ;projet_sumo.c: 230: } else if (adcValue[0] > 200 && adcValue[1] > 200) {
  1318  0013D4  D03A               	goto	l136
  1319  0013D6                     l1199:
  1320  0013D6  BE12               	btfsc	mode_course@adcValue+1,7,c
  1321  0013D8  D01B               	goto	l1205
  1322  0013DA  5012               	movf	mode_course@adcValue+1,w,c
  1323  0013DC  E104               	bnz	u780
  1324  0013DE  0EC9               	movlw	201
  1325  0013E0  5C11               	subwf	mode_course@adcValue,w,c
  1326  0013E2  A0D8               	btfss	status,0,c
  1327  0013E4  D015               	goto	l1205
  1328  0013E6                     u780:
  1329  0013E6  BE14               	btfsc	mode_course@adcValue+3,7,c
  1330  0013E8  D013               	goto	l1205
  1331  0013EA  5014               	movf	mode_course@adcValue+3,w,c
  1332  0013EC  E104               	bnz	u790
  1333  0013EE  0EC9               	movlw	201
  1334  0013F0  5C13               	subwf	mode_course@adcValue+2,w,c
  1335  0013F2  A0D8               	btfss	status,0,c
  1336  0013F4  D00D               	goto	l1205
  1337  0013F6                     u790:
  1338                           
  1339                           ;projet_sumo.c: 231: vitesse_moteur_gauche(400);
  1340  0013F6  0E01               	movlw	1
  1341  0013F8  6E02               	movwf	vitesse_moteur_gauche@v+1,c
  1342  0013FA  0E90               	movlw	144
  1343  0013FC  6E01               	movwf	vitesse_moteur_gauche@v,c
  1344  0013FE  ECD1  F00A         	call	_vitesse_moteur_gauche	;wreg free
  1345                           
  1346                           ;projet_sumo.c: 232: vitesse_moteur_droit(-400);
  1347  001402  0EFE               	movlw	254
  1348  001404  6E02               	movwf	vitesse_moteur_droit@v+1,c
  1349  001406  0E70               	movlw	112
  1350  001408  6E01               	movwf	vitesse_moteur_droit@v,c
  1351  00140A  EC01  F00B         	call	_vitesse_moteur_droit	;wreg free
  1352                           
  1353                           ;projet_sumo.c: 233: } else if (adcValue[3] > 200 && adcValue[4] > 200) {
  1354  00140E  D01D               	goto	l136
  1355  001410                     l1205:
  1356  001410  BE18               	btfsc	mode_course@adcValue+7,7,c
  1357  001412  D01B               	goto	l136
  1358  001414  5018               	movf	mode_course@adcValue+7,w,c
  1359  001416  E104               	bnz	u800
  1360  001418  0EC9               	movlw	201
  1361  00141A  5C17               	subwf	mode_course@adcValue+6,w,c
  1362  00141C  A0D8               	btfss	status,0,c
  1363  00141E  D015               	goto	l136
  1364  001420                     u800:
  1365  001420  BE1A               	btfsc	mode_course@adcValue+9,7,c
  1366  001422  D013               	goto	l136
  1367  001424  501A               	movf	mode_course@adcValue+9,w,c
  1368  001426  E104               	bnz	u810
  1369  001428  0EC9               	movlw	201
  1370  00142A  5C19               	subwf	mode_course@adcValue+8,w,c
  1371  00142C  A0D8               	btfss	status,0,c
  1372  00142E  D00D               	goto	l136
  1373  001430                     u810:
  1374                           
  1375                           ;projet_sumo.c: 234: vitesse_moteur_gauche(-400);
  1376  001430  0EFE               	movlw	254
  1377  001432  6E02               	movwf	vitesse_moteur_gauche@v+1,c
  1378  001434  0E70               	movlw	112
  1379  001436  6E01               	movwf	vitesse_moteur_gauche@v,c
  1380  001438  ECD1  F00A         	call	_vitesse_moteur_gauche	;wreg free
  1381                           
  1382                           ;projet_sumo.c: 235: vitesse_moteur_droit(400);
  1383  00143C  0E01               	movlw	1
  1384  00143E  6E02               	movwf	vitesse_moteur_droit@v+1,c
  1385  001440  0E90               	movlw	144
  1386  001442  6E01               	movwf	vitesse_moteur_droit@v,c
  1387  001444  EC01  F00B         	call	_vitesse_moteur_droit	;wreg free
  1388  001448  D000               	goto	l136
  1389  00144A                     l136:
  1390  00144A  0012               	return		;funcret
  1391  00144C                     __end_of_mode_course:
  1392                           	opt stack 0
  1393                           tblptru	equ	0xFF8
  1394                           tblptrh	equ	0xFF7
  1395                           tblptrl	equ	0xFF6
  1396                           tablat	equ	0xFF5
  1397                           wreg	equ	0xFE8
  1398                           postinc2	equ	0xFDE
  1399                           postdec2	equ	0xFDD
  1400                           fsr2h	equ	0xFDA
  1401                           fsr2l	equ	0xFD9
  1402                           status	equ	0xFD8
  1403                           
  1404 ;; *************** function _read_adc *****************
  1405 ;; Defined at:
  1406 ;;		line 143 in file "projet_sumo.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  i               2   14[COMRAM] int 
  1411 ;;  val            10    4[COMRAM] int [5]
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  2    0[COMRAM] PTR unsigned int 
  1414 ;; Registers used:
  1415 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1421 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;Total ram usage:       16 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_mode_course
  1431 ;;		_mode_sumo
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text8
  1436  001522                     __ptext8:
  1437                           	opt stack 0
  1438  001522                     _read_adc:
  1439                           	opt stack 29
  1440                           
  1441                           ;projet_sumo.c: 144: int val[5];
  1442                           ;projet_sumo.c: 145: for (int i = 0; i < 5; i++) {
  1443                           
  1444                           ;incstack = 0
  1445  001522  0E00               	movlw	0
  1446  001524  6E10               	movwf	read_adc@i+1,c
  1447  001526  0E00               	movlw	0
  1448  001528  6E0F               	movwf	read_adc@i,c
  1449  00152A                     l1101:
  1450  00152A  BE10               	btfsc	read_adc@i+1,7,c
  1451  00152C  D008               	goto	l1105
  1452  00152E  5010               	movf	read_adc@i+1,w,c
  1453  001530  E132               	bnz	l1117
  1454  001532  0E05               	movlw	5
  1455  001534  5C0F               	subwf	read_adc@i,w,c
  1456  001536  B0D8               	btfsc	status,0,c
  1457  001538  D02E               	goto	l1117
  1458  00153A  D001               	goto	l1105
  1459  00153C  D02C               	goto	l1117
  1460  00153E                     l1105:
  1461                           
  1462                           ;projet_sumo.c: 146: _delay((unsigned long)((20)*(10000000/4000000.0)));
  1463  00153E  0E10               	movlw	16
  1464  001540                     u1117:
  1465  001540  2EE8               	decfsz	wreg,f,c
  1466  001542  D7FE               	goto	u1117
  1467  001544  D000               	nop2		;nop
  1468                           
  1469                           ;projet_sumo.c: 147: ADCON0bits.CHS = i;
  1470  001546  C00F  F003         	movff	read_adc@i,??_read_adc
  1471  00154A  4603               	rlncf	??_read_adc,f,c
  1472  00154C  4603               	rlncf	??_read_adc,f,c
  1473  00154E  50C2               	movf	4034,w,c	;volatile
  1474  001550  1803               	xorwf	??_read_adc,w,c
  1475  001552  0BC3               	andlw	-61
  1476  001554  1803               	xorwf	??_read_adc,w,c
  1477  001556  6EC2               	movwf	4034,c	;volatile
  1478                           
  1479                           ;projet_sumo.c: 148: ADCON0bits.GO = 1;
  1480  001558  82C2               	bsf	4034,1,c	;volatile
  1481                           
  1482                           ;projet_sumo.c: 149: while (ADCON0bits.GO != 0);
  1483  00155A  D000               	goto	l100
  1484  00155C                     l100:
  1485  00155C  B2C2               	btfsc	4034,1,c	;volatile
  1486  00155E  D7FE               	goto	l100
  1487                           
  1488                           ;projet_sumo.c: 150: val[i] = ((unsigned int) ADRESH << 8) + (unsigned int) ADRESL;
  1489  001560  50C3               	movf	4035,w,c	;volatile
  1490  001562  CFC4 F003          	movff	4036,??_read_adc	;volatile
  1491  001566  6A04               	clrf	(??_read_adc+1)& (0+255),c
  1492  001568  C003  F004         	movff	??_read_adc,??_read_adc+1
  1493  00156C  6A03               	clrf	??_read_adc,c
  1494  00156E  2603               	addwf	??_read_adc,f,c
  1495  001570  0E00               	movlw	0
  1496  001572  2204               	addwfc	??_read_adc+1,f,c
  1497  001574  90D8               	bcf	status,0,c
  1498  001576  340F               	rlcf	read_adc@i,w,c
  1499  001578  6ED9               	movwf	fsr2l,c
  1500  00157A  3410               	rlcf	read_adc@i+1,w,c
  1501  00157C  6EDA               	movwf	fsr2h,c
  1502  00157E  0E05               	movlw	low read_adc@val
  1503  001580  26D9               	addwf	fsr2l,f,c
  1504  001582  0E00               	movlw	high read_adc@val
  1505  001584  22DA               	addwfc	fsr2h,f,c
  1506  001586  C003  FFDE         	movff	??_read_adc,postinc2
  1507  00158A  C004  FFDD         	movff	??_read_adc+1,postdec2
  1508  00158E  4A0F               	infsnz	read_adc@i,f,c
  1509  001590  2A10               	incf	read_adc@i+1,f,c
  1510  001592  D7CB               	goto	l1101
  1511  001594  D000               	goto	l1117
  1512  001596                     l1117:
  1513                           
  1514                           ;projet_sumo.c: 151: }
  1515                           ;projet_sumo.c: 152: return val;
  1516  001596  0E05               	movlw	low read_adc@val
  1517  001598  6E01               	movwf	?_read_adc,c
  1518  00159A  0E00               	movlw	high read_adc@val
  1519  00159C  6E02               	movwf	?_read_adc+1,c
  1520  00159E  D000               	goto	l103
  1521  0015A0                     l103:
  1522  0015A0  0012               	return		;funcret
  1523  0015A2                     __end_of_read_adc:
  1524                           	opt stack 0
  1525                           tblptru	equ	0xFF8
  1526                           tblptrh	equ	0xFF7
  1527                           tblptrl	equ	0xFF6
  1528                           tablat	equ	0xFF5
  1529                           wreg	equ	0xFE8
  1530                           postinc2	equ	0xFDE
  1531                           postdec2	equ	0xFDD
  1532                           fsr2h	equ	0xFDA
  1533                           fsr2l	equ	0xFD9
  1534                           status	equ	0xFD8
  1535                           
  1536 ;; *************** function _init_tor *****************
  1537 ;; Defined at:
  1538 ;;		line 47 in file "projet_sumo.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;		None               void
  1545 ;; Registers used:
  1546 ;;		None
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1556 ;;Total ram usage:        0 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; This function calls:
  1559 ;;		Nothing
  1560 ;; This function is called by:
  1561 ;;		_main
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text9
  1566  001800                     __ptext9:
  1567                           	opt stack 0
  1568  001800                     _init_tor:
  1569                           	opt stack 30
  1570                           
  1571                           ;projet_sumo.c: 48: TRISDbits.RD5 = 1;
  1572                           
  1573                           ;incstack = 0
  1574  001800  8A95               	bsf	3989,5,c	;volatile
  1575                           
  1576                           ;projet_sumo.c: 49: TRISDbits.RD6 = 1;
  1577  001802  8C95               	bsf	3989,6,c	;volatile
  1578  001804  0012               	return		;funcret
  1579  001806                     __end_of_init_tor:
  1580                           	opt stack 0
  1581                           tblptru	equ	0xFF8
  1582                           tblptrh	equ	0xFF7
  1583                           tblptrl	equ	0xFF6
  1584                           tablat	equ	0xFF5
  1585                           wreg	equ	0xFE8
  1586                           postinc2	equ	0xFDE
  1587                           postdec2	equ	0xFDD
  1588                           fsr2h	equ	0xFDA
  1589                           fsr2l	equ	0xFD9
  1590                           status	equ	0xFD8
  1591                           
  1592 ;; *************** function _init_timer2 *****************
  1593 ;; Defined at:
  1594 ;;		line 76 in file "projet_sumo.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  PR2_value       1    wreg     unsigned char 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  PR2_value       1    0[COMRAM] unsigned char 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;		None               void
  1601 ;; Registers used:
  1602 ;;		wreg, status,2
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;Total ram usage:        1 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; This function calls:
  1615 ;;		Nothing
  1616 ;; This function is called by:
  1617 ;;		_main
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text10
  1622  0017AA                     __ptext10:
  1623                           	opt stack 0
  1624  0017AA                     _init_timer2:
  1625                           	opt stack 30
  1626                           
  1627                           ;incstack = 0
  1628                           ;init_timer2@PR2_value stored from wreg
  1629  0017AA  6E01               	movwf	init_timer2@PR2_value,c
  1630                           
  1631                           ;projet_sumo.c: 77: T2CONbits.TOUTPS = 0b000;
  1632  0017AC  96CA               	bcf	4042,3,c	;volatile
  1633  0017AE  98CA               	bcf	4042,4,c	;volatile
  1634  0017B0  9ACA               	bcf	4042,5,c	;volatile
  1635  0017B2  9CCA               	bcf	4042,6,c	;volatile
  1636                           
  1637                           ;projet_sumo.c: 78: T2CONbits.T2CKPS = 0b00;
  1638  0017B4  0EFC               	movlw	-4
  1639  0017B6  16CA               	andwf	4042,f,c	;volatile
  1640                           
  1641                           ;projet_sumo.c: 80: PR2 = PR2_value;
  1642  0017B8  C001  FFCB         	movff	init_timer2@PR2_value,4043	;volatile
  1643                           
  1644                           ;projet_sumo.c: 82: T2CONbits.TMR2ON = 1;
  1645  0017BC  84CA               	bsf	4042,2,c	;volatile
  1646  0017BE  0012               	return		;funcret
  1647  0017C0                     __end_of_init_timer2:
  1648                           	opt stack 0
  1649                           tblptru	equ	0xFF8
  1650                           tblptrh	equ	0xFF7
  1651                           tblptrl	equ	0xFF6
  1652                           tablat	equ	0xFF5
  1653                           wreg	equ	0xFE8
  1654                           postinc2	equ	0xFDE
  1655                           postdec2	equ	0xFDD
  1656                           fsr2h	equ	0xFDA
  1657                           fsr2l	equ	0xFD9
  1658                           status	equ	0xFD8
  1659                           
  1660 ;; *************** function _init_sumo *****************
  1661 ;; Defined at:
  1662 ;;		line 242 in file "projet_sumo.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;		None
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  i               2   11[COMRAM] int 
  1667 ;;  i               2    9[COMRAM] int 
  1668 ;;  i               2    7[COMRAM] int 
  1669 ;;  i               2    5[COMRAM] int 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;		None               void
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;Total ram usage:        9 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    1
  1686 ;; This function calls:
  1687 ;;		_vitesse_moteur_droit
  1688 ;;		_vitesse_moteur_gauche
  1689 ;; This function is called by:
  1690 ;;		_main
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text11
  1695  001226                     __ptext11:
  1696                           	opt stack 0
  1697  001226                     _init_sumo:
  1698                           	opt stack 29
  1699                           
  1700                           ;projet_sumo.c: 243: for (int i = 0; i < 100; i++)
  1701                           
  1702                           ;incstack = 0
  1703  001226  0E00               	movlw	0
  1704  001228  6E07               	movwf	init_sumo@i+1,c
  1705  00122A  0E00               	movlw	0
  1706  00122C  6E06               	movwf	init_sumo@i,c
  1707  00122E                     l1213:
  1708  00122E  BE07               	btfsc	init_sumo@i+1,7,c
  1709  001230  D008               	goto	l1217
  1710  001232  5007               	movf	init_sumo@i+1,w,c
  1711  001234  E112               	bnz	l1221
  1712  001236  0E64               	movlw	100
  1713  001238  5C06               	subwf	init_sumo@i,w,c
  1714  00123A  B0D8               	btfsc	status,0,c
  1715  00123C  D00E               	goto	l1221
  1716  00123E  D001               	goto	l1217
  1717  001240  D00C               	goto	l1221
  1718  001242                     l1217:
  1719                           
  1720                           ;projet_sumo.c: 244: _delay((unsigned long)((50)*(10000000/4000.0)));
  1721  001242  0EA3               	movlw	163
  1722  001244  6E05               	movwf	??_init_sumo& (0+255),c
  1723  001246  0E55               	movlw	85
  1724  001248                     u1127:
  1725  001248  2EE8               	decfsz	wreg,f,c
  1726  00124A  D7FE               	goto	u1127
  1727  00124C  2E05               	decfsz	??_init_sumo& (0+255),f,c
  1728  00124E  D7FC               	goto	u1127
  1729  001250  F000               	nop	
  1730  001252  4A06               	infsnz	init_sumo@i,f,c
  1731  001254  2A07               	incf	init_sumo@i+1,f,c
  1732  001256  D7EB               	goto	l1213
  1733  001258  D000               	goto	l1221
  1734  00125A                     l1221:
  1735                           
  1736                           ;projet_sumo.c: 245: vitesse_moteur_gauche(200);
  1737  00125A  0E00               	movlw	0
  1738  00125C  6E02               	movwf	vitesse_moteur_gauche@v+1,c
  1739  00125E  0EC8               	movlw	200
  1740  001260  6E01               	movwf	vitesse_moteur_gauche@v,c
  1741  001262  ECD1  F00A         	call	_vitesse_moteur_gauche	;wreg free
  1742                           
  1743                           ;projet_sumo.c: 246: vitesse_moteur_droit(200);
  1744  001266  0E00               	movlw	0
  1745  001268  6E02               	movwf	vitesse_moteur_droit@v+1,c
  1746  00126A  0EC8               	movlw	200
  1747  00126C  6E01               	movwf	vitesse_moteur_droit@v,c
  1748  00126E  EC01  F00B         	call	_vitesse_moteur_droit	;wreg free
  1749                           
  1750                           ;projet_sumo.c: 247: for (int i = 0; i < 25; i++)
  1751  001272  0E00               	movlw	0
  1752  001274  6E09               	movwf	init_sumo@i_986+1,c
  1753  001276  0E00               	movlw	0
  1754  001278  6E08               	movwf	init_sumo@i_986,c
  1755  00127A                     l1225:
  1756  00127A  BE09               	btfsc	init_sumo@i_986+1,7,c
  1757  00127C  D008               	goto	l1229
  1758  00127E  5009               	movf	init_sumo@i_986+1,w,c
  1759  001280  E112               	bnz	l1233
  1760  001282  0E19               	movlw	25
  1761  001284  5C08               	subwf	init_sumo@i_986,w,c
  1762  001286  B0D8               	btfsc	status,0,c
  1763  001288  D00E               	goto	l1233
  1764  00128A  D001               	goto	l1229
  1765  00128C  D00C               	goto	l1233
  1766  00128E                     l1229:
  1767                           
  1768                           ;projet_sumo.c: 248: _delay((unsigned long)((50)*(10000000/4000.0)));
  1769  00128E  0EA3               	movlw	163
  1770  001290  6E05               	movwf	??_init_sumo& (0+255),c
  1771  001292  0E55               	movlw	85
  1772  001294                     u1137:
  1773  001294  2EE8               	decfsz	wreg,f,c
  1774  001296  D7FE               	goto	u1137
  1775  001298  2E05               	decfsz	??_init_sumo& (0+255),f,c
  1776  00129A  D7FC               	goto	u1137
  1777  00129C  F000               	nop	
  1778  00129E  4A08               	infsnz	init_sumo@i_986,f,c
  1779  0012A0  2A09               	incf	init_sumo@i_986+1,f,c
  1780  0012A2  D7EB               	goto	l1225
  1781  0012A4  D000               	goto	l1233
  1782  0012A6                     l1233:
  1783                           
  1784                           ;projet_sumo.c: 249: vitesse_moteur_gauche(-300);
  1785  0012A6  0EFE               	movlw	254
  1786  0012A8  6E02               	movwf	vitesse_moteur_gauche@v+1,c
  1787  0012AA  0ED4               	movlw	212
  1788  0012AC  6E01               	movwf	vitesse_moteur_gauche@v,c
  1789  0012AE  ECD1  F00A         	call	_vitesse_moteur_gauche	;wreg free
  1790                           
  1791                           ;projet_sumo.c: 250: vitesse_moteur_droit(300);
  1792  0012B2  0E01               	movlw	1
  1793  0012B4  6E02               	movwf	vitesse_moteur_droit@v+1,c
  1794  0012B6  0E2C               	movlw	44
  1795  0012B8  6E01               	movwf	vitesse_moteur_droit@v,c
  1796  0012BA  EC01  F00B         	call	_vitesse_moteur_droit	;wreg free
  1797                           
  1798                           ;projet_sumo.c: 251: for (int i = 0; i < 10; i++)
  1799  0012BE  0E00               	movlw	0
  1800  0012C0  6E0B               	movwf	init_sumo@i_987+1,c
  1801  0012C2  0E00               	movlw	0
  1802  0012C4  6E0A               	movwf	init_sumo@i_987,c
  1803  0012C6                     l1237:
  1804  0012C6  BE0B               	btfsc	init_sumo@i_987+1,7,c
  1805  0012C8  D008               	goto	l1241
  1806  0012CA  500B               	movf	init_sumo@i_987+1,w,c
  1807  0012CC  E112               	bnz	l1245
  1808  0012CE  0E0A               	movlw	10
  1809  0012D0  5C0A               	subwf	init_sumo@i_987,w,c
  1810  0012D2  B0D8               	btfsc	status,0,c
  1811  0012D4  D00E               	goto	l1245
  1812  0012D6  D001               	goto	l1241
  1813  0012D8  D00C               	goto	l1245
  1814  0012DA                     l1241:
  1815                           
  1816                           ;projet_sumo.c: 252: _delay((unsigned long)((50)*(10000000/4000.0)));
  1817  0012DA  0EA3               	movlw	163
  1818  0012DC  6E05               	movwf	??_init_sumo& (0+255),c
  1819  0012DE  0E55               	movlw	85
  1820  0012E0                     u1147:
  1821  0012E0  2EE8               	decfsz	wreg,f,c
  1822  0012E2  D7FE               	goto	u1147
  1823  0012E4  2E05               	decfsz	??_init_sumo& (0+255),f,c
  1824  0012E6  D7FC               	goto	u1147
  1825  0012E8  F000               	nop	
  1826  0012EA  4A0A               	infsnz	init_sumo@i_987,f,c
  1827  0012EC  2A0B               	incf	init_sumo@i_987+1,f,c
  1828  0012EE  D7EB               	goto	l1237
  1829  0012F0  D000               	goto	l1245
  1830  0012F2                     l1245:
  1831                           
  1832                           ;projet_sumo.c: 253: vitesse_moteur_gauche(200);
  1833  0012F2  0E00               	movlw	0
  1834  0012F4  6E02               	movwf	vitesse_moteur_gauche@v+1,c
  1835  0012F6  0EC8               	movlw	200
  1836  0012F8  6E01               	movwf	vitesse_moteur_gauche@v,c
  1837  0012FA  ECD1  F00A         	call	_vitesse_moteur_gauche	;wreg free
  1838                           
  1839                           ;projet_sumo.c: 254: vitesse_moteur_droit(200);
  1840  0012FE  0E00               	movlw	0
  1841  001300  6E02               	movwf	vitesse_moteur_droit@v+1,c
  1842  001302  0EC8               	movlw	200
  1843  001304  6E01               	movwf	vitesse_moteur_droit@v,c
  1844  001306  EC01  F00B         	call	_vitesse_moteur_droit	;wreg free
  1845                           
  1846                           ;projet_sumo.c: 255: for (int i = 0; i < 25; i++)
  1847  00130A  0E00               	movlw	0
  1848  00130C  6E0D               	movwf	init_sumo@i_988+1,c
  1849  00130E  0E00               	movlw	0
  1850  001310  6E0C               	movwf	init_sumo@i_988,c
  1851  001312                     l1249:
  1852  001312  BE0D               	btfsc	init_sumo@i_988+1,7,c
  1853  001314  D008               	goto	l1253
  1854  001316  500D               	movf	init_sumo@i_988+1,w,c
  1855  001318  E112               	bnz	l147
  1856  00131A  0E19               	movlw	25
  1857  00131C  5C0C               	subwf	init_sumo@i_988,w,c
  1858  00131E  B0D8               	btfsc	status,0,c
  1859  001320  D00E               	goto	l147
  1860  001322  D001               	goto	l1253
  1861  001324  D00C               	goto	l147
  1862  001326                     l1253:
  1863                           
  1864                           ;projet_sumo.c: 256: _delay((unsigned long)((50)*(10000000/4000.0)));
  1865  001326  0EA3               	movlw	163
  1866  001328  6E05               	movwf	??_init_sumo& (0+255),c
  1867  00132A  0E55               	movlw	85
  1868  00132C                     u1157:
  1869  00132C  2EE8               	decfsz	wreg,f,c
  1870  00132E  D7FE               	goto	u1157
  1871  001330  2E05               	decfsz	??_init_sumo& (0+255),f,c
  1872  001332  D7FC               	goto	u1157
  1873  001334  F000               	nop	
  1874  001336  4A0C               	infsnz	init_sumo@i_988,f,c
  1875  001338  2A0D               	incf	init_sumo@i_988+1,f,c
  1876  00133A  D7EB               	goto	l1249
  1877  00133C  D000               	goto	l147
  1878  00133E                     l147:
  1879  00133E  0012               	return		;funcret
  1880  001340                     __end_of_init_sumo:
  1881                           	opt stack 0
  1882                           tblptru	equ	0xFF8
  1883                           tblptrh	equ	0xFF7
  1884                           tblptrl	equ	0xFF6
  1885                           tablat	equ	0xFF5
  1886                           wreg	equ	0xFE8
  1887                           postinc2	equ	0xFDE
  1888                           postdec2	equ	0xFDD
  1889                           fsr2h	equ	0xFDA
  1890                           fsr2l	equ	0xFD9
  1891                           status	equ	0xFD8
  1892                           
  1893 ;; *************** function _vitesse_moteur_gauche *****************
  1894 ;; Defined at:
  1895 ;;		line 159 in file "projet_sumo.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  v               2    0[COMRAM] int 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;		None               void
  1902 ;; Registers used:
  1903 ;;		wreg, status,2, status,0
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1909 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1911 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1912 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1913 ;;Total ram usage:        4 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_mode_course
  1919 ;;		_init_sumo
  1920 ;;		_mode_sumo
  1921 ;;		_main
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           	psect	text12
  1926  0015A2                     __ptext12:
  1927                           	opt stack 0
  1928  0015A2                     _vitesse_moteur_gauche:
  1929                           	opt stack 30
  1930                           
  1931                           ;projet_sumo.c: 160: if (v < 0) {
  1932                           
  1933                           ;incstack = 0
  1934  0015A2  AE02               	btfss	vitesse_moteur_gauche@v+1,7,c
  1935  0015A4  D006               	goto	l106
  1936                           
  1937                           ;projet_sumo.c: 161: PORTCbits.RC5 = 0;
  1938  0015A6  9A82               	bcf	3970,5,c	;volatile
  1939                           
  1940                           ;projet_sumo.c: 162: v = -v;
  1941  0015A8  6C01               	negf	vitesse_moteur_gauche@v,c
  1942  0015AA  1E02               	comf	vitesse_moteur_gauche@v+1,f,c
  1943  0015AC  B0D8               	btfsc	status,0,c
  1944  0015AE  2A02               	incf	vitesse_moteur_gauche@v+1,f,c
  1945                           
  1946                           ;projet_sumo.c: 163: } else
  1947  0015B0  D002               	goto	l1127
  1948  0015B2                     l106:
  1949                           
  1950                           ;projet_sumo.c: 164: PORTCbits.RC5 = 1;
  1951  0015B2  8A82               	bsf	3970,5,c	;volatile
  1952  0015B4  D000               	goto	l1127
  1953  0015B6                     l1127:
  1954                           
  1955                           ;projet_sumo.c: 167: CCP1CONbits.CCP1X = (unsigned) ((v & 0x0002) != 0);
  1956  0015B6  A201               	btfss	vitesse_moteur_gauche@v,1,c
  1957  0015B8  D003               	goto	u610
  1958  0015BA  6A03               	clrf	??_vitesse_moteur_gauche& (0+255),c
  1959  0015BC  2A03               	incf	??_vitesse_moteur_gauche& (0+255),f,c
  1960  0015BE  D001               	goto	u628
  1961  0015C0                     u610:
  1962  0015C0  6A03               	clrf	??_vitesse_moteur_gauche& (0+255),c
  1963  0015C2                     u628:
  1964  0015C2  3A03               	swapf	??_vitesse_moteur_gauche,f,c
  1965  0015C4  4603               	rlncf	??_vitesse_moteur_gauche,f,c
  1966  0015C6  50BD               	movf	4029,w,c	;volatile
  1967  0015C8  1803               	xorwf	??_vitesse_moteur_gauche,w,c
  1968  0015CA  0BDF               	andlw	-33
  1969  0015CC  1803               	xorwf	??_vitesse_moteur_gauche,w,c
  1970  0015CE  6EBD               	movwf	4029,c	;volatile
  1971                           
  1972                           ;projet_sumo.c: 168: CCP1CONbits.CCP1Y = (unsigned) ((v & 0x0001) != 0);
  1973  0015D0  A001               	btfss	vitesse_moteur_gauche@v,0,c
  1974  0015D2  D003               	goto	u630
  1975  0015D4  6A03               	clrf	??_vitesse_moteur_gauche& (0+255),c
  1976  0015D6  2A03               	incf	??_vitesse_moteur_gauche& (0+255),f,c
  1977  0015D8  D001               	goto	u648
  1978  0015DA                     u630:
  1979  0015DA  6A03               	clrf	??_vitesse_moteur_gauche& (0+255),c
  1980  0015DC                     u648:
  1981  0015DC  3A03               	swapf	??_vitesse_moteur_gauche,f,c
  1982  0015DE  50BD               	movf	4029,w,c	;volatile
  1983  0015E0  1803               	xorwf	??_vitesse_moteur_gauche,w,c
  1984  0015E2  0BEF               	andlw	-17
  1985  0015E4  1803               	xorwf	??_vitesse_moteur_gauche,w,c
  1986  0015E6  6EBD               	movwf	4029,c	;volatile
  1987                           
  1988                           ;projet_sumo.c: 169: CCPR1L = (unsigned char) (v >> 2);
  1989  0015E8  C001  F003         	movff	vitesse_moteur_gauche@v,??_vitesse_moteur_gauche
  1990  0015EC  C002  F004         	movff	vitesse_moteur_gauche@v+1,??_vitesse_moteur_gauche+1
  1991  0015F0  3404               	rlcf	??_vitesse_moteur_gauche+1,w,c
  1992  0015F2  3204               	rrcf	??_vitesse_moteur_gauche+1,f,c
  1993  0015F4  3203               	rrcf	??_vitesse_moteur_gauche,f,c
  1994  0015F6  3404               	rlcf	??_vitesse_moteur_gauche+1,w,c
  1995  0015F8  3204               	rrcf	??_vitesse_moteur_gauche+1,f,c
  1996  0015FA  3203               	rrcf	??_vitesse_moteur_gauche,f,c
  1997  0015FC  5003               	movf	??_vitesse_moteur_gauche,w,c
  1998  0015FE  6EBE               	movwf	4030,c	;volatile
  1999  001600  0012               	return		;funcret
  2000  001602                     __end_of_vitesse_moteur_gauche:
  2001                           	opt stack 0
  2002                           tblptru	equ	0xFF8
  2003                           tblptrh	equ	0xFF7
  2004                           tblptrl	equ	0xFF6
  2005                           tablat	equ	0xFF5
  2006                           wreg	equ	0xFE8
  2007                           postinc2	equ	0xFDE
  2008                           postdec2	equ	0xFDD
  2009                           fsr2h	equ	0xFDA
  2010                           fsr2l	equ	0xFD9
  2011                           status	equ	0xFD8
  2012                           
  2013 ;; *************** function _vitesse_moteur_droit *****************
  2014 ;; Defined at:
  2015 ;;		line 176 in file "projet_sumo.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  v               2    0[COMRAM] int 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;		None
  2020 ;; Return value:  Size  Location     Type
  2021 ;;		None               void
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;Total ram usage:        4 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; This function calls:
  2036 ;;		Nothing
  2037 ;; This function is called by:
  2038 ;;		_mode_course
  2039 ;;		_init_sumo
  2040 ;;		_mode_sumo
  2041 ;;		_main
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text13
  2046  001602                     __ptext13:
  2047                           	opt stack 0
  2048  001602                     _vitesse_moteur_droit:
  2049                           	opt stack 30
  2050                           
  2051                           ;projet_sumo.c: 177: if (v < 0) {
  2052                           
  2053                           ;incstack = 0
  2054  001602  AE02               	btfss	vitesse_moteur_droit@v+1,7,c
  2055  001604  D006               	goto	l111
  2056                           
  2057                           ;projet_sumo.c: 178: PORTCbits.RC0 = 0;
  2058  001606  9082               	bcf	3970,0,c	;volatile
  2059                           
  2060                           ;projet_sumo.c: 179: v = -v;
  2061  001608  6C01               	negf	vitesse_moteur_droit@v,c
  2062  00160A  1E02               	comf	vitesse_moteur_droit@v+1,f,c
  2063  00160C  B0D8               	btfsc	status,0,c
  2064  00160E  2A02               	incf	vitesse_moteur_droit@v+1,f,c
  2065                           
  2066                           ;projet_sumo.c: 180: } else
  2067  001610  D002               	goto	l1135
  2068  001612                     l111:
  2069                           
  2070                           ;projet_sumo.c: 181: PORTCbits.RC0 = 1;
  2071  001612  8082               	bsf	3970,0,c	;volatile
  2072  001614  D000               	goto	l1135
  2073  001616                     l1135:
  2074                           
  2075                           ;projet_sumo.c: 183: CCP2CONbits.CCP2X = (unsigned) ((v & 0x0002) != 0);
  2076  001616  A201               	btfss	vitesse_moteur_droit@v,1,c
  2077  001618  D003               	goto	u660
  2078  00161A  6A03               	clrf	??_vitesse_moteur_droit& (0+255),c
  2079  00161C  2A03               	incf	??_vitesse_moteur_droit& (0+255),f,c
  2080  00161E  D001               	goto	u678
  2081  001620                     u660:
  2082  001620  6A03               	clrf	??_vitesse_moteur_droit& (0+255),c
  2083  001622                     u678:
  2084  001622  3A03               	swapf	??_vitesse_moteur_droit,f,c
  2085  001624  4603               	rlncf	??_vitesse_moteur_droit,f,c
  2086  001626  50BA               	movf	4026,w,c	;volatile
  2087  001628  1803               	xorwf	??_vitesse_moteur_droit,w,c
  2088  00162A  0BDF               	andlw	-33
  2089  00162C  1803               	xorwf	??_vitesse_moteur_droit,w,c
  2090  00162E  6EBA               	movwf	4026,c	;volatile
  2091                           
  2092                           ;projet_sumo.c: 184: CCP2CONbits.CCP2Y = (unsigned) ((v & 0x0001) != 0);
  2093  001630  A001               	btfss	vitesse_moteur_droit@v,0,c
  2094  001632  D003               	goto	u680
  2095  001634  6A03               	clrf	??_vitesse_moteur_droit& (0+255),c
  2096  001636  2A03               	incf	??_vitesse_moteur_droit& (0+255),f,c
  2097  001638  D001               	goto	u698
  2098  00163A                     u680:
  2099  00163A  6A03               	clrf	??_vitesse_moteur_droit& (0+255),c
  2100  00163C                     u698:
  2101  00163C  3A03               	swapf	??_vitesse_moteur_droit,f,c
  2102  00163E  50BA               	movf	4026,w,c	;volatile
  2103  001640  1803               	xorwf	??_vitesse_moteur_droit,w,c
  2104  001642  0BEF               	andlw	-17
  2105  001644  1803               	xorwf	??_vitesse_moteur_droit,w,c
  2106  001646  6EBA               	movwf	4026,c	;volatile
  2107                           
  2108                           ;projet_sumo.c: 185: CCPR2L = (unsigned char) (v >> 2);
  2109  001648  C001  F003         	movff	vitesse_moteur_droit@v,??_vitesse_moteur_droit
  2110  00164C  C002  F004         	movff	vitesse_moteur_droit@v+1,??_vitesse_moteur_droit+1
  2111  001650  3404               	rlcf	??_vitesse_moteur_droit+1,w,c
  2112  001652  3204               	rrcf	??_vitesse_moteur_droit+1,f,c
  2113  001654  3203               	rrcf	??_vitesse_moteur_droit,f,c
  2114  001656  3404               	rlcf	??_vitesse_moteur_droit+1,w,c
  2115  001658  3204               	rrcf	??_vitesse_moteur_droit+1,f,c
  2116  00165A  3203               	rrcf	??_vitesse_moteur_droit,f,c
  2117  00165C  5003               	movf	??_vitesse_moteur_droit,w,c
  2118  00165E  6EBB               	movwf	4027,c	;volatile
  2119  001660  0012               	return		;funcret
  2120  001662                     __end_of_vitesse_moteur_droit:
  2121                           	opt stack 0
  2122                           tblptru	equ	0xFF8
  2123                           tblptrh	equ	0xFF7
  2124                           tblptrl	equ	0xFF6
  2125                           tablat	equ	0xFF5
  2126                           wreg	equ	0xFE8
  2127                           postinc2	equ	0xFDE
  2128                           postdec2	equ	0xFDD
  2129                           fsr2h	equ	0xFDA
  2130                           fsr2l	equ	0xFD9
  2131                           status	equ	0xFD8
  2132                           
  2133 ;; *************** function _init_pwm *****************
  2134 ;; Defined at:
  2135 ;;		line 55 in file "projet_sumo.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;		None
  2140 ;; Return value:  Size  Location     Type
  2141 ;;		None               void
  2142 ;; Registers used:
  2143 ;;		wreg, status,2
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;Total ram usage:        0 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_main
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text14
  2163  0017C0                     __ptext14:
  2164                           	opt stack 0
  2165  0017C0                     _init_pwm:
  2166                           	opt stack 30
  2167                           
  2168                           ;projet_sumo.c: 56: CCP1CONbits.CCP1M = 0b1100;
  2169                           
  2170                           ;incstack = 0
  2171  0017C0  50BD               	movf	4029,w,c	;volatile
  2172  0017C2  0BF0               	andlw	-16
  2173  0017C4  090C               	iorlw	12
  2174  0017C6  6EBD               	movwf	4029,c	;volatile
  2175                           
  2176                           ;projet_sumo.c: 57: CCP2CONbits.CCP2M = 0b1100;
  2177  0017C8  50BA               	movf	4026,w,c	;volatile
  2178  0017CA  0BF0               	andlw	-16
  2179  0017CC  090C               	iorlw	12
  2180  0017CE  6EBA               	movwf	4026,c	;volatile
  2181  0017D0  0012               	return		;funcret
  2182  0017D2                     __end_of_init_pwm:
  2183                           	opt stack 0
  2184                           tblptru	equ	0xFF8
  2185                           tblptrh	equ	0xFF7
  2186                           tblptrl	equ	0xFF6
  2187                           tablat	equ	0xFF5
  2188                           wreg	equ	0xFE8
  2189                           postinc2	equ	0xFDE
  2190                           postdec2	equ	0xFDD
  2191                           fsr2h	equ	0xFDA
  2192                           fsr2l	equ	0xFD9
  2193                           status	equ	0xFD8
  2194                           
  2195 ;; *************** function _init_moteur *****************
  2196 ;; Defined at:
  2197 ;;		line 63 in file "projet_sumo.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;		None
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;		None               void
  2204 ;; Registers used:
  2205 ;;		None
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;Total ram usage:        0 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; This function calls:
  2218 ;;		Nothing
  2219 ;; This function is called by:
  2220 ;;		_main
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text15
  2225  0017F2                     __ptext15:
  2226                           	opt stack 0
  2227  0017F2                     _init_moteur:
  2228                           	opt stack 30
  2229                           
  2230                           ;projet_sumo.c: 64: TRISCbits.RC0 = 0;
  2231                           
  2232                           ;incstack = 0
  2233  0017F2  9094               	bcf	3988,0,c	;volatile
  2234                           
  2235                           ;projet_sumo.c: 65: TRISCbits.RC5 = 0;
  2236  0017F4  9A94               	bcf	3988,5,c	;volatile
  2237                           
  2238                           ;projet_sumo.c: 66: PORTCbits.RC0 = 1;
  2239  0017F6  8082               	bsf	3970,0,c	;volatile
  2240                           
  2241                           ;projet_sumo.c: 67: PORTCbits.RC1 = 1;
  2242  0017F8  8282               	bsf	3970,1,c	;volatile
  2243                           
  2244                           ;projet_sumo.c: 68: PORTCbits.RC5 = 1;
  2245  0017FA  8A82               	bsf	3970,5,c	;volatile
  2246                           
  2247                           ;projet_sumo.c: 69: PORTCbits.RC2 = 1;
  2248  0017FC  8482               	bsf	3970,2,c	;volatile
  2249  0017FE  0012               	return		;funcret
  2250  001800                     __end_of_init_moteur:
  2251                           	opt stack 0
  2252                           tblptru	equ	0xFF8
  2253                           tblptrh	equ	0xFF7
  2254                           tblptrl	equ	0xFF6
  2255                           tablat	equ	0xFF5
  2256                           wreg	equ	0xFE8
  2257                           postinc2	equ	0xFDE
  2258                           postdec2	equ	0xFDD
  2259                           fsr2h	equ	0xFDA
  2260                           fsr2l	equ	0xFD9
  2261                           status	equ	0xFD8
  2262                           
  2263 ;; *************** function _init_adc *****************
  2264 ;; Defined at:
  2265 ;;		line 28 in file "projet_sumo.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;		None
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;		None
  2270 ;; Return value:  Size  Location     Type
  2271 ;;		None               void
  2272 ;; Registers used:
  2273 ;;		wreg, status,2
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2283 ;;Total ram usage:        0 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; This function calls:
  2286 ;;		Nothing
  2287 ;; This function is called by:
  2288 ;;		_main
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           	psect	text16
  2293  00171A                     __ptext16:
  2294                           	opt stack 0
  2295  00171A                     _init_adc:
  2296                           	opt stack 30
  2297                           
  2298                           ;projet_sumo.c: 29: TRISAbits.RA0 = 1;
  2299                           
  2300                           ;incstack = 0
  2301  00171A  8092               	bsf	3986,0,c	;volatile
  2302                           
  2303                           ;projet_sumo.c: 30: TRISAbits.RA1 = 1;
  2304  00171C  8292               	bsf	3986,1,c	;volatile
  2305                           
  2306                           ;projet_sumo.c: 31: TRISAbits.RA2 = 1;
  2307  00171E  8492               	bsf	3986,2,c	;volatile
  2308                           
  2309                           ;projet_sumo.c: 32: TRISAbits.RA3 = 1;
  2310  001720  8692               	bsf	3986,3,c	;volatile
  2311                           
  2312                           ;projet_sumo.c: 33: TRISAbits.RA4 = 1;
  2313  001722  8892               	bsf	3986,4,c	;volatile
  2314                           
  2315                           ;projet_sumo.c: 35: ADCON2bits.ADFM = 1;
  2316  001724  8EC0               	bsf	4032,7,c	;volatile
  2317                           
  2318                           ;projet_sumo.c: 36: ADCON1bits.VCFG0 = 0;
  2319  001726  98C1               	bcf	4033,4,c	;volatile
  2320                           
  2321                           ;projet_sumo.c: 37: ADCON1bits.VCFG1 = 0;
  2322  001728  9AC1               	bcf	4033,5,c	;volatile
  2323                           
  2324                           ;projet_sumo.c: 38: ADCON1bits.PCFG = 0b1010;
  2325  00172A  50C1               	movf	4033,w,c	;volatile
  2326  00172C  0BF0               	andlw	-16
  2327  00172E  090A               	iorlw	10
  2328  001730  6EC1               	movwf	4033,c	;volatile
  2329                           
  2330                           ;projet_sumo.c: 39: ADCON2bits.ADCS = 0b101;
  2331  001732  50C0               	movf	4032,w,c	;volatile
  2332  001734  0BF8               	andlw	-8
  2333  001736  0905               	iorlw	5
  2334  001738  6EC0               	movwf	4032,c	;volatile
  2335                           
  2336                           ;projet_sumo.c: 40: ADCON2bits.ACQT = 0b001;
  2337  00173A  50C0               	movf	4032,w,c	;volatile
  2338  00173C  0BC7               	andlw	-57
  2339  00173E  0908               	iorlw	8
  2340  001740  6EC0               	movwf	4032,c	;volatile
  2341                           
  2342                           ;projet_sumo.c: 41: ADCON0bits.ADON = 1;
  2343  001742  80C2               	bsf	4034,0,c	;volatile
  2344  001744  0012               	return		;funcret
  2345  001746                     __end_of_init_adc:
  2346                           	opt stack 0
  2347                           tblptru	equ	0xFF8
  2348                           tblptrh	equ	0xFF7
  2349                           tblptrl	equ	0xFF6
  2350                           tablat	equ	0xFF5
  2351                           wreg	equ	0xFE8
  2352                           postinc2	equ	0xFDE
  2353                           postdec2	equ	0xFDD
  2354                           fsr2h	equ	0xFDA
  2355                           fsr2l	equ	0xFD9
  2356                           status	equ	0xFD8
  2357                           
  2358 ;; *************** function _init_LS *****************
  2359 ;; Defined at:
  2360 ;;		line 88 in file "projet_sumo.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  i               2    1[COMRAM] int 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;		None               void
  2367 ;; Registers used:
  2368 ;;		wreg, status,2, status,0
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2375 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2376 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2377 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2378 ;;Total ram usage:        3 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; This function calls:
  2381 ;;		Nothing
  2382 ;; This function is called by:
  2383 ;;		_main
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           	psect	text17
  2388  0016BE                     __ptext17:
  2389                           	opt stack 0
  2390  0016BE                     _init_LS:
  2391                           	opt stack 30
  2392                           
  2393                           ;projet_sumo.c: 89: TRISCbits.RC6 = 0;
  2394                           
  2395                           ;incstack = 0
  2396  0016BE  9C94               	bcf	3988,6,c	;volatile
  2397                           
  2398                           ;projet_sumo.c: 90: TRISCbits.RC7 = 1;
  2399  0016C0  8E94               	bsf	3988,7,c	;volatile
  2400                           
  2401                           ;projet_sumo.c: 91: TRISBbits.RB5 = 0;
  2402  0016C2  9A93               	bcf	3987,5,c	;volatile
  2403                           
  2404                           ;projet_sumo.c: 92: TRISBbits.RB4 = 1;
  2405  0016C4  8893               	bsf	3987,4,c	;volatile
  2406                           
  2407                           ;projet_sumo.c: 93: TRISBbits.RB3 = 0;
  2408  0016C6  9693               	bcf	3987,3,c	;volatile
  2409                           
  2410                           ;projet_sumo.c: 95: PORTBbits.RB5 = 0;
  2411  0016C8  9A81               	bcf	3969,5,c	;volatile
  2412                           
  2413                           ;projet_sumo.c: 96: PORTBbits.RB3 = 1;
  2414  0016CA  8681               	bsf	3969,3,c	;volatile
  2415                           
  2416                           ;projet_sumo.c: 98: for (int i = 0; i < 20; i++)
  2417  0016CC  0E00               	movlw	0
  2418  0016CE  6E03               	movwf	init_LS@i+1,c
  2419  0016D0  0E00               	movlw	0
  2420  0016D2  6E02               	movwf	init_LS@i,c
  2421  0016D4  BE03               	btfsc	init_LS@i+1,7,c
  2422  0016D6  D008               	goto	l899
  2423  0016D8  5003               	movf	init_LS@i+1,w,c
  2424  0016DA  E115               	bnz	l79
  2425  0016DC  0E14               	movlw	20
  2426  0016DE  5C02               	subwf	init_LS@i,w,c
  2427  0016E0  B0D8               	btfsc	status,0,c
  2428  0016E2  D011               	goto	l79
  2429  0016E4  D001               	goto	l899
  2430  0016E6  D00F               	goto	l79
  2431  0016E8                     l899:
  2432                           
  2433                           ;projet_sumo.c: 99: _delay((unsigned long)((50)*(10000000/4000.0)));
  2434  0016E8  0EA3               	movlw	163
  2435  0016EA  6E01               	movwf	??_init_LS& (0+255),c
  2436  0016EC  0E55               	movlw	85
  2437  0016EE                     u1167:
  2438  0016EE  2EE8               	decfsz	wreg,f,c
  2439  0016F0  D7FE               	goto	u1167
  2440  0016F2  2E01               	decfsz	??_init_LS& (0+255),f,c
  2441  0016F4  D7FC               	goto	u1167
  2442  0016F6  F000               	nop	
  2443  0016F8  4A02               	infsnz	init_LS@i,f,c
  2444  0016FA  2A03               	incf	init_LS@i+1,f,c
  2445  0016FC  BE03               	btfsc	init_LS@i+1,7,c
  2446  0016FE  D7F4               	goto	l899
  2447  001700  5003               	movf	init_LS@i+1,w,c
  2448  001702  E101               	bnz	u240
  2449  001704  D7EB               	goto	L2
  2450  001706                     u240:
  2451  001706                     l79:
  2452                           
  2453                           ;projet_sumo.c: 101: TXSTAbits.TX9 = 0;
  2454  001706  9CAC               	bcf	4012,6,c	;volatile
  2455                           
  2456                           ;projet_sumo.c: 102: TXSTAbits.SYNC = 0;
  2457  001708  98AC               	bcf	4012,4,c	;volatile
  2458                           
  2459                           ;projet_sumo.c: 103: TXSTAbits.BRGH = 1;
  2460  00170A  84AC               	bsf	4012,2,c	;volatile
  2461                           
  2462                           ;projet_sumo.c: 104: TXSTAbits.TXEN = 1;
  2463  00170C  8AAC               	bsf	4012,5,c	;volatile
  2464                           
  2465                           ;projet_sumo.c: 106: RCSTAbits.RX9 = 0;
  2466  00170E  9CAB               	bcf	4011,6,c	;volatile
  2467                           
  2468                           ;projet_sumo.c: 107: RCSTAbits.SPEN = 1;
  2469  001710  8EAB               	bsf	4011,7,c	;volatile
  2470                           
  2471                           ;projet_sumo.c: 108: RCSTAbits.CREN = 1;
  2472  001712  88AB               	bsf	4011,4,c	;volatile
  2473                           
  2474                           ;projet_sumo.c: 111: SPBRG = (unsigned char) (-1 + (float) 10000000 / (16.0 * (float) 96
      +                          00));
  2475  001714  0E40               	movlw	64
  2476  001716  6EAF               	movwf	4015,c	;volatile
  2477  001718  0012               	return		;funcret
  2478  00171A                     __end_of_init_LS:
  2479                           	opt stack 0
  2480                           tblptru	equ	0xFF8
  2481                           tblptrh	equ	0xFF7
  2482                           tblptrl	equ	0xFF6
  2483                           tablat	equ	0xFF5
  2484                           wreg	equ	0xFE8
  2485                           postinc2	equ	0xFDE
  2486                           postdec2	equ	0xFDD
  2487                           fsr2h	equ	0xFDA
  2488                           fsr2l	equ	0xFD9
  2489                           status	equ	0xFD8
  2490                           
  2491 ;; *************** function _getch *****************
  2492 ;; Defined at:
  2493 ;;		line 130 in file "projet_sumo.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;  car             1    0[COMRAM] unsigned char 
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      unsigned char 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2508 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;Total ram usage:        1 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		_main
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text18
  2521  0017D2                     __ptext18:
  2522                           	opt stack 0
  2523  0017D2                     _getch:
  2524                           	opt stack 30
  2525                           
  2526                           ;projet_sumo.c: 131: char car;
  2527                           ;projet_sumo.c: 133: while (PIR1bits.RCIF == 0);
  2528                           
  2529                           ;incstack = 0
  2530  0017D2  D000               	goto	l92
  2531  0017D4                     l92:
  2532  0017D4  AA9E               	btfss	3998,5,c	;volatile
  2533  0017D6  D7FE               	goto	l92
  2534                           
  2535                           ;projet_sumo.c: 134: car = RCREG;
  2536  0017D8  CFAE F001          	movff	4014,getch@car	;volatile
  2537                           
  2538                           ;projet_sumo.c: 135: PIR1bits.RCIF = 0;
  2539  0017DC  9A9E               	bcf	3998,5,c	;volatile
  2540                           
  2541                           ;projet_sumo.c: 136: return car;
  2542  0017DE  5001               	movf	getch@car,w,c
  2543  0017E0  D000               	goto	l95
  2544  0017E2                     l95:
  2545  0017E2  0012               	return		;funcret
  2546  0017E4                     __end_of_getch:
  2547                           	opt stack 0
  2548                           tblptru	equ	0xFF8
  2549                           tblptrh	equ	0xFF7
  2550                           tblptrl	equ	0xFF6
  2551                           tablat	equ	0xFF5
  2552                           wreg	equ	0xFE8
  2553                           postinc2	equ	0xFDE
  2554                           postdec2	equ	0xFDD
  2555                           fsr2h	equ	0xFDA
  2556                           fsr2l	equ	0xFD9
  2557                           status	equ	0xFD8
  2558                           tblptru	equ	0xFF8
  2559                           tblptrh	equ	0xFF7
  2560                           tblptrl	equ	0xFF6
  2561                           tablat	equ	0xFF5
  2562                           wreg	equ	0xFE8
  2563                           postinc2	equ	0xFDE
  2564                           postdec2	equ	0xFDD
  2565                           fsr2h	equ	0xFDA
  2566                           fsr2l	equ	0xFD9
  2567                           status	equ	0xFD8
  2568                           
  2569                           	psect	rparam
  2570  0000                     tblptru	equ	0xFF8
  2571                           tblptrh	equ	0xFF7
  2572                           tblptrl	equ	0xFF6
  2573                           tablat	equ	0xFF5
  2574                           wreg	equ	0xFE8
  2575                           postinc2	equ	0xFDE
  2576                           postdec2	equ	0xFDD
  2577                           fsr2h	equ	0xFDA
  2578                           fsr2l	equ	0xFD9
  2579                           status	equ	0xFD8


Data Sizes:
    Strings     57
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     40      40
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    mode_sumo@p	PTR int  size(2) Largest target is 10
		 -> read_adc@val(COMRAM[10]), 

    mode_course@p	PTR int  size(2) Largest target is 10
		 -> read_adc@val(COMRAM[10]), 

    sp__read_adc	PTR unsigned int  size(2) Largest target is 10
		 -> read_adc@val(COMRAM[10]), 

    print@text	PTR unsigned char  size(2) Largest target is 21
		 -> STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_mode_sumo
    _print->_putch
    _mode_sumo->_read_adc
    _mode_course->_read_adc
    _init_sumo->_vitesse_moteur_droit
    _init_sumo->_vitesse_moteur_gauche

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    9345
                                             33 COMRAM     7     7      0
                              _getch
                            _init_LS
                           _init_adc
                        _init_moteur
                           _init_pwm
                          _init_sumo
                        _init_timer2
                           _init_tor
                        _mode_course
                          _mode_sumo
                              _print
               _vitesse_moteur_droit
              _vitesse_moteur_gauche
 ---------------------------------------------------------------------------------
 (1) _print                                                6     4      2     297
                                              1 COMRAM     6     4      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mode_sumo                                           17    17      0    2518
                                             16 COMRAM    17    17      0
                 _detection_obstacle
               _detection_obstacle_d
               _detection_obstacle_g
                           _read_adc
               _vitesse_moteur_droit
              _vitesse_moteur_gauche
 ---------------------------------------------------------------------------------
 (2) _detection_obstacle_g                                 3     1      2      24
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _detection_obstacle_d                                 3     1      2      24
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _detection_obstacle                                   3     1      2      24
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _mode_course                                         12    12      0    2354
                                             16 COMRAM    12    12      0
                           _read_adc
               _vitesse_moteur_droit
              _vitesse_moteur_gauche
 ---------------------------------------------------------------------------------
 (2) _read_adc                                            16    14      2     146
                                              0 COMRAM    16    14      2
 ---------------------------------------------------------------------------------
 (1) _init_tor                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_timer2                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_sumo                                            9     9      0    2070
                                              4 COMRAM     9     9      0
               _vitesse_moteur_droit
              _vitesse_moteur_gauche
 ---------------------------------------------------------------------------------
 (1) _vitesse_moteur_gauche                                4     2      2     943
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _vitesse_moteur_droit                                 4     2      2     943
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_pwm                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_moteur                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_LS                                              3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _getch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getch
   _init_LS
   _init_adc
   _init_moteur
   _init_pwm
   _init_sumo
     _vitesse_moteur_droit
     _vitesse_moteur_gauche
   _init_timer2
   _init_tor
   _mode_course
     _read_adc
     _vitesse_moteur_droit
     _vitesse_moteur_gauche
   _mode_sumo
     _detection_obstacle
     _detection_obstacle_d
     _detection_obstacle_g
     _read_adc
     _vitesse_moteur_droit
     _vitesse_moteur_gauche
   _print
     _putch
   _vitesse_moteur_droit
   _vitesse_moteur_gauche

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     28      28       1       31.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Oct 27 12:16:53 2022

                            l83 1798                              l92 17D4                              l86 17A0  
                            l95 17E2                              l79 1706                     __CFG_BORV$3 000000  
  __end_of_vitesse_moteur_droit 1662                    __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000  
                  __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000                     __CFG_OSC$HS 000000  
                           l100 155C                             l111 1612                             l103 15A0  
                           l106 15B2                             l123 175E                             l118 1792  
                           l136 144A                             l128 1778                             l147 133E  
                           l168 1224                             l899 16E8                    __CFG_CPB$OFF 000000  
                           u240 1706                             _PR2 000FCB                             u610 15C0  
                  __CFG_CPD$OFF 000000                             u630 15DA                             u800 1420  
                           u810 1430                             u660 1620                             u628 15C2  
                           u900 10B8                             u910 10C8                             u680 163A  
                           u648 15DC                             u770 13BC                             u930 110A  
                           u780 13E6                             u678 1622                             u790 13F6  
                           u950 113C                             u698 163C  __size_of_vitesse_moteur_gauche 0060  
                           wreg 000FE8   __end_of_vitesse_moteur_gauche 1602               mode_sumo@adcValue 0012  
                  __CFG_LVP$OFF 000000                    __CFG_WDT$OFF 000000                            l1101 152A  
                          l1105 153E                            l1221 125A                            l1213 122E  
                          l1117 1596                            l1205 1410                            l1135 1616  
                          l1127 15B6                            l1311 11E4                            l1303 1198  
                          l1241 12DA                            l1233 12A6                            l1225 127A  
                          l1217 1242                            l1145 178A                            l1315 120A  
                          l1307 11BE                            l1253 1326                            l1245 12F2  
                          l1237 12C6                            l1229 128E                            l1157 1756  
                          l1181 169E                            l1175 166C                            l1351 14CC  
                          l1343 14A8                            l1249 1312                            l1169 1770  
                          l1291 114C                            l1283 110C                            l1275 10D8  
                          l1363 1502                            l1199 13D6                            l1295 116C  
                          l1287 112C                            l1367 1510                            l1359 14EE  
                          l1299 1180                            STR_1 102B                            STR_2 1016  
                          STR_3 1001                            u1107 1186                            u1117 1540  
                          u1127 1248                            u1137 1294                            u1147 12E0  
                          u1157 132C                            u1167 16EE                            u1087 1692  
                          u1097 1112                    __CFG_PWRT$ON 000000                            _main 144C  
                          fsr2h 000FDA                            fsr2l 000FD9                            start 0000  
                 __CFG_IESO$OFF 000000                   __CFG_MCLRE$ON 000000                    ___param_bank 000010  
                         ?_main 0001                           _RCREG 000FAE                           _SPBRG 000FAF  
                         _TRISC 000F94                           _TXREG 000FAD                   __CFG_WRT0$OFF 000000  
                 __CFG_WRT1$OFF 000000                    ?_init_moteur 0001                    ?_init_timer2 0001  
                 __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000  
                __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000                           _getch 17D2  
               __end_of_init_LS 171A                           _print 1662                           _putch 1794  
                __CFG_BOREN$OFF 000000                           tablat 000FF5                    ?_mode_course 0001  
                         status 000FD8          _detection_obstacle$974 0003                  __CFG_PBADEN$ON 000000  
               __initialization 17E4                    __end_of_main 1522                          ??_main 0022  
    __end_of_detection_obstacle 1794                   __activetblptr 000001                          ?_getch 0001  
                        _ADRESH 000FC4                          _ADRESL 000FC3                          _CCPR1L 000FBE  
                        _CCPR2L 000FBB                          ?_print 0002                          ?_putch 0001  
          _vitesse_moteur_droit 1602                  __CFG_XINST$OFF 000000                  __CFG_STVREN$ON 000000  
              __end_of_init_adc 1746                __end_of_read_adc 15A2                __end_of_init_pwm 17D2  
              __end_of_init_tor 1806                     read_adc@val 0005                       ??_init_LS 0001  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                          print@i 0006                          putch@c 0001  
                mode_sumo@i_993 001E                      __accesstop 0080         __end_of__initialization 17E4  
         ?_vitesse_moteur_droit 0001                   ___rparam_used 000001                  __pcstackCOMRAM 0001  
                 __end_of_getch 17E4                   __end_of_print 16BE                   __end_of_putch 17AA  
                       ??_getch 0001            __size_of_init_moteur 000E            __size_of_init_timer2 0016  
                       ??_print 0004                         ??_putch 0001   __size_of_detection_obstacle_d 001A  
 __size_of_detection_obstacle_g 001A            __size_of_mode_course 010C              __size_of_init_sumo 011A  
            __size_of_mode_sumo 01EA             mode_course@adcValue 0011           _vitesse_moteur_gauche 15A2  
        ??_vitesse_moteur_droit 0003                       ?_init_adc 0001                       ?_read_adc 0001  
                     ?_init_pwm 0001                       ?_init_tor 0001                         __Hparam 0000  
                       __Lparam 0000                    __psmallconst 1000                         __pcinit 17E4  
                       __ramtop 1000                         __ptext0 144C                         __ptext1 1662  
                       __ptext2 1794                         __ptext3 103C                         __ptext4 1746  
                       __ptext5 1760                         __ptext6 177A                         __ptext7 1340  
                       __ptext8 1522                         __ptext9 1800                         _init_LS 16BE  
                     _T2CONbits 000FCA               __end_of_init_sumo 1340               __end_of_mode_sumo 1226  
          end_of_initialization 17E4              _detection_obstacle 177A                      ??_init_adc 0001  
                    ??_read_adc 0003                      ??_init_pwm 0001                      ??_init_tor 0001  
           ?_detection_obstacle 0001                       _RCSTAbits 000FAB                         postdec2 000FDD  
                       postinc2 000FDE            init_timer2@PR2_value 0001                       _PORTBbits 000F81  
                     _PORTCbits 000F82                       _PORTDbits 000F83            ??_detection_obstacle 0003  
                     _TRISAbits 000F92                       _TRISBbits 000F93                       _TRISCbits 000F94  
                     _TRISDbits 000F95          ?_vitesse_moteur_gauche 0001                     _CCP1CONbits 000FBD  
      _detection_obstacle_d$978 0003        _detection_obstacle_g$976 0003                     _CCP2CONbits 000FBA  
                     _TXSTAbits 000FAC                      main@course 0026                      main@lettre 0028  
                  mode_course@p 001B             start_initialization 17E4                __CFG_LPT1OSC$OFF 000000  
  __end_of_detection_obstacle_d 177A    __end_of_detection_obstacle_g 1760                      init_sumo@i 0006  
                 ??_init_moteur 0001                   ??_init_timer2 0001                      mode_sumo@i 001C  
                    mode_sumo@p 0020                   ??_mode_course 0011               __size_of_init_adc 002C  
             __size_of_read_adc 0080               __size_of_init_pwm 0012               __size_of_init_tor 0006  
             __CFG_CCP2MX$PORTC 000000                     __smallconst 1000                        ?_init_LS 0001  
                __size_of_getch 0012                       _init_sumo 1226                  __size_of_print 005C  
                __size_of_putch 0016             __end_of_init_moteur 1800             __end_of_init_timer2 17C0  
                     _mode_sumo 103C   __size_of_vitesse_moteur_droit 0060                        _PIR1bits 000F9E  
           __end_of_mode_course 144C                __CFG_WDTPS$32768 000000                      _ADCON0bits 000FC2  
                    _ADCON1bits 000FC1                      _ADCON2bits 000FC0         ??_vitesse_moteur_gauche 0003  
        vitesse_moteur_gauche@v 0001                      ?_init_sumo 0001                      ?_mode_sumo 0001  
          _detection_obstacle_d 1760            _detection_obstacle_g 1746                        __Hrparam 0000  
                      __Lrparam 0000                    __Lsmallconst 1000                       read_adc@i 000F  
   __size_of_detection_obstacle 001A                __size_of_init_LS 005C                     _init_moteur 17F2  
                   _init_timer2 17AA                        __ptext10 17AA                        __ptext11 1226  
                      __ptext12 15A2                        __ptext13 1602                        __ptext14 17C0  
                      __ptext15 17F2                        __ptext16 171A                        __ptext17 16BE  
                      __ptext18 17D2           ?_detection_obstacle_d 0001           ?_detection_obstacle_g 0001  
                   _mode_course 1340                        _init_adc 171A                        _read_adc 1522  
                 __size_of_main 00D6                        _init_pwm 17C0                        _init_tor 1800  
                      getch@car 0001                       print@text 0002                  init_sumo@i_986 0008  
                init_sumo@i_987 000A                  init_sumo@i_988 000C                        main@sumo 0024  
         vitesse_moteur_droit@v 0001                        init_LS@i 0002                     ??_init_sumo 0005  
                   ??_mode_sumo 0011                   main@PR2_value 0022          ??_detection_obstacle_d 0003  
        ??_detection_obstacle_g 0003  



Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Oct 27 08:45:50 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    30  0000                     _PORTBbits	set	3969
    31  0000                     _PORTCbits	set	3970
    32  0000                     _PORTDbits	set	3971
    33  0000                     _TRISAbits	set	3986
    34  0000                     _TRISBbits	set	3987
    35  0000                     _TRISC	set	3988
    36  0000                     _TRISCbits	set	3988
    37  0000                     _TRISDbits	set	3989
    38  0000                     _ADCON0bits	set	4034
    39  0000                     _ADCON1bits	set	4033
    40  0000                     _ADCON2bits	set	4032
    41  0000                     _ADRESH	set	4036
    42  0000                     _ADRESL	set	4035
    43  0000                     _CCP1CONbits	set	4029
    44  0000                     _CCP2CONbits	set	4026
    45  0000                     _CCPR1L	set	4030
    46  0000                     _CCPR2L	set	4027
    47  0000                     _PIR1bits	set	3998
    48  0000                     _PR2	set	4043
    49  0000                     _RCREG	set	4014
    50  0000                     _RCSTAbits	set	4011
    51  0000                     _SPBRG	set	4015
    52  0000                     _T2CONbits	set	4042
    53  0000                     _TXREG	set	4013
    54  0000                     _TXSTAbits	set	4012
    55                           
    56                           	psect	smallconst
    57  001000                     __psmallconst:
    58                           	opt stack 0
    59  001000  00                 	db	0
    60  001001                     STR_2:
    61  001001  4D                 	db	77	;'M'
    62  001002  6F                 	db	111	;'o'
    63  001003  64                 	db	100	;'d'
    64  001004  65                 	db	101	;'e'
    65  001005  20                 	db	32
    66  001006  53                 	db	83	;'S'
    67  001007  55                 	db	85	;'U'
    68  001008  4D                 	db	77	;'M'
    69  001009  4F                 	db	79	;'O'
    70  00100A  20                 	db	32
    71  00100B  61                 	db	97	;'a'
    72  00100C  63                 	db	99	;'c'
    73  00100D  74                 	db	116	;'t'
    74  00100E  69                 	db	105	;'i'
    75  00100F  76                 	db	118	;'v'
    76  001010  65                 	db	101	;'e'
    77  001011  0A                 	db	10
    78  001012  0D                 	db	13
    79  001013  00                 	db	0
    80  001014                     STR_1:
    81  001014  63                 	db	99	;'c'
    82  001015  6F                 	db	111	;'o'
    83  001016  75                 	db	117	;'u'
    84  001017  72                 	db	114	;'r'
    85  001018  73                 	db	115	;'s'
    86  001019  65                 	db	101	;'e'
    87  00101A  00                 	db	0
    88                           
    89                           ; #config settings
    90  00101B  00                 	db	0	; dummy byte at the end
    91  0000                     
    92                           	psect	cinit
    93  0017B8                     __pcinit:
    94                           	opt stack 0
    95  0017B8                     start_initialization:
    96                           	opt stack 0
    97  0017B8                     __initialization:
    98                           	opt stack 0
    99  0017B8                     end_of_initialization:
   100                           	opt stack 0
   101  0017B8                     __end_of__initialization:
   102                           	opt stack 0
   103  0017B8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   104  0017BA  6EF8               	movwf	tblptru,c
   105  0017BC  0E10               	movlw	high __Lsmallconst
   106  0017BE  6EF7               	movwf	tblptrh,c
   107  0017C0  0100               	movlb	0
   108  0017C2  EF06  F00A         	goto	_main	;jump to C main() function
   109                           tblptru	equ	0xFF8
   110                           tblptrh	equ	0xFF7
   111                           
   112                           	psect	cstackCOMRAM
   113  000001                     __pcstackCOMRAM:
   114                           	opt stack 0
   115  000001                     ??_init_LS:
   116  000001                     ?_read_adc:
   117                           	opt stack 0
   118  000001                     ?_detection_obstacle:
   119                           	opt stack 0
   120  000001                     ?_detection_obstacle_g:
   121                           	opt stack 0
   122  000001                     ?_detection_obstacle_d:
   123                           	opt stack 0
   124  000001                     init_timer2@PR2_value:
   125                           	opt stack 0
   126  000001                     putch@c:
   127                           	opt stack 0
   128  000001                     getch@car:
   129                           	opt stack 0
   130  000001                     vitesse_moteur_gauche@v:
   131                           	opt stack 0
   132  000001                     vitesse_moteur_droit@v:
   133                           	opt stack 0
   134                           
   135                           ; 2 bytes @ 0x0
   136  000001                     	ds	1
   137  000002                     ?_printf:
   138                           	opt stack 0
   139  000002                     print@text:
   140                           	opt stack 0
   141  000002                     init_LS@i:
   142                           	opt stack 0
   143  000002                     printf@f:
   144                           	opt stack 0
   145                           
   146                           ; 2 bytes @ 0x1
   147  000002                     	ds	1
   148  000003                     ??_read_adc:
   149  000003                     ??_vitesse_moteur_gauche:
   150  000003                     ??_vitesse_moteur_droit:
   151  000003                     _detection_obstacle$979:
   152                           	opt stack 0
   153  000003                     _detection_obstacle_g$981:
   154                           	opt stack 0
   155  000003                     _detection_obstacle_d$983:
   156                           	opt stack 0
   157                           
   158                           ; 1 bytes @ 0x2
   159  000003                     	ds	1
   160  000004                     ??_print:
   161  000004                     printf@ap:
   162                           	opt stack 0
   163                           
   164                           ; 2 bytes @ 0x3
   165  000004                     	ds	1
   166  000005                     ??_init_sumo:
   167  000005                     read_adc@val:
   168                           	opt stack 0
   169                           
   170                           ; 10 bytes @ 0x4
   171  000005                     	ds	1
   172  000006                     printf@c:
   173                           	opt stack 0
   174  000006                     print@i:
   175                           	opt stack 0
   176  000006                     init_sumo@i:
   177                           	opt stack 0
   178                           
   179                           ; 2 bytes @ 0x5
   180  000006                     	ds	2
   181  000008                     init_sumo@i_991:
   182                           	opt stack 0
   183                           
   184                           ; 2 bytes @ 0x7
   185  000008                     	ds	2
   186  00000A                     init_sumo@i_992:
   187                           	opt stack 0
   188                           
   189                           ; 2 bytes @ 0x9
   190  00000A                     	ds	2
   191  00000C                     init_sumo@i_993:
   192                           	opt stack 0
   193                           
   194                           ; 2 bytes @ 0xB
   195  00000C                     	ds	3
   196  00000F                     read_adc@i:
   197                           	opt stack 0
   198                           
   199                           ; 2 bytes @ 0xE
   200  00000F                     	ds	2
   201  000011                     ??_mode_sumo:
   202  000011                     mode_course@adcValue:
   203                           	opt stack 0
   204                           
   205                           ; 10 bytes @ 0x10
   206  000011                     	ds	1
   207  000012                     mode_sumo@adcValue:
   208                           	opt stack 0
   209                           
   210                           ; 10 bytes @ 0x11
   211  000012                     	ds	9
   212  00001B                     mode_course@p:
   213                           	opt stack 0
   214                           
   215                           ; 2 bytes @ 0x1A
   216  00001B                     	ds	1
   217  00001C                     mode_sumo@i:
   218                           	opt stack 0
   219                           
   220                           ; 2 bytes @ 0x1B
   221  00001C                     	ds	2
   222  00001E                     mode_sumo@p:
   223                           	opt stack 0
   224                           
   225                           ; 2 bytes @ 0x1D
   226  00001E                     	ds	2
   227  000020                     main@PR2_value:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0x1F
   231  000020                     	ds	2
   232  000022                     main@sumo:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x21
   236  000022                     	ds	2
   237  000024                     main@course:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0x23
   241  000024                     	ds	2
   242  000026                     main@lettre:
   243                           	opt stack 0
   244                           
   245                           ; 1 bytes @ 0x25
   246  000026                     	ds	1
   247                           tblptru	equ	0xFF8
   248                           tblptrh	equ	0xFF7
   249                           
   250 ;;
   251 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   252 ;;
   253 ;; *************** function _main *****************
   254 ;; Defined at:
   255 ;;		line 256 in file "projet_sumo.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;  lettre          1   37[COMRAM] unsigned char 
   260 ;;  course          2   35[COMRAM] int 
   261 ;;  sumo            2   33[COMRAM] int 
   262 ;;  PR2_value       2   31[COMRAM] unsigned int 
   263 ;; Return value:  Size  Location     Type
   264 ;;		None               void
   265 ;; Registers used:
   266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   267 ;; Tracked objects:
   268 ;;		On entry : 0/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   273 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   275 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   276 ;;Total ram usage:        7 bytes
   277 ;; Hardware stack levels required when called:    2
   278 ;; This function calls:
   279 ;;		_getch
   280 ;;		_init_LS
   281 ;;		_init_adc
   282 ;;		_init_moteur
   283 ;;		_init_pwm
   284 ;;		_init_sumo
   285 ;;		_init_timer2
   286 ;;		_init_tor
   287 ;;		_mode_course
   288 ;;		_mode_sumo
   289 ;;		_print
   290 ;;		_printf
   291 ;;		_putch
   292 ;;		_vitesse_moteur_droit
   293 ;;		_vitesse_moteur_gauche
   294 ;; This function is called by:
   295 ;;		Startup code after reset
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299                           	psect	text0
   300  00140C                     __ptext0:
   301                           	opt stack 0
   302  00140C                     _main:
   303                           	opt stack 29
   304                           
   305                           ;projet_sumo.c: 257: TRISC = 0x00;
   306                           
   307                           ;incstack = 0
   308  00140C  0E00               	movlw	0
   309  00140E  6E94               	movwf	3988,c	;volatile
   310                           
   311                           ;projet_sumo.c: 261: init_LS();
   312  001410  EC0D  F00B         	call	_init_LS	;wreg free
   313                           
   314                           ;projet_sumo.c: 262: init_tor();
   315  001414  ECEA  F00B         	call	_init_tor	;wreg free
   316                           
   317                           ;projet_sumo.c: 263: init_adc();
   318  001418  EC77  F00B         	call	_init_adc	;wreg free
   319                           
   320                           ;projet_sumo.c: 264: init_pwm();
   321  00141C  ECCA  F00B         	call	_init_pwm	;wreg free
   322                           
   323                           ;projet_sumo.c: 265: init_moteur();
   324  001420  ECE3  F00B         	call	_init_moteur	;wreg free
   325                           
   326                           ;projet_sumo.c: 266: unsigned int PR2_value = ((float) 10000000 / (4 * (float) 30000 * (
      +                          float) 1)) - 1;
   327  001424  0E00               	movlw	0
   328  001426  6E21               	movwf	main@PR2_value+1,c
   329  001428  0E52               	movlw	82
   330  00142A  6E20               	movwf	main@PR2_value,c
   331                           
   332                           ;projet_sumo.c: 267: init_timer2(PR2_value);
   333  00142C  5020               	movf	main@PR2_value,w,c
   334  00142E  ECBF  F00B         	call	_init_timer2
   335                           
   336                           ;projet_sumo.c: 268: init_sumo();
   337  001432  EC79  F009         	call	_init_sumo	;wreg free
   338                           
   339                           ;projet_sumo.c: 270: vitesse_moteur_gauche(0);
   340  001436  0E00               	movlw	0
   341  001438  6E02               	movwf	vitesse_moteur_gauche@v+1,c
   342  00143A  0E00               	movlw	0
   343  00143C  6E01               	movwf	vitesse_moteur_gauche@v,c
   344  00143E  ECAD  F00A         	call	_vitesse_moteur_gauche	;wreg free
   345                           
   346                           ;projet_sumo.c: 271: vitesse_moteur_droit(0);
   347  001442  0E00               	movlw	0
   348  001444  6E02               	movwf	vitesse_moteur_droit@v+1,c
   349  001446  0E00               	movlw	0
   350  001448  6E01               	movwf	vitesse_moteur_droit@v,c
   351  00144A  ECDD  F00A         	call	_vitesse_moteur_droit	;wreg free
   352                           
   353                           ;projet_sumo.c: 273: int sumo = 0;
   354  00144E  0E00               	movlw	0
   355  001450  6E23               	movwf	main@sumo+1,c
   356  001452  0E00               	movlw	0
   357  001454  6E22               	movwf	main@sumo,c
   358                           
   359                           ;projet_sumo.c: 274: int course = 0;
   360  001456  0E00               	movlw	0
   361  001458  6E25               	movwf	main@course+1,c
   362  00145A  0E00               	movlw	0
   363  00145C  D019               	goto	L1
   364  00145E                     l1347:
   365                           
   366                           ;projet_sumo.c: 277: putch('a');
   367  00145E  0E61               	movlw	97
   368  001460  ECB4  F00B         	call	_putch
   369                           
   370                           ;projet_sumo.c: 280: char lettre = getch();
   371  001464  ECD3  F00B         	call	_getch	;wreg free
   372  001468  6E26               	movwf	main@lettre,c
   373                           
   374                           ;projet_sumo.c: 281: if (lettre == 'c') {
   375  00146A  0E63               	movlw	99
   376  00146C  1826               	xorwf	main@lettre,w,c
   377  00146E  A4D8               	btfss	status,2,c
   378  001470  D011               	goto	l1357
   379                           
   380                           ;projet_sumo.c: 282: print("course");
   381  001472  0E14               	movlw	low STR_1
   382  001474  6E02               	movwf	print@text,c
   383  001476  0E10               	movlw	high STR_1
   384  001478  6E03               	movwf	print@text+1,c
   385  00147A  EC3B  F00B         	call	_print	;wreg free
   386                           
   387                           ;projet_sumo.c: 283: printf("Mode SUMO active\n\r");
   388  00147E  0E01               	movlw	low STR_2
   389  001480  6E02               	movwf	printf@f,c
   390  001482  0E10               	movlw	high STR_2
   391  001484  6E03               	movwf	printf@f+1,c
   392  001486  EC61  F00B         	call	_printf	;wreg free
   393                           
   394                           ;projet_sumo.c: 284: course = 1;
   395  00148A  0E00               	movlw	0
   396  00148C  6E25               	movwf	main@course+1,c
   397  00148E  0E01               	movlw	1
   398  001490                     L1:
   399  001490  6E24               	movwf	main@course,c
   400                           
   401                           ;projet_sumo.c: 285: } else if (lettre == 's') {
   402  001492  D009               	goto	l1361
   403  001494                     l1357:
   404  001494  0E73               	movlw	115
   405  001496  1826               	xorwf	main@lettre,w,c
   406  001498  A4D8               	btfss	status,2,c
   407  00149A  D005               	goto	l1361
   408                           
   409                           ;projet_sumo.c: 287: sumo = 1;
   410  00149C  0E00               	movlw	0
   411  00149E  6E23               	movwf	main@sumo+1,c
   412  0014A0  0E01               	movlw	1
   413  0014A2  6E22               	movwf	main@sumo,c
   414  0014A4  D000               	goto	l1361
   415  0014A6                     l1361:
   416  0014A6  5022               	movf	main@sumo,w,c
   417  0014A8  1023               	iorwf	main@sumo+1,w,c
   418  0014AA  A4D8               	btfss	status,2,c
   419  0014AC  D006               	goto	l1365
   420  0014AE  5024               	movf	main@course,w,c
   421  0014B0  1025               	iorwf	main@course+1,w,c
   422  0014B2  A4D8               	btfss	status,2,c
   423  0014B4  D002               	goto	l1365
   424  0014B6  D7D3               	goto	l1347
   425  0014B8  D000               	goto	l1365
   426  0014BA                     l1365:
   427                           
   428                           ;projet_sumo.c: 292: if (sumo)
   429  0014BA  5022               	movf	main@sumo,w,c
   430  0014BC  1023               	iorwf	main@sumo+1,w,c
   431  0014BE  B4D8               	btfsc	status,2,c
   432  0014C0  D003               	goto	l1369
   433                           
   434                           ;projet_sumo.c: 293: mode_sumo();
   435  0014C2  EC0E  F008         	call	_mode_sumo	;wreg free
   436  0014C6  D7F9               	goto	l1365
   437  0014C8                     l1369:
   438                           
   439                           ;projet_sumo.c: 294: else if (course)
   440  0014C8  5024               	movf	main@course,w,c
   441  0014CA  1025               	iorwf	main@course+1,w,c
   442  0014CC  B4D8               	btfsc	status,2,c
   443  0014CE  D7F5               	goto	l1365
   444                           
   445                           ;projet_sumo.c: 295: mode_course();
   446  0014D0  ECD9  F008         	call	_mode_course	;wreg free
   447  0014D4  D7F2               	goto	l1365
   448  0014D6  EF01  F000         	goto	start
   449  0014DA                     __end_of_main:
   450                           	opt stack 0
   451                           tblptru	equ	0xFF8
   452                           tblptrh	equ	0xFF7
   453                           status	equ	0xFD8
   454                           
   455 ;; *************** function _printf *****************
   456 ;; Defined at:
   457 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;  f               2    1[COMRAM] PTR const unsigned char 
   460 ;;		 -> STR_2(19), 
   461 ;; Auto vars:     Size  Location     Type
   462 ;;  tmpval          4    0        struct .
   463 ;;  cp              3    0        PTR const unsigned char 
   464 ;;  ap              2    3[COMRAM] PTR void [1]
   465 ;;		 -> ?_printf(2), 
   466 ;;  len             2    0        unsigned int 
   467 ;;  val             2    0        unsigned int 
   468 ;;  c               1    5[COMRAM] char 
   469 ;;  flag            1    0        unsigned char 
   470 ;;  prec            1    0        char 
   471 ;; Return value:  Size  Location     Type
   472 ;;                  2    1[COMRAM] int 
   473 ;; Registers used:
   474 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   481 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   483 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   484 ;;Total ram usage:        5 bytes
   485 ;; Hardware stack levels used:    1
   486 ;; Hardware stack levels required when called:    1
   487 ;; This function calls:
   488 ;;		_putch
   489 ;; This function is called by:
   490 ;;		_main
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           	psect	text1
   495  0016C2                     __ptext1:
   496                           	opt stack 0
   497  0016C2                     _printf:
   498                           	opt stack 29
   499                           
   500                           ;doprnt.c: 466: va_list ap;
   501                           ;doprnt.c: 499: signed char c;
   502                           ;doprnt.c: 506: signed char prec;
   503                           ;doprnt.c: 508: unsigned char flag;
   504                           ;doprnt.c: 523: union {
   505                           ;doprnt.c: 524: unsigned long vd;
   506                           ;doprnt.c: 525: double integ;
   507                           ;doprnt.c: 526: } tmpval;
   508                           ;doprnt.c: 528: unsigned int val;
   509                           ;doprnt.c: 529: unsigned len;
   510                           ;doprnt.c: 530: const char * cp;
   511                           ;doprnt.c: 533: *ap = __va_start();
   512                           
   513                           ;incstack = 0
   514  0016C2  0E04               	movlw	low (?_printf+2)
   515  0016C4  6E04               	movwf	printf@ap,c
   516  0016C6  0E00               	movlw	high (?_printf+2)
   517  0016C8  6E05               	movwf	printf@ap+1,c
   518                           
   519                           ;doprnt.c: 536: while(c = *f++) {
   520  0016CA  D004               	goto	l1319
   521  0016CC                     l1317:
   522                           
   523                           ;doprnt.c: 540: {
   524                           ;doprnt.c: 541: (putch(c) );
   525  0016CC  5006               	movf	printf@c,w,c
   526  0016CE  ECB4  F00B         	call	_putch
   527                           
   528                           ;doprnt.c: 542: continue;
   529  0016D2  D000               	goto	l1319
   530  0016D4                     l1319:
   531  0016D4  C002  FFF6         	movff	printf@f,tblptrl
   532  0016D8  C003  FFF7         	movff	printf@f+1,tblptrh
   533  0016DC  4A02               	infsnz	printf@f,f,c
   534  0016DE  2A03               	incf	printf@f+1,f,c
   535  0016E0                     	if	0	;tblptru may be non-zero
   536  0016E0                     	endif
   537  0016E0                     	if	0	;tblptru may be non-zero
   538  0016E0                     	endif
   539  0016E0  0008               	tblrd		*
   540  0016E2  CFF5 F006          	movff	tablat,printf@c
   541  0016E6  5006               	movf	printf@c,w,c
   542  0016E8  A4D8               	btfss	status,2,c
   543  0016EA  D7F0               	goto	l1317
   544                           
   545                           ;doprnt.c: 1469: }
   546                           ;doprnt.c: 1533: }
   547                           ;doprnt.c: 1540: return 0;
   548                           ;	Return value of _printf is never used
   549  0016EC  0012               	return		;funcret
   550  0016EE                     __end_of_printf:
   551                           	opt stack 0
   552                           tblptru	equ	0xFF8
   553                           tblptrh	equ	0xFF7
   554                           tblptrl	equ	0xFF6
   555                           tablat	equ	0xFF5
   556                           status	equ	0xFD8
   557                           
   558 ;; *************** function _print *****************
   559 ;; Defined at:
   560 ;;		line 29 in file "projet_sumo.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;  text            2    1[COMRAM] PTR unsigned char 
   563 ;;		 -> STR_1(7), 
   564 ;; Auto vars:     Size  Location     Type
   565 ;;  i               2    5[COMRAM] int 
   566 ;; Return value:  Size  Location     Type
   567 ;;		None               void
   568 ;; Registers used:
   569 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   577 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   579 ;;Total ram usage:        6 bytes
   580 ;; Hardware stack levels used:    1
   581 ;; Hardware stack levels required when called:    1
   582 ;; This function calls:
   583 ;;		_putch
   584 ;; This function is called by:
   585 ;;		_main
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           	psect	text2
   590  001676                     __ptext2:
   591                           	opt stack 0
   592  001676                     _print:
   593                           	opt stack 29
   594                           
   595                           ;projet_sumo.c: 30: int i = 0;
   596                           
   597                           ;incstack = 0
   598  001676  0E00               	movlw	0
   599  001678  6E07               	movwf	print@i+1,c
   600  00167A  0E00               	movlw	0
   601  00167C  6E06               	movwf	print@i,c
   602                           
   603                           ;projet_sumo.c: 32: while (text[i] != '\0') {
   604  00167E  D011               	goto	l1185
   605  001680                     l1181:
   606                           
   607                           ;projet_sumo.c: 33: putch(text[i]);
   608  001680  5006               	movf	print@i,w,c
   609  001682  2402               	addwf	print@text,w,c
   610  001684  6E04               	movwf	??_print& (0+255),c
   611  001686  5007               	movf	print@i+1,w,c
   612  001688  2003               	addwfc	print@text+1,w,c
   613  00168A  6E05               	movwf	(??_print+1)& (0+255),c
   614  00168C  C004  FFF6         	movff	??_print,tblptrl
   615  001690  C005  FFF7         	movff	??_print+1,tblptrh
   616  001694                     	if	0	;tblptru may be non-zero
   617  001694                     	endif
   618  001694                     	if	0	;tblptru may be non-zero
   619  001694                     	endif
   620  001694  0008               	tblrd		*
   621  001696  50F5               	movf	tablat,w,c
   622  001698  ECB4  F00B         	call	_putch
   623                           
   624                           ;projet_sumo.c: 34: i++;
   625  00169C  4A06               	infsnz	print@i,f,c
   626  00169E  2A07               	incf	print@i+1,f,c
   627  0016A0  D000               	goto	l1185
   628  0016A2                     l1185:
   629  0016A2  5006               	movf	print@i,w,c
   630  0016A4  2402               	addwf	print@text,w,c
   631  0016A6  6E04               	movwf	??_print& (0+255),c
   632  0016A8  5007               	movf	print@i+1,w,c
   633  0016AA  2003               	addwfc	print@text+1,w,c
   634  0016AC  6E05               	movwf	(??_print+1)& (0+255),c
   635  0016AE  C004  FFF6         	movff	??_print,tblptrl
   636  0016B2  C005  FFF7         	movff	??_print+1,tblptrh
   637  0016B6                     	if	0	;tblptru may be non-zero
   638  0016B6                     	endif
   639  0016B6                     	if	0	;tblptru may be non-zero
   640  0016B6                     	endif
   641  0016B6  0008               	tblrd		*
   642  0016B8  50F5               	movf	tablat,w,c
   643  0016BA  0900               	iorlw	0
   644  0016BC  A4D8               	btfss	status,2,c
   645  0016BE  D7E0               	goto	l1181
   646  0016C0  0012               	return		;funcret
   647  0016C2                     __end_of_print:
   648                           	opt stack 0
   649                           tblptru	equ	0xFF8
   650                           tblptrh	equ	0xFF7
   651                           tblptrl	equ	0xFF6
   652                           tablat	equ	0xFF5
   653                           status	equ	0xFD8
   654                           
   655 ;; *************** function _putch *****************
   656 ;; Defined at:
   657 ;;		line 112 in file "projet_sumo.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;  c               1    wreg     unsigned char 
   660 ;; Auto vars:     Size  Location     Type
   661 ;;  c               1    0[COMRAM] unsigned char 
   662 ;; Return value:  Size  Location     Type
   663 ;;		None               void
   664 ;; Registers used:
   665 ;;		wreg
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   672 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   674 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   675 ;;Total ram usage:        1 bytes
   676 ;; Hardware stack levels used:    1
   677 ;; This function calls:
   678 ;;		Nothing
   679 ;; This function is called by:
   680 ;;		_print
   681 ;;		_main
   682 ;;		_printf
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text3
   687  001768                     __ptext3:
   688                           	opt stack 0
   689  001768                     _putch:
   690                           	opt stack 30
   691                           
   692                           ;incstack = 0
   693                           ;putch@c stored from wreg
   694  001768  6E01               	movwf	putch@c,c
   695                           
   696                           ;projet_sumo.c: 113: while (PORTBbits.RB4 == 1);
   697  00176A  D000               	goto	l85
   698  00176C                     l85:
   699  00176C  A881               	btfss	3969,4,c	;volatile
   700  00176E  D002               	goto	l88
   701  001770  D7FD               	goto	l85
   702                           
   703                           ;projet_sumo.c: 114: while (!TXSTAbits.TRMT);
   704  001772  D000               	goto	l88
   705  001774                     l88:
   706  001774  A2AC               	btfss	4012,1,c	;volatile
   707  001776  D7FE               	goto	l88
   708                           
   709                           ;projet_sumo.c: 116: TXREG = c;
   710  001778  C001  FFAD         	movff	putch@c,4013	;volatile
   711  00177C  0012               	return		;funcret
   712  00177E                     __end_of_putch:
   713                           	opt stack 0
   714                           tblptru	equ	0xFF8
   715                           tblptrh	equ	0xFF7
   716                           tblptrl	equ	0xFF6
   717                           tablat	equ	0xFF5
   718                           status	equ	0xFD8
   719                           
   720 ;; *************** function _mode_sumo *****************
   721 ;; Defined at:
   722 ;;		line 223 in file "projet_sumo.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  i               2   27[COMRAM] int 
   727 ;;  adcValue       10   17[COMRAM] int [5]
   728 ;;  p               2   29[COMRAM] PTR int 
   729 ;;		 -> read_adc@val(10), 
   730 ;; Return value:  Size  Location     Type
   731 ;;		None               void
   732 ;; Registers used:
   733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;Total ram usage:       15 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; Hardware stack levels required when called:    1
   746 ;; This function calls:
   747 ;;		_detection_obstacle
   748 ;;		_detection_obstacle_d
   749 ;;		_detection_obstacle_g
   750 ;;		_read_adc
   751 ;;		_vitesse_moteur_droit
   752 ;;		_vitesse_moteur_gauche
   753 ;; This function is called by:
   754 ;;		_main
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text4
   759  00101C                     __ptext4:
   760                           	opt stack 0
   761  00101C                     _mode_sumo:
   762                           	opt stack 29
   763                           
   764                           ;projet_sumo.c: 225: int adcValue[5];
   765                           ;projet_sumo.c: 226: int *p = read_adc();
   766                           
   767                           ;incstack = 0
   768  00101C  EC6D  F00A         	call	_read_adc	;wreg free
   769  001020  C001  F01E         	movff	?_read_adc,mode_sumo@p
   770  001024  C002  F01F         	movff	?_read_adc+1,mode_sumo@p+1
   771                           
   772                           ;projet_sumo.c: 227: adcValue[0] = *(p + 0);
   773  001028  C01E  FFD9         	movff	mode_sumo@p,fsr2l
   774  00102C  C01F  FFDA         	movff	mode_sumo@p+1,fsr2h
   775  001030  CFDE F012          	movff	postinc2,mode_sumo@adcValue
   776  001034  CFDD F013          	movff	postdec2,mode_sumo@adcValue+1
   777                           
   778                           ;projet_sumo.c: 228: adcValue[1] = *(p + 1);
   779  001038  EE20 F002          	lfsr	2,2
   780  00103C  501E               	movf	mode_sumo@p,w,c
   781  00103E  26D9               	addwf	fsr2l,f,c
   782  001040  501F               	movf	mode_sumo@p+1,w,c
   783  001042  22DA               	addwfc	fsr2h,f,c
   784  001044  CFDE F014          	movff	postinc2,mode_sumo@adcValue+2
   785  001048  CFDD F015          	movff	postdec2,mode_sumo@adcValue+3
   786                           
   787                           ;projet_sumo.c: 229: adcValue[2] = *(p + 2);
   788  00104C  EE20 F004          	lfsr	2,4
   789  001050  501E               	movf	mode_sumo@p,w,c
   790  001052  26D9               	addwf	fsr2l,f,c
   791  001054  501F               	movf	mode_sumo@p+1,w,c
   792  001056  22DA               	addwfc	fsr2h,f,c
   793  001058  CFDE F016          	movff	postinc2,mode_sumo@adcValue+4
   794  00105C  CFDD F017          	movff	postdec2,mode_sumo@adcValue+5
   795                           
   796                           ;projet_sumo.c: 230: adcValue[3] = *(p + 3);
   797  001060  EE20 F006          	lfsr	2,6
   798  001064  501E               	movf	mode_sumo@p,w,c
   799  001066  26D9               	addwf	fsr2l,f,c
   800  001068  501F               	movf	mode_sumo@p+1,w,c
   801  00106A  22DA               	addwfc	fsr2h,f,c
   802  00106C  CFDE F018          	movff	postinc2,mode_sumo@adcValue+6
   803  001070  CFDD F019          	movff	postdec2,mode_sumo@adcValue+7
   804                           
   805                           ;projet_sumo.c: 231: adcValue[4] = *(p + 4);
   806  001074  EE20 F008          	lfsr	2,8
   807  001078  501E               	movf	mode_sumo@p,w,c
   808  00107A  26D9               	addwf	fsr2l,f,c
   809  00107C  501F               	movf	mode_sumo@p+1,w,c
   810  00107E  22DA               	addwfc	fsr2h,f,c
   811  001080  CFDE F01A          	movff	postinc2,mode_sumo@adcValue+8
   812  001084  CFDD F01B          	movff	postdec2,mode_sumo@adcValue+9
   813                           
   814                           ;projet_sumo.c: 234: if (adcValue[0] < 100 || adcValue[1] < 100 || adcValue[2] < 100 || 
      +                          adcValue[3] < 100 || adcValue[4] < 100) {
   815  001088  BE13               	btfsc	mode_sumo@adcValue+1,7,c
   816  00108A  D026               	goto	l1289
   817  00108C  5013               	movf	mode_sumo@adcValue+1,w,c
   818  00108E  E104               	bnz	u950
   819  001090  0E64               	movlw	100
   820  001092  5C12               	subwf	mode_sumo@adcValue,w,c
   821  001094  A0D8               	btfss	status,0,c
   822  001096  D020               	goto	l1289
   823  001098                     u950:
   824  001098  BE15               	btfsc	mode_sumo@adcValue+3,7,c
   825  00109A  D01E               	goto	l1289
   826  00109C  5015               	movf	mode_sumo@adcValue+3,w,c
   827  00109E  E104               	bnz	u960
   828  0010A0  0E64               	movlw	100
   829  0010A2  5C14               	subwf	mode_sumo@adcValue+2,w,c
   830  0010A4  A0D8               	btfss	status,0,c
   831  0010A6  D018               	goto	l1289
   832  0010A8                     u960:
   833  0010A8  BE17               	btfsc	mode_sumo@adcValue+5,7,c
   834  0010AA  D016               	goto	l1289
   835  0010AC  5017               	movf	mode_sumo@adcValue+5,w,c
   836  0010AE  E104               	bnz	u970
   837  0010B0  0E64               	movlw	100
   838  0010B2  5C16               	subwf	mode_sumo@adcValue+4,w,c
   839  0010B4  A0D8               	btfss	status,0,c
   840  0010B6  D010               	goto	l1289
   841  0010B8                     u970:
   842  0010B8  BE19               	btfsc	mode_sumo@adcValue+7,7,c
   843  0010BA  D00E               	goto	l1289
   844  0010BC  5019               	movf	mode_sumo@adcValue+7,w,c
   845  0010BE  E104               	bnz	u980
   846  0010C0  0E64               	movlw	100
   847  0010C2  5C18               	subwf	mode_sumo@adcValue+6,w,c
   848  0010C4  A0D8               	btfss	status,0,c
   849  0010C6  D008               	goto	l1289
   850  0010C8                     u980:
   851  0010C8  BE1B               	btfsc	mode_sumo@adcValue+9,7,c
   852  0010CA  D006               	goto	l1289
   853  0010CC  501B               	movf	mode_sumo@adcValue+9,w,c
   854  0010CE  E12A               	bnz	l1301
   855  0010D0  0E64               	movlw	100
   856  0010D2  5C1A               	subwf	mode_sumo@adcValue+8,w,c
   857  0010D4  B0D8               	btfsc	status,0,c
   858  0010D6  D026               	goto	l1301
   859  0010D8                     l1289:
   860                           
   861                           ;projet_sumo.c: 235: vitesse_moteur_gauche(-150);
   862  0010D8  0EFF               	movlw	255
   863  0010DA  6E02               	movwf	vitesse_moteur_gauche@v+1,c
   864  0010DC  0E6A               	movlw	106
   865  0010DE  6E01               	movwf	vitesse_moteur_gauche@v,c
   866  0010E0  ECAD  F00A         	call	_vitesse_moteur_gauche	;wreg free
   867                           
   868                           ;projet_sumo.c: 236: vitesse_moteur_droit(-20);
   869  0010E4  0EFF               	movlw	255
   870  0010E6  6E02               	movwf	vitesse_moteur_droit@v+1,c
   871  0010E8  0EEC               	movlw	236
   872  0010EA  6E01               	movwf	vitesse_moteur_droit@v,c
   873  0010EC  ECDD  F00A         	call	_vitesse_moteur_droit	;wreg free
   874                           
   875                           ;projet_sumo.c: 237: for (int i = 0; i < 30; i++)
   876  0010F0  0E00               	movlw	0
   877  0010F2  6E1D               	movwf	mode_sumo@i+1,c
   878  0010F4  0E00               	movlw	0
   879  0010F6  6E1C               	movwf	mode_sumo@i,c
   880  0010F8                     l1293:
   881  0010F8  BE1D               	btfsc	mode_sumo@i+1,7,c
   882  0010FA  D008               	goto	l1297
   883  0010FC  501D               	movf	mode_sumo@i+1,w,c
   884  0010FE  E158               	bnz	l168
   885  001100  0E1E               	movlw	30
   886  001102  5C1C               	subwf	mode_sumo@i,w,c
   887  001104  B0D8               	btfsc	status,0,c
   888  001106  D054               	goto	l168
   889  001108  D001               	goto	l1297
   890  00110A  D052               	goto	l168
   891  00110C                     l1297:
   892                           
   893                           ;projet_sumo.c: 238: _delay((unsigned long)((50)*(10000000/4000.0)));
   894  00110C  0EA3               	movlw	163
   895  00110E  6E11               	movwf	??_mode_sumo& (0+255),c
   896  001110  0E55               	movlw	85
   897  001112                     u1127:
   898  001112  2EE8               	decfsz	wreg,f,c
   899  001114  D7FE               	goto	u1127
   900  001116  2E11               	decfsz	??_mode_sumo& (0+255),f,c
   901  001118  D7FC               	goto	u1127
   902  00111A  F000               	nop	
   903  00111C  4A1C               	infsnz	mode_sumo@i,f,c
   904  00111E  2A1D               	incf	mode_sumo@i+1,f,c
   905  001120  D7EB               	goto	l1293
   906                           
   907                           ;projet_sumo.c: 239: } else {
   908  001122  D046               	goto	l168
   909  001124                     l1301:
   910                           
   911                           ;projet_sumo.c: 240: if (detection_obstacle()) {
   912  001124  ECA7  F00B         	call	_detection_obstacle	;wreg free
   913  001128  5001               	movf	?_detection_obstacle,w,c
   914  00112A  1002               	iorwf	?_detection_obstacle+1,w,c
   915  00112C  B4D8               	btfsc	status,2,c
   916  00112E  D00D               	goto	l1305
   917                           
   918                           ;projet_sumo.c: 241: vitesse_moteur_gauche(500);
   919  001130  0E01               	movlw	1
   920  001132  6E02               	movwf	vitesse_moteur_gauche@v+1,c
   921  001134  0EF4               	movlw	244
   922  001136  6E01               	movwf	vitesse_moteur_gauche@v,c
   923  001138  ECAD  F00A         	call	_vitesse_moteur_gauche	;wreg free
   924                           
   925                           ;projet_sumo.c: 242: vitesse_moteur_droit(520);
   926  00113C  0E02               	movlw	2
   927  00113E  6E02               	movwf	vitesse_moteur_droit@v+1,c
   928  001140  0E08               	movlw	8
   929  001142  6E01               	movwf	vitesse_moteur_droit@v,c
   930  001144  ECDD  F00A         	call	_vitesse_moteur_droit	;wreg free
   931                           
   932                           ;projet_sumo.c: 243: } else if (detection_obstacle_g()) {
   933  001148  D033               	goto	l168
   934  00114A                     l1305:
   935  00114A  EC8D  F00B         	call	_detection_obstacle_g	;wreg free
   936  00114E  5001               	movf	?_detection_obstacle_g,w,c
   937  001150  1002               	iorwf	?_detection_obstacle_g+1,w,c
   938  001152  B4D8               	btfsc	status,2,c
   939  001154  D00D               	goto	l1309
   940                           
   941                           ;projet_sumo.c: 244: vitesse_moteur_gauche(520);
   942  001156  0E02               	movlw	2
   943  001158  6E02               	movwf	vitesse_moteur_gauche@v+1,c
   944  00115A  0E08               	movlw	8
   945  00115C  6E01               	movwf	vitesse_moteur_gauche@v,c
   946  00115E  ECAD  F00A         	call	_vitesse_moteur_gauche	;wreg free
   947                           
   948                           ;projet_sumo.c: 245: vitesse_moteur_droit(10);
   949  001162  0E00               	movlw	0
   950  001164  6E02               	movwf	vitesse_moteur_droit@v+1,c
   951  001166  0E0A               	movlw	10
   952  001168  6E01               	movwf	vitesse_moteur_droit@v,c
   953  00116A  ECDD  F00A         	call	_vitesse_moteur_droit	;wreg free
   954                           
   955                           ;projet_sumo.c: 246: } else if (detection_obstacle_d()) {
   956  00116E  D020               	goto	l168
   957  001170                     l1309:
   958  001170  EC9A  F00B         	call	_detection_obstacle_d	;wreg free
   959  001174  5001               	movf	?_detection_obstacle_d,w,c
   960  001176  1002               	iorwf	?_detection_obstacle_d+1,w,c
   961  001178  B4D8               	btfsc	status,2,c
   962  00117A  D00D               	goto	l1313
   963                           
   964                           ;projet_sumo.c: 247: vitesse_moteur_gauche(10);
   965  00117C  0E00               	movlw	0
   966  00117E  6E02               	movwf	vitesse_moteur_gauche@v+1,c
   967  001180  0E0A               	movlw	10
   968  001182  6E01               	movwf	vitesse_moteur_gauche@v,c
   969  001184  ECAD  F00A         	call	_vitesse_moteur_gauche	;wreg free
   970                           
   971                           ;projet_sumo.c: 248: vitesse_moteur_droit(520);
   972  001188  0E02               	movlw	2
   973  00118A  6E02               	movwf	vitesse_moteur_droit@v+1,c
   974  00118C  0E08               	movlw	8
   975  00118E  6E01               	movwf	vitesse_moteur_droit@v,c
   976  001190  ECDD  F00A         	call	_vitesse_moteur_droit	;wreg free
   977                           
   978                           ;projet_sumo.c: 249: } else {
   979  001194  D00D               	goto	l168
   980  001196                     l1313:
   981                           
   982                           ;projet_sumo.c: 250: vitesse_moteur_gauche(180);
   983  001196  0E00               	movlw	0
   984  001198  6E02               	movwf	vitesse_moteur_gauche@v+1,c
   985  00119A  0EB4               	movlw	180
   986  00119C  6E01               	movwf	vitesse_moteur_gauche@v,c
   987  00119E  ECAD  F00A         	call	_vitesse_moteur_gauche	;wreg free
   988                           
   989                           ;projet_sumo.c: 251: vitesse_moteur_droit(160);
   990  0011A2  0E00               	movlw	0
   991  0011A4  6E02               	movwf	vitesse_moteur_droit@v+1,c
   992  0011A6  0EA0               	movlw	160
   993  0011A8  6E01               	movwf	vitesse_moteur_droit@v,c
   994  0011AA  ECDD  F00A         	call	_vitesse_moteur_droit	;wreg free
   995  0011AE  D000               	goto	l168
   996  0011B0                     l168:
   997  0011B0  0012               	return		;funcret
   998  0011B2                     __end_of_mode_sumo:
   999                           	opt stack 0
  1000                           tblptru	equ	0xFF8
  1001                           tblptrh	equ	0xFF7
  1002                           tblptrl	equ	0xFF6
  1003                           tablat	equ	0xFF5
  1004                           wreg	equ	0xFE8
  1005                           postinc2	equ	0xFDE
  1006                           postdec2	equ	0xFDD
  1007                           fsr2h	equ	0xFDA
  1008                           fsr2l	equ	0xFD9
  1009                           status	equ	0xFD8
  1010                           
  1011 ;; *************** function _detection_obstacle_g *****************
  1012 ;; Defined at:
  1013 ;;		line 175 in file "projet_sumo.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;		None
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;		None
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  2    0[COMRAM] int 
  1020 ;; Registers used:
  1021 ;;		wreg, status,2
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;Total ram usage:        3 bytes
  1032 ;; Hardware stack levels used:    1
  1033 ;; This function calls:
  1034 ;;		Nothing
  1035 ;; This function is called by:
  1036 ;;		_mode_sumo
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text5
  1041  00171A                     __ptext5:
  1042                           	opt stack 0
  1043  00171A                     _detection_obstacle_g:
  1044                           	opt stack 29
  1045                           
  1046                           ;projet_sumo.c: 176: return PORTDbits.RD5 == 0 && PORTDbits.RD6 == 1;
  1047                           
  1048                           ;incstack = 0
  1049  00171A  0E00               	movlw	0
  1050  00171C  6E03               	movwf	_detection_obstacle_g$981,c
  1051  00171E  AA83               	btfss	3971,5,c	;volatile
  1052  001720  AC83               	btfss	3971,6,c	;volatile
  1053  001722  D003               	goto	l1163
  1054  001724  0E01               	movlw	1
  1055  001726  6E03               	movwf	_detection_obstacle_g$981,c
  1056  001728  D000               	goto	l1163
  1057  00172A                     l1163:
  1058  00172A  C003  F001         	movff	_detection_obstacle_g$981,?_detection_obstacle_g
  1059  00172E  6A02               	clrf	?_detection_obstacle_g+1,c
  1060  001730  D000               	goto	l125
  1061  001732                     l125:
  1062  001732  0012               	return		;funcret
  1063  001734                     __end_of_detection_obstacle_g:
  1064                           	opt stack 0
  1065                           tblptru	equ	0xFF8
  1066                           tblptrh	equ	0xFF7
  1067                           tblptrl	equ	0xFF6
  1068                           tablat	equ	0xFF5
  1069                           wreg	equ	0xFE8
  1070                           postinc2	equ	0xFDE
  1071                           postdec2	equ	0xFDD
  1072                           fsr2h	equ	0xFDA
  1073                           fsr2l	equ	0xFD9
  1074                           status	equ	0xFD8
  1075                           
  1076 ;; *************** function _detection_obstacle_d *****************
  1077 ;; Defined at:
  1078 ;;		line 179 in file "projet_sumo.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  2    0[COMRAM] int 
  1085 ;; Registers used:
  1086 ;;		wreg, status,2
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;Total ram usage:        3 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_mode_sumo
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text6
  1106  001734                     __ptext6:
  1107                           	opt stack 0
  1108  001734                     _detection_obstacle_d:
  1109                           	opt stack 29
  1110                           
  1111                           ;projet_sumo.c: 180: return PORTDbits.RD5 == 1 && PORTDbits.RD6 == 0;
  1112                           
  1113                           ;incstack = 0
  1114  001734  0E00               	movlw	0
  1115  001736  6E03               	movwf	_detection_obstacle_d$983,c
  1116  001738  BA83               	btfsc	3971,5,c	;volatile
  1117  00173A  BC83               	btfsc	3971,6,c	;volatile
  1118  00173C  D003               	goto	l1175
  1119  00173E  0E01               	movlw	1
  1120  001740  6E03               	movwf	_detection_obstacle_d$983,c
  1121  001742  D000               	goto	l1175
  1122  001744                     l1175:
  1123  001744  C003  F001         	movff	_detection_obstacle_d$983,?_detection_obstacle_d
  1124  001748  6A02               	clrf	?_detection_obstacle_d+1,c
  1125  00174A  D000               	goto	l130
  1126  00174C                     l130:
  1127  00174C  0012               	return		;funcret
  1128  00174E                     __end_of_detection_obstacle_d:
  1129                           	opt stack 0
  1130                           tblptru	equ	0xFF8
  1131                           tblptrh	equ	0xFF7
  1132                           tblptrl	equ	0xFF6
  1133                           tablat	equ	0xFF5
  1134                           wreg	equ	0xFE8
  1135                           postinc2	equ	0xFDE
  1136                           postdec2	equ	0xFDD
  1137                           fsr2h	equ	0xFDA
  1138                           fsr2l	equ	0xFD9
  1139                           status	equ	0xFD8
  1140                           
  1141 ;; *************** function _detection_obstacle *****************
  1142 ;; Defined at:
  1143 ;;		line 171 in file "projet_sumo.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  2    0[COMRAM] int 
  1150 ;; Registers used:
  1151 ;;		wreg, status,2
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1158 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;Total ram usage:        3 bytes
  1162 ;; Hardware stack levels used:    1
  1163 ;; This function calls:
  1164 ;;		Nothing
  1165 ;; This function is called by:
  1166 ;;		_mode_sumo
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text7
  1171  00174E                     __ptext7:
  1172                           	opt stack 0
  1173  00174E                     _detection_obstacle:
  1174                           	opt stack 29
  1175                           
  1176                           ;projet_sumo.c: 172: return PORTDbits.RD5 == 0 && PORTDbits.RD6 == 0;
  1177                           
  1178                           ;incstack = 0
  1179  00174E  0E00               	movlw	0
  1180  001750  6E03               	movwf	_detection_obstacle$979,c
  1181  001752  AA83               	btfss	3971,5,c	;volatile
  1182  001754  BC83               	btfsc	3971,6,c	;volatile
  1183  001756  D003               	goto	l1151
  1184  001758  0E01               	movlw	1
  1185  00175A  6E03               	movwf	_detection_obstacle$979,c
  1186  00175C  D000               	goto	l1151
  1187  00175E                     l1151:
  1188  00175E  C003  F001         	movff	_detection_obstacle$979,?_detection_obstacle
  1189  001762  6A02               	clrf	?_detection_obstacle+1,c
  1190  001764  D000               	goto	l120
  1191  001766                     l120:
  1192  001766  0012               	return		;funcret
  1193  001768                     __end_of_detection_obstacle:
  1194                           	opt stack 0
  1195                           tblptru	equ	0xFF8
  1196                           tblptrh	equ	0xFF7
  1197                           tblptrl	equ	0xFF6
  1198                           tablat	equ	0xFF5
  1199                           wreg	equ	0xFE8
  1200                           postinc2	equ	0xFDE
  1201                           postdec2	equ	0xFDD
  1202                           fsr2h	equ	0xFDA
  1203                           fsr2l	equ	0xFD9
  1204                           status	equ	0xFD8
  1205                           
  1206 ;; *************** function _mode_course *****************
  1207 ;; Defined at:
  1208 ;;		line 183 in file "projet_sumo.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;		None
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;  adcValue       10   16[COMRAM] int [5]
  1213 ;;  p               2   26[COMRAM] PTR int 
  1214 ;;		 -> read_adc@val(10), 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  2  132[None  ] int 
  1217 ;; Registers used:
  1218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1227 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1228 ;;Total ram usage:       12 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:    1
  1231 ;; This function calls:
  1232 ;;		_read_adc
  1233 ;;		_vitesse_moteur_droit
  1234 ;;		_vitesse_moteur_gauche
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           	psect	text8
  1241  0011B2                     __ptext8:
  1242                           	opt stack 0
  1243  0011B2                     _mode_course:
  1244                           	opt stack 29
  1245                           
  1246                           ;projet_sumo.c: 185: int adcValue[5];
  1247                           ;projet_sumo.c: 186: int *p = read_adc();
  1248                           
  1249                           ;incstack = 0
  1250  0011B2  EC6D  F00A         	call	_read_adc	;wreg free
  1251  0011B6  C001  F01B         	movff	?_read_adc,mode_course@p
  1252  0011BA  C002  F01C         	movff	?_read_adc+1,mode_course@p+1
  1253                           
  1254                           ;projet_sumo.c: 187: adcValue[0] = *(p + 0);
  1255  0011BE  C01B  FFD9         	movff	mode_course@p,fsr2l
  1256  0011C2  C01C  FFDA         	movff	mode_course@p+1,fsr2h
  1257  0011C6  CFDE F011          	movff	postinc2,mode_course@adcValue
  1258  0011CA  CFDD F012          	movff	postdec2,mode_course@adcValue+1
  1259                           
  1260                           ;projet_sumo.c: 188: adcValue[1] = *(p + 1);
  1261  0011CE  EE20 F002          	lfsr	2,2
  1262  0011D2  501B               	movf	mode_course@p,w,c
  1263  0011D4  26D9               	addwf	fsr2l,f,c
  1264  0011D6  501C               	movf	mode_course@p+1,w,c
  1265  0011D8  22DA               	addwfc	fsr2h,f,c
  1266  0011DA  CFDE F013          	movff	postinc2,mode_course@adcValue+2
  1267  0011DE  CFDD F014          	movff	postdec2,mode_course@adcValue+3
  1268                           
  1269                           ;projet_sumo.c: 189: adcValue[2] = *(p + 2);
  1270  0011E2  EE20 F004          	lfsr	2,4
  1271  0011E6  501B               	movf	mode_course@p,w,c
  1272  0011E8  26D9               	addwf	fsr2l,f,c
  1273  0011EA  501C               	movf	mode_course@p+1,w,c
  1274  0011EC  22DA               	addwfc	fsr2h,f,c
  1275  0011EE  CFDE F015          	movff	postinc2,mode_course@adcValue+4
  1276  0011F2  CFDD F016          	movff	postdec2,mode_course@adcValue+5
  1277                           
  1278                           ;projet_sumo.c: 190: adcValue[3] = *(p + 3);
  1279  0011F6  EE20 F006          	lfsr	2,6
  1280  0011FA  501B               	movf	mode_course@p,w,c
  1281  0011FC  26D9               	addwf	fsr2l,f,c
  1282  0011FE  501C               	movf	mode_course@p+1,w,c
  1283  001200  22DA               	addwfc	fsr2h,f,c
  1284  001202  CFDE F017          	movff	postinc2,mode_course@adcValue+6
  1285  001206  CFDD F018          	movff	postdec2,mode_course@adcValue+7
  1286                           
  1287                           ;projet_sumo.c: 191: adcValue[4] = *(p + 4);
  1288  00120A  EE20 F008          	lfsr	2,8
  1289  00120E  501B               	movf	mode_course@p,w,c
  1290  001210  26D9               	addwf	fsr2l,f,c
  1291  001212  501C               	movf	mode_course@p+1,w,c
  1292  001214  22DA               	addwfc	fsr2h,f,c
  1293  001216  CFDE F019          	movff	postinc2,mode_course@adcValue+8
  1294  00121A  CFDD F01A          	movff	postdec2,mode_course@adcValue+9
  1295                           
  1296                           ;projet_sumo.c: 193: if ((adcValue[2] > 200 && adcValue[1] > 200) || (adcValue[2] > 200 
      +                          && adcValue[3] > 200)) {
  1297  00121E  BE16               	btfsc	mode_course@adcValue+5,7,c
  1298  001220  D00E               	goto	l1203
  1299  001222  5016               	movf	mode_course@adcValue+5,w,c
  1300  001224  E104               	bnz	u790
  1301  001226  0EC9               	movlw	201
  1302  001228  5C15               	subwf	mode_course@adcValue+4,w,c
  1303  00122A  A0D8               	btfss	status,0,c
  1304  00122C  D008               	goto	l1203
  1305  00122E                     u790:
  1306  00122E  BE14               	btfsc	mode_course@adcValue+3,7,c
  1307  001230  D006               	goto	l1203
  1308  001232  5014               	movf	mode_course@adcValue+3,w,c
  1309  001234  E116               	bnz	l1207
  1310  001236  0EC9               	movlw	201
  1311  001238  5C13               	subwf	mode_course@adcValue+2,w,c
  1312  00123A  B0D8               	btfsc	status,0,c
  1313  00123C  D012               	goto	l1207
  1314  00123E                     l1203:
  1315  00123E  BE16               	btfsc	mode_course@adcValue+5,7,c
  1316  001240  D01D               	goto	l1209
  1317  001242  5016               	movf	mode_course@adcValue+5,w,c
  1318  001244  E104               	bnz	u810
  1319  001246  0EC9               	movlw	201
  1320  001248  5C15               	subwf	mode_course@adcValue+4,w,c
  1321  00124A  A0D8               	btfss	status,0,c
  1322  00124C  D017               	goto	l1209
  1323  00124E                     u810:
  1324  00124E  BE18               	btfsc	mode_course@adcValue+7,7,c
  1325  001250  D015               	goto	l1209
  1326  001252  5018               	movf	mode_course@adcValue+7,w,c
  1327  001254  E106               	bnz	l1207
  1328  001256  0EC9               	movlw	201
  1329  001258  5C17               	subwf	mode_course@adcValue+6,w,c
  1330  00125A  B0D8               	btfsc	status,0,c
  1331  00125C  D002               	goto	l1207
  1332  00125E  D00E               	goto	l1209
  1333  001260  D000               	goto	l1207
  1334  001262                     l1207:
  1335                           
  1336                           ;projet_sumo.c: 194: vitesse_moteur_gauche(200);
  1337  001262  0E00               	movlw	0
  1338  001264  6E02               	movwf	vitesse_moteur_gauche@v+1,c
  1339  001266  0EC8               	movlw	200
  1340  001268  6E01               	movwf	vitesse_moteur_gauche@v,c
  1341  00126A  ECAD  F00A         	call	_vitesse_moteur_gauche	;wreg free
  1342                           
  1343                           ;projet_sumo.c: 195: vitesse_moteur_droit(230);
  1344  00126E  0E00               	movlw	0
  1345  001270  6E02               	movwf	vitesse_moteur_droit@v+1,c
  1346  001272  0EE6               	movlw	230
  1347  001274  6E01               	movwf	vitesse_moteur_droit@v,c
  1348  001276  ECDD  F00A         	call	_vitesse_moteur_droit	;wreg free
  1349                           
  1350                           ;projet_sumo.c: 196: } else if (adcValue[0] > 200 && adcValue[1] > 200) {
  1351  00127A  D03A               	goto	l142
  1352  00127C                     l1209:
  1353  00127C  BE12               	btfsc	mode_course@adcValue+1,7,c
  1354  00127E  D01B               	goto	l1215
  1355  001280  5012               	movf	mode_course@adcValue+1,w,c
  1356  001282  E104               	bnz	u830
  1357  001284  0EC9               	movlw	201
  1358  001286  5C11               	subwf	mode_course@adcValue,w,c
  1359  001288  A0D8               	btfss	status,0,c
  1360  00128A  D015               	goto	l1215
  1361  00128C                     u830:
  1362  00128C  BE14               	btfsc	mode_course@adcValue+3,7,c
  1363  00128E  D013               	goto	l1215
  1364  001290  5014               	movf	mode_course@adcValue+3,w,c
  1365  001292  E104               	bnz	u840
  1366  001294  0EC9               	movlw	201
  1367  001296  5C13               	subwf	mode_course@adcValue+2,w,c
  1368  001298  A0D8               	btfss	status,0,c
  1369  00129A  D00D               	goto	l1215
  1370  00129C                     u840:
  1371                           
  1372                           ;projet_sumo.c: 197: vitesse_moteur_gauche(130);
  1373  00129C  0E00               	movlw	0
  1374  00129E  6E02               	movwf	vitesse_moteur_gauche@v+1,c
  1375  0012A0  0E82               	movlw	130
  1376  0012A2  6E01               	movwf	vitesse_moteur_gauche@v,c
  1377  0012A4  ECAD  F00A         	call	_vitesse_moteur_gauche	;wreg free
  1378                           
  1379                           ;projet_sumo.c: 198: vitesse_moteur_droit(1);
  1380  0012A8  0E00               	movlw	0
  1381  0012AA  6E02               	movwf	vitesse_moteur_droit@v+1,c
  1382  0012AC  0E01               	movlw	1
  1383  0012AE  6E01               	movwf	vitesse_moteur_droit@v,c
  1384  0012B0  ECDD  F00A         	call	_vitesse_moteur_droit	;wreg free
  1385                           
  1386                           ;projet_sumo.c: 199: } else if (adcValue[3] > 200 && adcValue[4] > 200) {
  1387  0012B4  D01D               	goto	l142
  1388  0012B6                     l1215:
  1389  0012B6  BE18               	btfsc	mode_course@adcValue+7,7,c
  1390  0012B8  D01B               	goto	l142
  1391  0012BA  5018               	movf	mode_course@adcValue+7,w,c
  1392  0012BC  E104               	bnz	u850
  1393  0012BE  0EC9               	movlw	201
  1394  0012C0  5C17               	subwf	mode_course@adcValue+6,w,c
  1395  0012C2  A0D8               	btfss	status,0,c
  1396  0012C4  D015               	goto	l142
  1397  0012C6                     u850:
  1398  0012C6  BE1A               	btfsc	mode_course@adcValue+9,7,c
  1399  0012C8  D013               	goto	l142
  1400  0012CA  501A               	movf	mode_course@adcValue+9,w,c
  1401  0012CC  E104               	bnz	u860
  1402  0012CE  0EC9               	movlw	201
  1403  0012D0  5C19               	subwf	mode_course@adcValue+8,w,c
  1404  0012D2  A0D8               	btfss	status,0,c
  1405  0012D4  D00D               	goto	l142
  1406  0012D6                     u860:
  1407                           
  1408                           ;projet_sumo.c: 200: vitesse_moteur_gauche(1);
  1409  0012D6  0E00               	movlw	0
  1410  0012D8  6E02               	movwf	vitesse_moteur_gauche@v+1,c
  1411  0012DA  0E01               	movlw	1
  1412  0012DC  6E01               	movwf	vitesse_moteur_gauche@v,c
  1413  0012DE  ECAD  F00A         	call	_vitesse_moteur_gauche	;wreg free
  1414                           
  1415                           ;projet_sumo.c: 201: vitesse_moteur_droit(130);
  1416  0012E2  0E00               	movlw	0
  1417  0012E4  6E02               	movwf	vitesse_moteur_droit@v+1,c
  1418  0012E6  0E82               	movlw	130
  1419  0012E8  6E01               	movwf	vitesse_moteur_droit@v,c
  1420  0012EA  ECDD  F00A         	call	_vitesse_moteur_droit	;wreg free
  1421  0012EE  D000               	goto	l142
  1422  0012F0                     l142:
  1423  0012F0  0012               	return		;funcret
  1424  0012F2                     __end_of_mode_course:
  1425                           	opt stack 0
  1426                           tblptru	equ	0xFF8
  1427                           tblptrh	equ	0xFF7
  1428                           tblptrl	equ	0xFF6
  1429                           tablat	equ	0xFF5
  1430                           wreg	equ	0xFE8
  1431                           postinc2	equ	0xFDE
  1432                           postdec2	equ	0xFDD
  1433                           fsr2h	equ	0xFDA
  1434                           fsr2l	equ	0xFD9
  1435                           status	equ	0xFD8
  1436                           
  1437 ;; *************** function _read_adc *****************
  1438 ;; Defined at:
  1439 ;;		line 134 in file "projet_sumo.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  i               2   14[COMRAM] int 
  1444 ;;  val            10    4[COMRAM] int [5]
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  2    0[COMRAM] PTR unsigned int 
  1447 ;; Registers used:
  1448 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1454 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1457 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;Total ram usage:       16 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		_mode_course
  1464 ;;		_mode_sumo
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text9
  1469  0014DA                     __ptext9:
  1470                           	opt stack 0
  1471  0014DA                     _read_adc:
  1472                           	opt stack 29
  1473                           
  1474                           ;projet_sumo.c: 135: int val[5];
  1475                           ;projet_sumo.c: 136: for (int i = 0; i < 5; i++) {
  1476                           
  1477                           ;incstack = 0
  1478  0014DA  0E00               	movlw	0
  1479  0014DC  6E10               	movwf	read_adc@i+1,c
  1480  0014DE  0E00               	movlw	0
  1481  0014E0  6E0F               	movwf	read_adc@i,c
  1482  0014E2                     l1107:
  1483  0014E2  BE10               	btfsc	read_adc@i+1,7,c
  1484  0014E4  D008               	goto	l1111
  1485  0014E6  5010               	movf	read_adc@i+1,w,c
  1486  0014E8  E132               	bnz	l1123
  1487  0014EA  0E05               	movlw	5
  1488  0014EC  5C0F               	subwf	read_adc@i,w,c
  1489  0014EE  B0D8               	btfsc	status,0,c
  1490  0014F0  D02E               	goto	l1123
  1491  0014F2  D001               	goto	l1111
  1492  0014F4  D02C               	goto	l1123
  1493  0014F6                     l1111:
  1494                           
  1495                           ;projet_sumo.c: 137: _delay((unsigned long)((20)*(10000000/4000000.0)));
  1496  0014F6  0E10               	movlw	16
  1497  0014F8                     u1137:
  1498  0014F8  2EE8               	decfsz	wreg,f,c
  1499  0014FA  D7FE               	goto	u1137
  1500  0014FC  D000               	nop2		;nop
  1501                           
  1502                           ;projet_sumo.c: 138: ADCON0bits.CHS = i;
  1503  0014FE  C00F  F003         	movff	read_adc@i,??_read_adc
  1504  001502  4603               	rlncf	??_read_adc,f,c
  1505  001504  4603               	rlncf	??_read_adc,f,c
  1506  001506  50C2               	movf	4034,w,c	;volatile
  1507  001508  1803               	xorwf	??_read_adc,w,c
  1508  00150A  0BC3               	andlw	-61
  1509  00150C  1803               	xorwf	??_read_adc,w,c
  1510  00150E  6EC2               	movwf	4034,c	;volatile
  1511                           
  1512                           ;projet_sumo.c: 139: ADCON0bits.GO = 1;
  1513  001510  82C2               	bsf	4034,1,c	;volatile
  1514                           
  1515                           ;projet_sumo.c: 140: while (ADCON0bits.GO != 0);
  1516  001512  D000               	goto	l102
  1517  001514                     l102:
  1518  001514  B2C2               	btfsc	4034,1,c	;volatile
  1519  001516  D7FE               	goto	l102
  1520                           
  1521                           ;projet_sumo.c: 141: val[i] = ((unsigned int) ADRESH << 8) + (unsigned int) ADRESL;
  1522  001518  50C3               	movf	4035,w,c	;volatile
  1523  00151A  CFC4 F003          	movff	4036,??_read_adc	;volatile
  1524  00151E  6A04               	clrf	(??_read_adc+1)& (0+255),c
  1525  001520  C003  F004         	movff	??_read_adc,??_read_adc+1
  1526  001524  6A03               	clrf	??_read_adc,c
  1527  001526  2603               	addwf	??_read_adc,f,c
  1528  001528  0E00               	movlw	0
  1529  00152A  2204               	addwfc	??_read_adc+1,f,c
  1530  00152C  90D8               	bcf	status,0,c
  1531  00152E  340F               	rlcf	read_adc@i,w,c
  1532  001530  6ED9               	movwf	fsr2l,c
  1533  001532  3410               	rlcf	read_adc@i+1,w,c
  1534  001534  6EDA               	movwf	fsr2h,c
  1535  001536  0E05               	movlw	low read_adc@val
  1536  001538  26D9               	addwf	fsr2l,f,c
  1537  00153A  0E00               	movlw	high read_adc@val
  1538  00153C  22DA               	addwfc	fsr2h,f,c
  1539  00153E  C003  FFDE         	movff	??_read_adc,postinc2
  1540  001542  C004  FFDD         	movff	??_read_adc+1,postdec2
  1541  001546  4A0F               	infsnz	read_adc@i,f,c
  1542  001548  2A10               	incf	read_adc@i+1,f,c
  1543  00154A  D7CB               	goto	l1107
  1544  00154C  D000               	goto	l1123
  1545  00154E                     l1123:
  1546                           
  1547                           ;projet_sumo.c: 142: }
  1548                           ;projet_sumo.c: 143: return val;
  1549  00154E  0E05               	movlw	low read_adc@val
  1550  001550  6E01               	movwf	?_read_adc,c
  1551  001552  0E00               	movlw	high read_adc@val
  1552  001554  6E02               	movwf	?_read_adc+1,c
  1553  001556  D000               	goto	l105
  1554  001558                     l105:
  1555  001558  0012               	return		;funcret
  1556  00155A                     __end_of_read_adc:
  1557                           	opt stack 0
  1558                           tblptru	equ	0xFF8
  1559                           tblptrh	equ	0xFF7
  1560                           tblptrl	equ	0xFF6
  1561                           tablat	equ	0xFF5
  1562                           wreg	equ	0xFE8
  1563                           postinc2	equ	0xFDE
  1564                           postdec2	equ	0xFDD
  1565                           fsr2h	equ	0xFDA
  1566                           fsr2l	equ	0xFD9
  1567                           status	equ	0xFD8
  1568                           
  1569 ;; *************** function _init_tor *****************
  1570 ;; Defined at:
  1571 ;;		line 38 in file "projet_sumo.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;		None
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;		None
  1576 ;; Return value:  Size  Location     Type
  1577 ;;		None               void
  1578 ;; Registers used:
  1579 ;;		None
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;Total ram usage:        0 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_main
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text10
  1599  0017D4                     __ptext10:
  1600                           	opt stack 0
  1601  0017D4                     _init_tor:
  1602                           	opt stack 30
  1603                           
  1604                           ;projet_sumo.c: 39: TRISDbits.RD5 = 1;
  1605                           
  1606                           ;incstack = 0
  1607  0017D4  8A95               	bsf	3989,5,c	;volatile
  1608                           
  1609                           ;projet_sumo.c: 40: TRISDbits.RD6 = 1;
  1610  0017D6  8C95               	bsf	3989,6,c	;volatile
  1611  0017D8  0012               	return		;funcret
  1612  0017DA                     __end_of_init_tor:
  1613                           	opt stack 0
  1614                           tblptru	equ	0xFF8
  1615                           tblptrh	equ	0xFF7
  1616                           tblptrl	equ	0xFF6
  1617                           tablat	equ	0xFF5
  1618                           wreg	equ	0xFE8
  1619                           postinc2	equ	0xFDE
  1620                           postdec2	equ	0xFDD
  1621                           fsr2h	equ	0xFDA
  1622                           fsr2l	equ	0xFD9
  1623                           status	equ	0xFD8
  1624                           
  1625 ;; *************** function _init_timer2 *****************
  1626 ;; Defined at:
  1627 ;;		line 57 in file "projet_sumo.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  PR2_value       1    wreg     unsigned char 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  PR2_value       1    0[COMRAM] unsigned char 
  1632 ;; Return value:  Size  Location     Type
  1633 ;;		None               void
  1634 ;; Registers used:
  1635 ;;		wreg, status,2
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1645 ;;Total ram usage:        1 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; This function calls:
  1648 ;;		Nothing
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           	psect	text11
  1655  00177E                     __ptext11:
  1656                           	opt stack 0
  1657  00177E                     _init_timer2:
  1658                           	opt stack 30
  1659                           
  1660                           ;incstack = 0
  1661                           ;init_timer2@PR2_value stored from wreg
  1662  00177E  6E01               	movwf	init_timer2@PR2_value,c
  1663                           
  1664                           ;projet_sumo.c: 58: T2CONbits.TOUTPS = 0b000;
  1665  001780  96CA               	bcf	4042,3,c	;volatile
  1666  001782  98CA               	bcf	4042,4,c	;volatile
  1667  001784  9ACA               	bcf	4042,5,c	;volatile
  1668  001786  9CCA               	bcf	4042,6,c	;volatile
  1669                           
  1670                           ;projet_sumo.c: 59: T2CONbits.T2CKPS = 0b00;
  1671  001788  0EFC               	movlw	-4
  1672  00178A  16CA               	andwf	4042,f,c	;volatile
  1673                           
  1674                           ;projet_sumo.c: 61: PR2 = PR2_value;
  1675  00178C  C001  FFCB         	movff	init_timer2@PR2_value,4043	;volatile
  1676                           
  1677                           ;projet_sumo.c: 63: T2CONbits.TMR2ON = 1;
  1678  001790  84CA               	bsf	4042,2,c	;volatile
  1679  001792  0012               	return		;funcret
  1680  001794                     __end_of_init_timer2:
  1681                           	opt stack 0
  1682                           tblptru	equ	0xFF8
  1683                           tblptrh	equ	0xFF7
  1684                           tblptrl	equ	0xFF6
  1685                           tablat	equ	0xFF5
  1686                           wreg	equ	0xFE8
  1687                           postinc2	equ	0xFDE
  1688                           postdec2	equ	0xFDD
  1689                           fsr2h	equ	0xFDA
  1690                           fsr2l	equ	0xFD9
  1691                           status	equ	0xFD8
  1692                           
  1693 ;; *************** function _init_sumo *****************
  1694 ;; Defined at:
  1695 ;;		line 205 in file "projet_sumo.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;		None
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  i               2   11[COMRAM] int 
  1700 ;;  i               2    9[COMRAM] int 
  1701 ;;  i               2    7[COMRAM] int 
  1702 ;;  i               2    5[COMRAM] int 
  1703 ;; Return value:  Size  Location     Type
  1704 ;;		None               void
  1705 ;; Registers used:
  1706 ;;		wreg, status,2, status,0, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;Total ram usage:        9 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    1
  1719 ;; This function calls:
  1720 ;;		_vitesse_moteur_droit
  1721 ;;		_vitesse_moteur_gauche
  1722 ;; This function is called by:
  1723 ;;		_main
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text12
  1728  0012F2                     __ptext12:
  1729                           	opt stack 0
  1730  0012F2                     _init_sumo:
  1731                           	opt stack 29
  1732                           
  1733                           ;projet_sumo.c: 207: for (int i = 0; i < 100; i++)
  1734                           
  1735                           ;incstack = 0
  1736  0012F2  0E00               	movlw	0
  1737  0012F4  6E07               	movwf	init_sumo@i+1,c
  1738  0012F6  0E00               	movlw	0
  1739  0012F8  6E06               	movwf	init_sumo@i,c
  1740  0012FA                     l1223:
  1741  0012FA  BE07               	btfsc	init_sumo@i+1,7,c
  1742  0012FC  D008               	goto	l1227
  1743  0012FE  5007               	movf	init_sumo@i+1,w,c
  1744  001300  E112               	bnz	l1231
  1745  001302  0E64               	movlw	100
  1746  001304  5C06               	subwf	init_sumo@i,w,c
  1747  001306  B0D8               	btfsc	status,0,c
  1748  001308  D00E               	goto	l1231
  1749  00130A  D001               	goto	l1227
  1750  00130C  D00C               	goto	l1231
  1751  00130E                     l1227:
  1752                           
  1753                           ;projet_sumo.c: 208: _delay((unsigned long)((50)*(10000000/4000.0)));
  1754  00130E  0EA3               	movlw	163
  1755  001310  6E05               	movwf	??_init_sumo& (0+255),c
  1756  001312  0E55               	movlw	85
  1757  001314                     u1147:
  1758  001314  2EE8               	decfsz	wreg,f,c
  1759  001316  D7FE               	goto	u1147
  1760  001318  2E05               	decfsz	??_init_sumo& (0+255),f,c
  1761  00131A  D7FC               	goto	u1147
  1762  00131C  F000               	nop	
  1763  00131E  4A06               	infsnz	init_sumo@i,f,c
  1764  001320  2A07               	incf	init_sumo@i+1,f,c
  1765  001322  D7EB               	goto	l1223
  1766  001324  D000               	goto	l1231
  1767  001326                     l1231:
  1768                           
  1769                           ;projet_sumo.c: 209: vitesse_moteur_gauche(100);
  1770  001326  0E00               	movlw	0
  1771  001328  6E02               	movwf	vitesse_moteur_gauche@v+1,c
  1772  00132A  0E64               	movlw	100
  1773  00132C  6E01               	movwf	vitesse_moteur_gauche@v,c
  1774  00132E  ECAD  F00A         	call	_vitesse_moteur_gauche	;wreg free
  1775                           
  1776                           ;projet_sumo.c: 210: vitesse_moteur_droit(120);
  1777  001332  0E00               	movlw	0
  1778  001334  6E02               	movwf	vitesse_moteur_droit@v+1,c
  1779  001336  0E78               	movlw	120
  1780  001338  6E01               	movwf	vitesse_moteur_droit@v,c
  1781  00133A  ECDD  F00A         	call	_vitesse_moteur_droit	;wreg free
  1782                           
  1783                           ;projet_sumo.c: 211: for (int i = 0; i < 40; i++)
  1784  00133E  0E00               	movlw	0
  1785  001340  6E09               	movwf	init_sumo@i_991+1,c
  1786  001342  0E00               	movlw	0
  1787  001344  6E08               	movwf	init_sumo@i_991,c
  1788  001346                     l1235:
  1789  001346  BE09               	btfsc	init_sumo@i_991+1,7,c
  1790  001348  D008               	goto	l1239
  1791  00134A  5009               	movf	init_sumo@i_991+1,w,c
  1792  00134C  E112               	bnz	l1243
  1793  00134E  0E28               	movlw	40
  1794  001350  5C08               	subwf	init_sumo@i_991,w,c
  1795  001352  B0D8               	btfsc	status,0,c
  1796  001354  D00E               	goto	l1243
  1797  001356  D001               	goto	l1239
  1798  001358  D00C               	goto	l1243
  1799  00135A                     l1239:
  1800                           
  1801                           ;projet_sumo.c: 212: _delay((unsigned long)((50)*(10000000/4000.0)));
  1802  00135A  0EA3               	movlw	163
  1803  00135C  6E05               	movwf	??_init_sumo& (0+255),c
  1804  00135E  0E55               	movlw	85
  1805  001360                     u1157:
  1806  001360  2EE8               	decfsz	wreg,f,c
  1807  001362  D7FE               	goto	u1157
  1808  001364  2E05               	decfsz	??_init_sumo& (0+255),f,c
  1809  001366  D7FC               	goto	u1157
  1810  001368  F000               	nop	
  1811  00136A  4A08               	infsnz	init_sumo@i_991,f,c
  1812  00136C  2A09               	incf	init_sumo@i_991+1,f,c
  1813  00136E  D7EB               	goto	l1235
  1814  001370  D000               	goto	l1243
  1815  001372                     l1243:
  1816                           
  1817                           ;projet_sumo.c: 213: vitesse_moteur_gauche(-100);
  1818  001372  0EFF               	movlw	255
  1819  001374  6E02               	movwf	vitesse_moteur_gauche@v+1,c
  1820  001376  0E9C               	movlw	156
  1821  001378  6E01               	movwf	vitesse_moteur_gauche@v,c
  1822  00137A  ECAD  F00A         	call	_vitesse_moteur_gauche	;wreg free
  1823                           
  1824                           ;projet_sumo.c: 214: vitesse_moteur_droit(120);
  1825  00137E  0E00               	movlw	0
  1826  001380  6E02               	movwf	vitesse_moteur_droit@v+1,c
  1827  001382  0E78               	movlw	120
  1828  001384  6E01               	movwf	vitesse_moteur_droit@v,c
  1829  001386  ECDD  F00A         	call	_vitesse_moteur_droit	;wreg free
  1830                           
  1831                           ;projet_sumo.c: 215: for (int i = 0; i < 20; i++)
  1832  00138A  0E00               	movlw	0
  1833  00138C  6E0B               	movwf	init_sumo@i_992+1,c
  1834  00138E  0E00               	movlw	0
  1835  001390  6E0A               	movwf	init_sumo@i_992,c
  1836  001392                     l1247:
  1837  001392  BE0B               	btfsc	init_sumo@i_992+1,7,c
  1838  001394  D008               	goto	l1251
  1839  001396  500B               	movf	init_sumo@i_992+1,w,c
  1840  001398  E112               	bnz	l1255
  1841  00139A  0E14               	movlw	20
  1842  00139C  5C0A               	subwf	init_sumo@i_992,w,c
  1843  00139E  B0D8               	btfsc	status,0,c
  1844  0013A0  D00E               	goto	l1255
  1845  0013A2  D001               	goto	l1251
  1846  0013A4  D00C               	goto	l1255
  1847  0013A6                     l1251:
  1848                           
  1849                           ;projet_sumo.c: 216: _delay((unsigned long)((50)*(10000000/4000.0)));
  1850  0013A6  0EA3               	movlw	163
  1851  0013A8  6E05               	movwf	??_init_sumo& (0+255),c
  1852  0013AA  0E55               	movlw	85
  1853  0013AC                     u1167:
  1854  0013AC  2EE8               	decfsz	wreg,f,c
  1855  0013AE  D7FE               	goto	u1167
  1856  0013B0  2E05               	decfsz	??_init_sumo& (0+255),f,c
  1857  0013B2  D7FC               	goto	u1167
  1858  0013B4  F000               	nop	
  1859  0013B6  4A0A               	infsnz	init_sumo@i_992,f,c
  1860  0013B8  2A0B               	incf	init_sumo@i_992+1,f,c
  1861  0013BA  D7EB               	goto	l1247
  1862  0013BC  D000               	goto	l1255
  1863  0013BE                     l1255:
  1864                           
  1865                           ;projet_sumo.c: 217: vitesse_moteur_gauche(100);
  1866  0013BE  0E00               	movlw	0
  1867  0013C0  6E02               	movwf	vitesse_moteur_gauche@v+1,c
  1868  0013C2  0E64               	movlw	100
  1869  0013C4  6E01               	movwf	vitesse_moteur_gauche@v,c
  1870  0013C6  ECAD  F00A         	call	_vitesse_moteur_gauche	;wreg free
  1871                           
  1872                           ;projet_sumo.c: 218: vitesse_moteur_droit(120);
  1873  0013CA  0E00               	movlw	0
  1874  0013CC  6E02               	movwf	vitesse_moteur_droit@v+1,c
  1875  0013CE  0E78               	movlw	120
  1876  0013D0  6E01               	movwf	vitesse_moteur_droit@v,c
  1877  0013D2  ECDD  F00A         	call	_vitesse_moteur_droit	;wreg free
  1878                           
  1879                           ;projet_sumo.c: 219: for (int i = 0; i < 40; i++)
  1880  0013D6  0E00               	movlw	0
  1881  0013D8  6E0D               	movwf	init_sumo@i_993+1,c
  1882  0013DA  0E00               	movlw	0
  1883  0013DC  6E0C               	movwf	init_sumo@i_993,c
  1884  0013DE                     l1259:
  1885  0013DE  BE0D               	btfsc	init_sumo@i_993+1,7,c
  1886  0013E0  D008               	goto	l1263
  1887  0013E2  500D               	movf	init_sumo@i_993+1,w,c
  1888  0013E4  E112               	bnz	l153
  1889  0013E6  0E28               	movlw	40
  1890  0013E8  5C0C               	subwf	init_sumo@i_993,w,c
  1891  0013EA  B0D8               	btfsc	status,0,c
  1892  0013EC  D00E               	goto	l153
  1893  0013EE  D001               	goto	l1263
  1894  0013F0  D00C               	goto	l153
  1895  0013F2                     l1263:
  1896                           
  1897                           ;projet_sumo.c: 220: _delay((unsigned long)((50)*(10000000/4000.0)));
  1898  0013F2  0EA3               	movlw	163
  1899  0013F4  6E05               	movwf	??_init_sumo& (0+255),c
  1900  0013F6  0E55               	movlw	85
  1901  0013F8                     u1177:
  1902  0013F8  2EE8               	decfsz	wreg,f,c
  1903  0013FA  D7FE               	goto	u1177
  1904  0013FC  2E05               	decfsz	??_init_sumo& (0+255),f,c
  1905  0013FE  D7FC               	goto	u1177
  1906  001400  F000               	nop	
  1907  001402  4A0C               	infsnz	init_sumo@i_993,f,c
  1908  001404  2A0D               	incf	init_sumo@i_993+1,f,c
  1909  001406  D7EB               	goto	l1259
  1910  001408  D000               	goto	l153
  1911  00140A                     l153:
  1912  00140A  0012               	return		;funcret
  1913  00140C                     __end_of_init_sumo:
  1914                           	opt stack 0
  1915                           tblptru	equ	0xFF8
  1916                           tblptrh	equ	0xFF7
  1917                           tblptrl	equ	0xFF6
  1918                           tablat	equ	0xFF5
  1919                           wreg	equ	0xFE8
  1920                           postinc2	equ	0xFDE
  1921                           postdec2	equ	0xFDD
  1922                           fsr2h	equ	0xFDA
  1923                           fsr2l	equ	0xFD9
  1924                           status	equ	0xFD8
  1925                           
  1926 ;; *************** function _vitesse_moteur_gauche *****************
  1927 ;; Defined at:
  1928 ;;		line 146 in file "projet_sumo.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  v               2    0[COMRAM] int 
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;		None
  1933 ;; Return value:  Size  Location     Type
  1934 ;;		None               void
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1945 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;Total ram usage:        4 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; This function calls:
  1949 ;;		Nothing
  1950 ;; This function is called by:
  1951 ;;		_mode_course
  1952 ;;		_init_sumo
  1953 ;;		_mode_sumo
  1954 ;;		_main
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text13
  1959  00155A                     __ptext13:
  1960                           	opt stack 0
  1961  00155A                     _vitesse_moteur_gauche:
  1962                           	opt stack 30
  1963                           
  1964                           ;projet_sumo.c: 147: if (v < 0) {
  1965                           
  1966                           ;incstack = 0
  1967  00155A  AE02               	btfss	vitesse_moteur_gauche@v+1,7,c
  1968  00155C  D006               	goto	l108
  1969                           
  1970                           ;projet_sumo.c: 148: PORTCbits.RC5 = 0;
  1971  00155E  9A82               	bcf	3970,5,c	;volatile
  1972                           
  1973                           ;projet_sumo.c: 149: v = -v;
  1974  001560  6C01               	negf	vitesse_moteur_gauche@v,c
  1975  001562  1E02               	comf	vitesse_moteur_gauche@v+1,f,c
  1976  001564  B0D8               	btfsc	status,0,c
  1977  001566  2A02               	incf	vitesse_moteur_gauche@v+1,f,c
  1978                           
  1979                           ;projet_sumo.c: 150: } else
  1980  001568  D002               	goto	l1133
  1981  00156A                     l108:
  1982                           
  1983                           ;projet_sumo.c: 151: PORTCbits.RC5 = 1;
  1984  00156A  8A82               	bsf	3970,5,c	;volatile
  1985  00156C  D000               	goto	l1133
  1986  00156E                     l1133:
  1987                           
  1988                           ;projet_sumo.c: 154: CCP1CONbits.CCP1X = (unsigned) ((v & 0x0002) != 0);
  1989  00156E  A201               	btfss	vitesse_moteur_gauche@v,1,c
  1990  001570  D003               	goto	u630
  1991  001572  6A03               	clrf	??_vitesse_moteur_gauche& (0+255),c
  1992  001574  2A03               	incf	??_vitesse_moteur_gauche& (0+255),f,c
  1993  001576  D001               	goto	u648
  1994  001578                     u630:
  1995  001578  6A03               	clrf	??_vitesse_moteur_gauche& (0+255),c
  1996  00157A                     u648:
  1997  00157A  3A03               	swapf	??_vitesse_moteur_gauche,f,c
  1998  00157C  4603               	rlncf	??_vitesse_moteur_gauche,f,c
  1999  00157E  50BD               	movf	4029,w,c	;volatile
  2000  001580  1803               	xorwf	??_vitesse_moteur_gauche,w,c
  2001  001582  0BDF               	andlw	-33
  2002  001584  1803               	xorwf	??_vitesse_moteur_gauche,w,c
  2003  001586  6EBD               	movwf	4029,c	;volatile
  2004                           
  2005                           ;projet_sumo.c: 155: CCP1CONbits.CCP1Y = (unsigned) ((v & 0x0001) != 0);
  2006  001588  A001               	btfss	vitesse_moteur_gauche@v,0,c
  2007  00158A  D003               	goto	u650
  2008  00158C  6A03               	clrf	??_vitesse_moteur_gauche& (0+255),c
  2009  00158E  2A03               	incf	??_vitesse_moteur_gauche& (0+255),f,c
  2010  001590  D001               	goto	u668
  2011  001592                     u650:
  2012  001592  6A03               	clrf	??_vitesse_moteur_gauche& (0+255),c
  2013  001594                     u668:
  2014  001594  3A03               	swapf	??_vitesse_moteur_gauche,f,c
  2015  001596  50BD               	movf	4029,w,c	;volatile
  2016  001598  1803               	xorwf	??_vitesse_moteur_gauche,w,c
  2017  00159A  0BEF               	andlw	-17
  2018  00159C  1803               	xorwf	??_vitesse_moteur_gauche,w,c
  2019  00159E  6EBD               	movwf	4029,c	;volatile
  2020                           
  2021                           ;projet_sumo.c: 156: CCPR1L = (unsigned char) (v >> 2);
  2022  0015A0  C001  F003         	movff	vitesse_moteur_gauche@v,??_vitesse_moteur_gauche
  2023  0015A4  C002  F004         	movff	vitesse_moteur_gauche@v+1,??_vitesse_moteur_gauche+1
  2024  0015A8  3404               	rlcf	??_vitesse_moteur_gauche+1,w,c
  2025  0015AA  3204               	rrcf	??_vitesse_moteur_gauche+1,f,c
  2026  0015AC  3203               	rrcf	??_vitesse_moteur_gauche,f,c
  2027  0015AE  3404               	rlcf	??_vitesse_moteur_gauche+1,w,c
  2028  0015B0  3204               	rrcf	??_vitesse_moteur_gauche+1,f,c
  2029  0015B2  3203               	rrcf	??_vitesse_moteur_gauche,f,c
  2030  0015B4  5003               	movf	??_vitesse_moteur_gauche,w,c
  2031  0015B6  6EBE               	movwf	4030,c	;volatile
  2032  0015B8  0012               	return		;funcret
  2033  0015BA                     __end_of_vitesse_moteur_gauche:
  2034                           	opt stack 0
  2035                           tblptru	equ	0xFF8
  2036                           tblptrh	equ	0xFF7
  2037                           tblptrl	equ	0xFF6
  2038                           tablat	equ	0xFF5
  2039                           wreg	equ	0xFE8
  2040                           postinc2	equ	0xFDE
  2041                           postdec2	equ	0xFDD
  2042                           fsr2h	equ	0xFDA
  2043                           fsr2l	equ	0xFD9
  2044                           status	equ	0xFD8
  2045                           
  2046 ;; *************** function _vitesse_moteur_droit *****************
  2047 ;; Defined at:
  2048 ;;		line 159 in file "projet_sumo.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;  v               2    0[COMRAM] int 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;		None
  2053 ;; Return value:  Size  Location     Type
  2054 ;;		None               void
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2064 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;Total ram usage:        4 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; This function calls:
  2069 ;;		Nothing
  2070 ;; This function is called by:
  2071 ;;		_mode_course
  2072 ;;		_init_sumo
  2073 ;;		_mode_sumo
  2074 ;;		_main
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text14
  2079  0015BA                     __ptext14:
  2080                           	opt stack 0
  2081  0015BA                     _vitesse_moteur_droit:
  2082                           	opt stack 30
  2083                           
  2084                           ;projet_sumo.c: 160: if (v < 0) {
  2085                           
  2086                           ;incstack = 0
  2087  0015BA  AE02               	btfss	vitesse_moteur_droit@v+1,7,c
  2088  0015BC  D006               	goto	l113
  2089                           
  2090                           ;projet_sumo.c: 161: PORTCbits.RC0 = 0;
  2091  0015BE  9082               	bcf	3970,0,c	;volatile
  2092                           
  2093                           ;projet_sumo.c: 162: v = -v;
  2094  0015C0  6C01               	negf	vitesse_moteur_droit@v,c
  2095  0015C2  1E02               	comf	vitesse_moteur_droit@v+1,f,c
  2096  0015C4  B0D8               	btfsc	status,0,c
  2097  0015C6  2A02               	incf	vitesse_moteur_droit@v+1,f,c
  2098                           
  2099                           ;projet_sumo.c: 163: } else
  2100  0015C8  D002               	goto	l1141
  2101  0015CA                     l113:
  2102                           
  2103                           ;projet_sumo.c: 164: PORTCbits.RC0 = 1;
  2104  0015CA  8082               	bsf	3970,0,c	;volatile
  2105  0015CC  D000               	goto	l1141
  2106  0015CE                     l1141:
  2107                           
  2108                           ;projet_sumo.c: 166: CCP2CONbits.CCP2X = (unsigned) ((v & 0x0002) != 0);
  2109  0015CE  A201               	btfss	vitesse_moteur_droit@v,1,c
  2110  0015D0  D003               	goto	u680
  2111  0015D2  6A03               	clrf	??_vitesse_moteur_droit& (0+255),c
  2112  0015D4  2A03               	incf	??_vitesse_moteur_droit& (0+255),f,c
  2113  0015D6  D001               	goto	u698
  2114  0015D8                     u680:
  2115  0015D8  6A03               	clrf	??_vitesse_moteur_droit& (0+255),c
  2116  0015DA                     u698:
  2117  0015DA  3A03               	swapf	??_vitesse_moteur_droit,f,c
  2118  0015DC  4603               	rlncf	??_vitesse_moteur_droit,f,c
  2119  0015DE  50BA               	movf	4026,w,c	;volatile
  2120  0015E0  1803               	xorwf	??_vitesse_moteur_droit,w,c
  2121  0015E2  0BDF               	andlw	-33
  2122  0015E4  1803               	xorwf	??_vitesse_moteur_droit,w,c
  2123  0015E6  6EBA               	movwf	4026,c	;volatile
  2124                           
  2125                           ;projet_sumo.c: 167: CCP2CONbits.CCP2Y = (unsigned) ((v & 0x0001) != 0);
  2126  0015E8  A001               	btfss	vitesse_moteur_droit@v,0,c
  2127  0015EA  D003               	goto	u700
  2128  0015EC  6A03               	clrf	??_vitesse_moteur_droit& (0+255),c
  2129  0015EE  2A03               	incf	??_vitesse_moteur_droit& (0+255),f,c
  2130  0015F0  D001               	goto	u718
  2131  0015F2                     u700:
  2132  0015F2  6A03               	clrf	??_vitesse_moteur_droit& (0+255),c
  2133  0015F4                     u718:
  2134  0015F4  3A03               	swapf	??_vitesse_moteur_droit,f,c
  2135  0015F6  50BA               	movf	4026,w,c	;volatile
  2136  0015F8  1803               	xorwf	??_vitesse_moteur_droit,w,c
  2137  0015FA  0BEF               	andlw	-17
  2138  0015FC  1803               	xorwf	??_vitesse_moteur_droit,w,c
  2139  0015FE  6EBA               	movwf	4026,c	;volatile
  2140                           
  2141                           ;projet_sumo.c: 168: CCPR2L = (unsigned char) (v >> 2);
  2142  001600  C001  F003         	movff	vitesse_moteur_droit@v,??_vitesse_moteur_droit
  2143  001604  C002  F004         	movff	vitesse_moteur_droit@v+1,??_vitesse_moteur_droit+1
  2144  001608  3404               	rlcf	??_vitesse_moteur_droit+1,w,c
  2145  00160A  3204               	rrcf	??_vitesse_moteur_droit+1,f,c
  2146  00160C  3203               	rrcf	??_vitesse_moteur_droit,f,c
  2147  00160E  3404               	rlcf	??_vitesse_moteur_droit+1,w,c
  2148  001610  3204               	rrcf	??_vitesse_moteur_droit+1,f,c
  2149  001612  3203               	rrcf	??_vitesse_moteur_droit,f,c
  2150  001614  5003               	movf	??_vitesse_moteur_droit,w,c
  2151  001616  6EBB               	movwf	4027,c	;volatile
  2152  001618  0012               	return		;funcret
  2153  00161A                     __end_of_vitesse_moteur_droit:
  2154                           	opt stack 0
  2155                           tblptru	equ	0xFF8
  2156                           tblptrh	equ	0xFF7
  2157                           tblptrl	equ	0xFF6
  2158                           tablat	equ	0xFF5
  2159                           wreg	equ	0xFE8
  2160                           postinc2	equ	0xFDE
  2161                           postdec2	equ	0xFDD
  2162                           fsr2h	equ	0xFDA
  2163                           fsr2l	equ	0xFD9
  2164                           status	equ	0xFD8
  2165                           
  2166 ;; *************** function _init_pwm *****************
  2167 ;; Defined at:
  2168 ;;		line 43 in file "projet_sumo.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;		None
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;		None
  2173 ;; Return value:  Size  Location     Type
  2174 ;;		None               void
  2175 ;; Registers used:
  2176 ;;		wreg, status,2
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;Total ram usage:        0 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; This function calls:
  2189 ;;		Nothing
  2190 ;; This function is called by:
  2191 ;;		_main
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text15
  2196  001794                     __ptext15:
  2197                           	opt stack 0
  2198  001794                     _init_pwm:
  2199                           	opt stack 30
  2200                           
  2201                           ;projet_sumo.c: 44: CCP1CONbits.CCP1M = 0b1100;
  2202                           
  2203                           ;incstack = 0
  2204  001794  50BD               	movf	4029,w,c	;volatile
  2205  001796  0BF0               	andlw	-16
  2206  001798  090C               	iorlw	12
  2207  00179A  6EBD               	movwf	4029,c	;volatile
  2208                           
  2209                           ;projet_sumo.c: 45: CCP2CONbits.CCP2M = 0b1100;
  2210  00179C  50BA               	movf	4026,w,c	;volatile
  2211  00179E  0BF0               	andlw	-16
  2212  0017A0  090C               	iorlw	12
  2213  0017A2  6EBA               	movwf	4026,c	;volatile
  2214  0017A4  0012               	return		;funcret
  2215  0017A6                     __end_of_init_pwm:
  2216                           	opt stack 0
  2217                           tblptru	equ	0xFF8
  2218                           tblptrh	equ	0xFF7
  2219                           tblptrl	equ	0xFF6
  2220                           tablat	equ	0xFF5
  2221                           wreg	equ	0xFE8
  2222                           postinc2	equ	0xFDE
  2223                           postdec2	equ	0xFDD
  2224                           fsr2h	equ	0xFDA
  2225                           fsr2l	equ	0xFD9
  2226                           status	equ	0xFD8
  2227                           
  2228 ;; *************** function _init_moteur *****************
  2229 ;; Defined at:
  2230 ;;		line 48 in file "projet_sumo.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;		None
  2235 ;; Return value:  Size  Location     Type
  2236 ;;		None               void
  2237 ;; Registers used:
  2238 ;;		None
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2248 ;;Total ram usage:        0 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_main
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text16
  2258  0017C6                     __ptext16:
  2259                           	opt stack 0
  2260  0017C6                     _init_moteur:
  2261                           	opt stack 30
  2262                           
  2263                           ;projet_sumo.c: 49: TRISCbits.RC5 = 0;
  2264                           
  2265                           ;incstack = 0
  2266  0017C6  9A94               	bcf	3988,5,c	;volatile
  2267                           
  2268                           ;projet_sumo.c: 50: TRISCbits.RC0 = 0;
  2269  0017C8  9094               	bcf	3988,0,c	;volatile
  2270                           
  2271                           ;projet_sumo.c: 51: PORTCbits.RC0 = 1;
  2272  0017CA  8082               	bsf	3970,0,c	;volatile
  2273                           
  2274                           ;projet_sumo.c: 52: PORTCbits.RC1 = 1;
  2275  0017CC  8282               	bsf	3970,1,c	;volatile
  2276                           
  2277                           ;projet_sumo.c: 53: PORTCbits.RC5 = 1;
  2278  0017CE  8A82               	bsf	3970,5,c	;volatile
  2279                           
  2280                           ;projet_sumo.c: 54: PORTCbits.RC2 = 1;
  2281  0017D0  8482               	bsf	3970,2,c	;volatile
  2282  0017D2  0012               	return		;funcret
  2283  0017D4                     __end_of_init_moteur:
  2284                           	opt stack 0
  2285                           tblptru	equ	0xFF8
  2286                           tblptrh	equ	0xFF7
  2287                           tblptrl	equ	0xFF6
  2288                           tablat	equ	0xFF5
  2289                           wreg	equ	0xFE8
  2290                           postinc2	equ	0xFDE
  2291                           postdec2	equ	0xFDD
  2292                           fsr2h	equ	0xFDA
  2293                           fsr2l	equ	0xFD9
  2294                           status	equ	0xFD8
  2295                           
  2296 ;; *************** function _init_adc *****************
  2297 ;; Defined at:
  2298 ;;		line 13 in file "projet_sumo.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;		None
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;		None
  2303 ;; Return value:  Size  Location     Type
  2304 ;;		None               void
  2305 ;; Registers used:
  2306 ;;		wreg, status,2
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2316 ;;Total ram usage:        0 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; This function calls:
  2319 ;;		Nothing
  2320 ;; This function is called by:
  2321 ;;		_main
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           	psect	text17
  2326  0016EE                     __ptext17:
  2327                           	opt stack 0
  2328  0016EE                     _init_adc:
  2329                           	opt stack 30
  2330                           
  2331                           ;projet_sumo.c: 14: TRISAbits.RA0 = 1;
  2332                           
  2333                           ;incstack = 0
  2334  0016EE  8092               	bsf	3986,0,c	;volatile
  2335                           
  2336                           ;projet_sumo.c: 15: TRISAbits.RA1 = 1;
  2337  0016F0  8292               	bsf	3986,1,c	;volatile
  2338                           
  2339                           ;projet_sumo.c: 16: TRISAbits.RA2 = 1;
  2340  0016F2  8492               	bsf	3986,2,c	;volatile
  2341                           
  2342                           ;projet_sumo.c: 17: TRISAbits.RA3 = 1;
  2343  0016F4  8692               	bsf	3986,3,c	;volatile
  2344                           
  2345                           ;projet_sumo.c: 18: TRISAbits.RA4 = 1;
  2346  0016F6  8892               	bsf	3986,4,c	;volatile
  2347                           
  2348                           ;projet_sumo.c: 20: ADCON2bits.ADFM = 1;
  2349  0016F8  8EC0               	bsf	4032,7,c	;volatile
  2350                           
  2351                           ;projet_sumo.c: 21: ADCON1bits.VCFG0 = 0;
  2352  0016FA  98C1               	bcf	4033,4,c	;volatile
  2353                           
  2354                           ;projet_sumo.c: 22: ADCON1bits.VCFG1 = 0;
  2355  0016FC  9AC1               	bcf	4033,5,c	;volatile
  2356                           
  2357                           ;projet_sumo.c: 23: ADCON1bits.PCFG = 0b1010;
  2358  0016FE  50C1               	movf	4033,w,c	;volatile
  2359  001700  0BF0               	andlw	-16
  2360  001702  090A               	iorlw	10
  2361  001704  6EC1               	movwf	4033,c	;volatile
  2362                           
  2363                           ;projet_sumo.c: 24: ADCON2bits.ADCS = 0b101;
  2364  001706  50C0               	movf	4032,w,c	;volatile
  2365  001708  0BF8               	andlw	-8
  2366  00170A  0905               	iorlw	5
  2367  00170C  6EC0               	movwf	4032,c	;volatile
  2368                           
  2369                           ;projet_sumo.c: 25: ADCON2bits.ACQT = 0b001;
  2370  00170E  50C0               	movf	4032,w,c	;volatile
  2371  001710  0BC7               	andlw	-57
  2372  001712  0908               	iorlw	8
  2373  001714  6EC0               	movwf	4032,c	;volatile
  2374                           
  2375                           ;projet_sumo.c: 26: ADCON0bits.ADON = 1;
  2376  001716  80C2               	bsf	4034,0,c	;volatile
  2377  001718  0012               	return		;funcret
  2378  00171A                     __end_of_init_adc:
  2379                           	opt stack 0
  2380                           tblptru	equ	0xFF8
  2381                           tblptrh	equ	0xFF7
  2382                           tblptrl	equ	0xFF6
  2383                           tablat	equ	0xFF5
  2384                           wreg	equ	0xFE8
  2385                           postinc2	equ	0xFDE
  2386                           postdec2	equ	0xFDD
  2387                           fsr2h	equ	0xFDA
  2388                           fsr2l	equ	0xFD9
  2389                           status	equ	0xFD8
  2390                           
  2391 ;; *************** function _init_LS *****************
  2392 ;; Defined at:
  2393 ;;		line 66 in file "projet_sumo.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;		None
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;  i               2    1[COMRAM] int 
  2398 ;; Return value:  Size  Location     Type
  2399 ;;		None               void
  2400 ;; Registers used:
  2401 ;;		wreg, status,2, status,0
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2410 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2411 ;;Total ram usage:        3 bytes
  2412 ;; Hardware stack levels used:    1
  2413 ;; This function calls:
  2414 ;;		Nothing
  2415 ;; This function is called by:
  2416 ;;		_main
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text18
  2421  00161A                     __ptext18:
  2422                           	opt stack 0
  2423  00161A                     _init_LS:
  2424                           	opt stack 30
  2425                           
  2426                           ;projet_sumo.c: 67: TRISCbits.RC6 = 0;
  2427                           
  2428                           ;incstack = 0
  2429  00161A  9C94               	bcf	3988,6,c	;volatile
  2430                           
  2431                           ;projet_sumo.c: 68: TRISCbits.RC7 = 1;
  2432  00161C  8E94               	bsf	3988,7,c	;volatile
  2433                           
  2434                           ;projet_sumo.c: 69: TRISBbits.RB5 = 0;
  2435  00161E  9A93               	bcf	3987,5,c	;volatile
  2436                           
  2437                           ;projet_sumo.c: 70: TRISBbits.RB4 = 1;
  2438  001620  8893               	bsf	3987,4,c	;volatile
  2439                           
  2440                           ;projet_sumo.c: 71: TRISBbits.RB3 = 0;
  2441  001622  9693               	bcf	3987,3,c	;volatile
  2442                           
  2443                           ;projet_sumo.c: 73: PORTBbits.RB5 = 0;
  2444  001624  9A81               	bcf	3969,5,c	;volatile
  2445                           
  2446                           ;projet_sumo.c: 74: PORTBbits.RB3 = 1;
  2447  001626  8681               	bsf	3969,3,c	;volatile
  2448                           
  2449                           ;projet_sumo.c: 78: for (int i = 0; i < 20; i++)
  2450  001628  0E00               	movlw	0
  2451  00162A  6E03               	movwf	init_LS@i+1,c
  2452  00162C  0E00               	movlw	0
  2453  00162E  6E02               	movwf	init_LS@i,c
  2454  001630  BE03               	btfsc	init_LS@i+1,7,c
  2455  001632  D008               	goto	l907
  2456  001634  5003               	movf	init_LS@i+1,w,c
  2457  001636  E115               	bnz	l81
  2458  001638  0E14               	movlw	20
  2459  00163A  5C02               	subwf	init_LS@i,w,c
  2460  00163C  B0D8               	btfsc	status,0,c
  2461  00163E  D011               	goto	l81
  2462  001640  D001               	goto	l907
  2463  001642  D00F               	goto	l81
  2464  001644                     l907:
  2465                           
  2466                           ;projet_sumo.c: 79: _delay((unsigned long)((50)*(10000000/4000.0)));
  2467  001644  0EA3               	movlw	163
  2468  001646  6E01               	movwf	??_init_LS& (0+255),c
  2469  001648  0E55               	movlw	85
  2470  00164A                     u1187:
  2471  00164A  2EE8               	decfsz	wreg,f,c
  2472  00164C  D7FE               	goto	u1187
  2473  00164E  2E01               	decfsz	??_init_LS& (0+255),f,c
  2474  001650  D7FC               	goto	u1187
  2475  001652  F000               	nop	
  2476  001654  4A02               	infsnz	init_LS@i,f,c
  2477  001656  2A03               	incf	init_LS@i+1,f,c
  2478  001658  BE03               	btfsc	init_LS@i+1,7,c
  2479  00165A  D7F4               	goto	l907
  2480  00165C  5003               	movf	init_LS@i+1,w,c
  2481  00165E  E101               	bnz	u240
  2482  001660  D7EB               	goto	L2
  2483  001662                     u240:
  2484  001662                     l81:
  2485                           
  2486                           ;projet_sumo.c: 84: TXSTAbits.TX9 = 0;
  2487  001662  9CAC               	bcf	4012,6,c	;volatile
  2488                           
  2489                           ;projet_sumo.c: 85: TXSTAbits.SYNC = 0;
  2490  001664  98AC               	bcf	4012,4,c	;volatile
  2491                           
  2492                           ;projet_sumo.c: 86: TXSTAbits.BRGH = 1;
  2493  001666  84AC               	bsf	4012,2,c	;volatile
  2494                           
  2495                           ;projet_sumo.c: 87: TXSTAbits.TXEN = 1;
  2496  001668  8AAC               	bsf	4012,5,c	;volatile
  2497                           
  2498                           ;projet_sumo.c: 89: RCSTAbits.RX9 = 0;
  2499  00166A  9CAB               	bcf	4011,6,c	;volatile
  2500                           
  2501                           ;projet_sumo.c: 90: RCSTAbits.SPEN = 1;
  2502  00166C  8EAB               	bsf	4011,7,c	;volatile
  2503                           
  2504                           ;projet_sumo.c: 91: RCSTAbits.CREN = 1;
  2505  00166E  88AB               	bsf	4011,4,c	;volatile
  2506                           
  2507                           ;projet_sumo.c: 93: SPBRG = (unsigned char) (-1 + (float) 10000000 / (16.0 * (float) 960
      +                          0));
  2508  001670  0E40               	movlw	64
  2509  001672  6EAF               	movwf	4015,c	;volatile
  2510  001674  0012               	return		;funcret
  2511  001676                     __end_of_init_LS:
  2512                           	opt stack 0
  2513                           tblptru	equ	0xFF8
  2514                           tblptrh	equ	0xFF7
  2515                           tblptrl	equ	0xFF6
  2516                           tablat	equ	0xFF5
  2517                           wreg	equ	0xFE8
  2518                           postinc2	equ	0xFDE
  2519                           postdec2	equ	0xFDD
  2520                           fsr2h	equ	0xFDA
  2521                           fsr2l	equ	0xFD9
  2522                           status	equ	0xFD8
  2523                           
  2524 ;; *************** function _getch *****************
  2525 ;; Defined at:
  2526 ;;		line 125 in file "projet_sumo.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;		None
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  car             1    0[COMRAM] unsigned char 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  1    wreg      unsigned char 
  2533 ;; Registers used:
  2534 ;;		wreg, status,2
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2543 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;Total ram usage:        1 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; This function calls:
  2547 ;;		Nothing
  2548 ;; This function is called by:
  2549 ;;		_main
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           	psect	text19
  2554  0017A6                     __ptext19:
  2555                           	opt stack 0
  2556  0017A6                     _getch:
  2557                           	opt stack 30
  2558                           
  2559                           ;projet_sumo.c: 126: char car;
  2560                           ;projet_sumo.c: 128: while (PIR1bits.RCIF == 0);
  2561                           
  2562                           ;incstack = 0
  2563  0017A6  D000               	goto	l94
  2564  0017A8                     l94:
  2565  0017A8  AA9E               	btfss	3998,5,c	;volatile
  2566  0017AA  D7FE               	goto	l94
  2567                           
  2568                           ;projet_sumo.c: 129: car = RCREG;
  2569  0017AC  CFAE F001          	movff	4014,getch@car	;volatile
  2570                           
  2571                           ;projet_sumo.c: 130: PIR1bits.RCIF = 0;
  2572  0017B0  9A9E               	bcf	3998,5,c	;volatile
  2573                           
  2574                           ;projet_sumo.c: 131: return car;
  2575  0017B2  5001               	movf	getch@car,w,c
  2576  0017B4  D000               	goto	l97
  2577  0017B6                     l97:
  2578  0017B6  0012               	return		;funcret
  2579  0017B8                     __end_of_getch:
  2580                           	opt stack 0
  2581                           tblptru	equ	0xFF8
  2582                           tblptrh	equ	0xFF7
  2583                           tblptrl	equ	0xFF6
  2584                           tablat	equ	0xFF5
  2585                           wreg	equ	0xFE8
  2586                           postinc2	equ	0xFDE
  2587                           postdec2	equ	0xFDD
  2588                           fsr2h	equ	0xFDA
  2589                           fsr2l	equ	0xFD9
  2590                           status	equ	0xFD8
  2591                           tblptru	equ	0xFF8
  2592                           tblptrh	equ	0xFF7
  2593                           tblptrl	equ	0xFF6
  2594                           tablat	equ	0xFF5
  2595                           wreg	equ	0xFE8
  2596                           postinc2	equ	0xFDE
  2597                           postdec2	equ	0xFDD
  2598                           fsr2h	equ	0xFDA
  2599                           fsr2l	equ	0xFD9
  2600                           status	equ	0xFD8
  2601                           
  2602                           	psect	rparam
  2603  0000                     tblptru	equ	0xFF8
  2604                           tblptrh	equ	0xFF7
  2605                           tblptrl	equ	0xFF6
  2606                           tablat	equ	0xFF5
  2607                           wreg	equ	0xFE8
  2608                           postinc2	equ	0xFDE
  2609                           postdec2	equ	0xFDD
  2610                           fsr2h	equ	0xFDA
  2611                           fsr2l	equ	0xFD9
  2612                           status	equ	0xFD8


Data Sizes:
    Strings     26
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     38      38
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_2(CODE[19]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    mode_sumo@p	PTR int  size(2) Largest target is 10
		 -> read_adc@val(COMRAM[10]), 

    mode_course@p	PTR int  size(2) Largest target is 10
		 -> read_adc@val(COMRAM[10]), 

    sp__read_adc	PTR unsigned int  size(2) Largest target is 10
		 -> read_adc@val(COMRAM[10]), 

    print@text	PTR unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_mode_sumo
    _printf->_putch
    _print->_putch
    _mode_sumo->_read_adc
    _mode_course->_read_adc
    _init_sumo->_vitesse_moteur_droit
    _init_sumo->_vitesse_moteur_gauche

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    8868
                                             31 COMRAM     7     7      0
                              _getch
                            _init_LS
                           _init_adc
                        _init_moteur
                           _init_pwm
                          _init_sumo
                        _init_timer2
                           _init_tor
                        _mode_course
                          _mode_sumo
                              _print
                             _printf
                              _putch
               _vitesse_moteur_droit
              _vitesse_moteur_gauche
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     125
                                              1 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (1) _print                                                6     4      2     169
                                              1 COMRAM     6     4      2
                              _putch
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mode_sumo                                           15    15      0    2344
                                             16 COMRAM    15    15      0
                 _detection_obstacle
               _detection_obstacle_d
               _detection_obstacle_g
                           _read_adc
               _vitesse_moteur_droit
              _vitesse_moteur_gauche
 ---------------------------------------------------------------------------------
 (2) _detection_obstacle_g                                 3     1      2      24
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _detection_obstacle_d                                 3     1      2      24
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _detection_obstacle                                   3     1      2      24
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _mode_course                                         12    12      0    2295
                                             16 COMRAM    12    12      0
                           _read_adc
               _vitesse_moteur_droit
              _vitesse_moteur_gauche
 ---------------------------------------------------------------------------------
 (2) _read_adc                                            16    14      2     146
                                              0 COMRAM    16    14      2
 ---------------------------------------------------------------------------------
 (1) _init_tor                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_timer2                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_sumo                                            9     9      0    1942
                                              4 COMRAM     9     9      0
               _vitesse_moteur_droit
              _vitesse_moteur_gauche
 ---------------------------------------------------------------------------------
 (1) _vitesse_moteur_gauche                                4     2      2     879
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _vitesse_moteur_droit                                 4     2      2     879
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_pwm                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_moteur                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_LS                                              3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _getch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getch
   _init_LS
   _init_adc
   _init_moteur
   _init_pwm
   _init_sumo
     _vitesse_moteur_droit
     _vitesse_moteur_gauche
   _init_timer2
   _init_tor
   _mode_course
     _read_adc
     _vitesse_moteur_droit
     _vitesse_moteur_gauche
   _mode_sumo
     _detection_obstacle
     _detection_obstacle_d
     _detection_obstacle_g
     _read_adc
     _vitesse_moteur_droit
     _vitesse_moteur_gauche
   _print
     _putch
   _printf
     _putch
   _putch
   _vitesse_moteur_droit
   _vitesse_moteur_gauche

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     26      26       1       29.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM_1            80      0       0      37        0.0%
BIGRAM             EEE      0       0      38        0.0%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Oct 27 08:45:50 2022

                            l81 1662                              l85 176C                              l94 17A8  
                            l88 1774                              l97 17B6                     __CFG_BORV$3 000000  
  __end_of_vitesse_moteur_droit 161A                    __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000  
                  __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000                     __CFG_OSC$HS 000000  
                           l102 1514                             l120 1766                             l113 15CA  
                           l105 1558                             l130 174C                             l108 156A  
                           l125 1732                             l142 12F0                             l153 140A  
                           l168 11B0                             l907 1644                    __CFG_CPB$OFF 000000  
                           u240 1662                             _PR2 000FCB                    __CFG_CPD$OFF 000000  
                           u700 15F2                             u630 1578                             u650 1592  
                           u810 124E                             u718 15F4                             u830 128C  
                           u680 15D8                             u648 157A                             u840 129C  
                           u850 12C6                             u668 1594                             u860 12D6  
                           u790 122E                             u950 1098                             u960 10A8  
                           u698 15DA                             u970 10B8                             u980 10C8  
__size_of_vitesse_moteur_gauche 0060                             wreg 000FE8   __end_of_vitesse_moteur_gauche 15BA  
             mode_sumo@adcValue 0012                    __CFG_LVP$OFF 000000                    __CFG_WDT$OFF 000000  
                          l1111 14F6                            l1123 154E                            l1107 14E2  
                          l1203 123E                            l1141 15CE                            l1133 156E  
                          l1301 1124                            l1231 1326                            l1223 12FA  
                          l1215 12B6                            l1207 1262                            l1151 175E  
                          l1209 127C                            l1313 1196                            l1305 114A  
                          l1251 13A6                            l1243 1372                            l1235 1346  
                          l1227 130E                            l1163 172A                            l1309 1170  
                          l1181 1680                            l1317 16CC                            l1263 13F2  
                          l1255 13BE                            l1247 1392                            l1239 135A  
                          l1175 1744                            l1319 16D4                            l1185 16A2  
                          l1361 14A6                            l1259 13DE                            l1347 145E  
                          l1293 10F8                            l1365 14BA                            l1357 1494  
                          l1297 110C                            l1289 10D8                            l1369 14C8  
                          STR_1 1014                            STR_2 1001                            u1127 1112  
                          u1137 14F8                            u1147 1314                            u1157 1360  
                          u1167 13AC                            u1177 13F8                            u1187 164A  
                  __CFG_PWRT$ON 000000                            _main 140C                            fsr2h 000FDA  
                          fsr2l 000FD9                            start 0002                   __CFG_IESO$OFF 000000  
                 __CFG_MCLRE$ON 000000                    ___param_bank 000010                           ?_main 0001  
                         _RCREG 000FAE                           _SPBRG 000FAF                           _TRISC 000F94  
                         _TXREG 000FAD                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                  ?_init_moteur 0001                    ?_init_timer2 0001                   __CFG_WRT2$OFF 000000  
                 __CFG_WRT3$OFF 000000                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000  
                 __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000  
                __CFG_EBTRB$OFF 000000                           _getch 17A6                 __end_of_init_LS 1676  
                         _print 1676                           _putch 1768                  __CFG_BOREN$OFF 000000  
                         tablat 000FF5                    ?_mode_course 0001                           status 000FD8  
        _detection_obstacle$979 0003                  __CFG_PBADEN$ON 000000                 __initialization 17B8  
                  __end_of_main 14DA                          ??_main 0020      __end_of_detection_obstacle 1768  
                 __activetblptr 000001                          ?_getch 0001                          _ADRESH 000FC4  
                        _ADRESL 000FC3                          _CCPR1L 000FBE                          _CCPR2L 000FBB  
                        ?_print 0002                          ?_putch 0001            _vitesse_moteur_droit 15BA  
                __CFG_XINST$OFF 000000                  __CFG_STVREN$ON 000000                __end_of_init_adc 171A  
              __end_of_read_adc 155A                __end_of_init_pwm 17A6                __end_of_init_tor 17DA  
                        _printf 16C2                     read_adc@val 0005                       ??_init_LS 0001  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                          print@i 0006                          putch@c 0001  
                    __accesstop 0080         __end_of__initialization 17B8           ?_vitesse_moteur_droit 0001  
                 ___rparam_used 000001                  __pcstackCOMRAM 0001                   __end_of_getch 17B8  
                 __end_of_print 16C2                   __end_of_putch 177E                         ??_getch 0001  
          __size_of_init_moteur 000E            __size_of_init_timer2 0016                         ??_print 0004  
                       ??_putch 0001   __size_of_detection_obstacle_d 001A   __size_of_detection_obstacle_g 001A  
          __size_of_mode_course 0140              __size_of_init_sumo 011A              __size_of_mode_sumo 0196  
                       ?_printf 0002             mode_course@adcValue 0011           _vitesse_moteur_gauche 155A  
        ??_vitesse_moteur_droit 0003                       ?_init_adc 0001                       ?_read_adc 0001  
                     ?_init_pwm 0001                       ?_init_tor 0001                         __Hparam 0000  
                       __Lparam 0000                    __psmallconst 1000                         __pcinit 17B8  
                       __ramtop 1000                         __ptext0 140C                         __ptext1 16C2  
                       __ptext2 1676                         __ptext3 1768                         __ptext4 101C  
                       __ptext5 171A                         __ptext6 1734                         __ptext7 174E  
                       __ptext8 11B2                         __ptext9 14DA                 __size_of_printf 002C  
                       _init_LS 161A                       _T2CONbits 000FCA               __end_of_init_sumo 140C  
             __end_of_mode_sumo 11B2            end_of_initialization 17B8              _detection_obstacle 174E  
                    ??_init_adc 0001                      ??_read_adc 0003                      ??_init_pwm 0001  
                    ??_init_tor 0001             ?_detection_obstacle 0001                       _RCSTAbits 000FAB  
                       printf@c 0006                         printf@f 0002                         postdec2 000FDD  
                       postinc2 000FDE            init_timer2@PR2_value 0001                       _PORTBbits 000F81  
                     _PORTCbits 000F82                       _PORTDbits 000F83            ??_detection_obstacle 0003  
                     _TRISAbits 000F92                       _TRISBbits 000F93                       _TRISCbits 000F94  
                     _TRISDbits 000F95          ?_vitesse_moteur_gauche 0001                     _CCP1CONbits 000FBD  
      _detection_obstacle_d$983 0003        _detection_obstacle_g$981 0003                     _CCP2CONbits 000FBA  
                     _TXSTAbits 000FAC                      main@course 0024                      main@lettre 0026  
                  mode_course@p 001B                  __end_of_printf 16EE             start_initialization 17B8  
              __CFG_LPT1OSC$OFF 000000    __end_of_detection_obstacle_d 174E    __end_of_detection_obstacle_g 1734  
                    init_sumo@i 0006                        ??_printf 0004                   ??_init_moteur 0001  
                 ??_init_timer2 0001                      mode_sumo@i 001C                      mode_sumo@p 001E  
                 ??_mode_course 0011               __size_of_init_adc 002C               __size_of_read_adc 0080  
             __size_of_init_pwm 0012               __size_of_init_tor 0006               __CFG_CCP2MX$PORTC 000000  
                   __smallconst 1000                        ?_init_LS 0001                  __size_of_getch 0012  
                     _init_sumo 12F2                  __size_of_print 004C                  __size_of_putch 0016  
           __end_of_init_moteur 17D4             __end_of_init_timer2 1794                       _mode_sumo 101C  
 __size_of_vitesse_moteur_droit 0060                        _PIR1bits 000F9E             __end_of_mode_course 12F2  
              __CFG_WDTPS$32768 000000                      _ADCON0bits 000FC2                      _ADCON1bits 000FC1  
                    _ADCON2bits 000FC0         ??_vitesse_moteur_gauche 0003          vitesse_moteur_gauche@v 0001  
                    ?_init_sumo 0001                      ?_mode_sumo 0001            _detection_obstacle_d 1734  
          _detection_obstacle_g 171A                        __Hrparam 0000                        __Lrparam 0000  
                  __Lsmallconst 1000                       read_adc@i 000F     __size_of_detection_obstacle 001A  
              __size_of_init_LS 005C                     _init_moteur 17C6                     _init_timer2 177E  
                      __ptext10 17D4                        __ptext11 177E                        __ptext12 12F2  
                      __ptext13 155A                        __ptext14 15BA                        __ptext15 1794  
                      __ptext16 17C6                        __ptext17 16EE                        __ptext18 161A  
                      __ptext19 17A6           ?_detection_obstacle_d 0001           ?_detection_obstacle_g 0001  
                   _mode_course 11B2                        _init_adc 16EE                        _read_adc 14DA  
                 __size_of_main 00CE                        _init_pwm 1794                        _init_tor 17D4  
                      getch@car 0001                       print@text 0002                  init_sumo@i_991 0008  
                init_sumo@i_992 000A                  init_sumo@i_993 000C                        main@sumo 0022  
         vitesse_moteur_droit@v 0001                        init_LS@i 0002                     ??_init_sumo 0005  
                   ??_mode_sumo 0011                        printf@ap 0004                   main@PR2_value 0020  
        ??_detection_obstacle_d 0003          ??_detection_obstacle_g 0003  
